#include <windows.h>
#include <SokuLib.hpp>
#include "code_patches.hpp"

StackedMemory<28944> applyMemory;
StackedMemory<20048> internalMemory;
Allocator applyAllocator{applyMemory};
PatchListAllocator patchListAllocator{internalMemory};
TrampolineAllocator trampolineAllocator{internalMemory};

Patch::Patch(const PatchSkeleton &skeleton) :
	location(skeleton.location),
	patchSize(skeleton.patchSize),
	trampoline(nullptr)
{}

Patch::Patch(Patch &o)
{
	std::swap(this->location, o.location);
	std::swap(this->patchSize, o.patchSize);
	std::swap(this->trampoline, o.trampoline);
}
Patch::Patch(Patch &&o) noexcept
{
	std::swap(this->location, o.location);
	std::swap(this->patchSize, o.patchSize);
	std::swap(this->trampoline, o.trampoline);
}
Patch &Patch::operator=(Patch &&o) noexcept
{
	std::swap(this->location, o.location);
	std::swap(this->patchSize, o.patchSize);
	std::swap(this->trampoline, o.trampoline);
	return *this;
}

AppliedPatch::AppliedPatch(const Patch *patch) :
	_patch(patch),
	_oldData(applyMemory.alloc(patch->patchSize))
{
	memcpy(this->_oldData, patch->location, patch->patchSize);
	memset(patch->location, 0x90, patch->patchSize);
	SokuLib::TamperNearJmp((DWORD)patch->location, patch->trampoline);
}

AppliedPatch::~AppliedPatch()
{
	DWORD old;

	memcpy(this->_patch->location, this->_oldData, this->_patch->patchSize);
	applyMemory.dealloc(this->_oldData);
}

AppliedPatch::AppliedPatch(AppliedPatch &o)
{
	std::swap(this->_patch, o._patch);
	std::swap(this->_oldData, o._oldData);
}
AppliedPatch::AppliedPatch(AppliedPatch &&o) noexcept
{
	std::swap(this->_patch, o._patch);
	std::swap(this->_oldData, o._oldData);
}
AppliedPatch &AppliedPatch::operator=(AppliedPatch &&o) noexcept
{
	std::swap(this->_patch, o._patch);
	std::swap(this->_oldData, o._oldData);
	return *this;
}


// mimaNOP declared in mima.asm line 2
static unsigned char mimaNOP_byteCode[] = {
	0x90, // NOP ; line 3
};
static PatchByteCode mimaNOP_patchByteCode = { mimaNOP_byteCode, 1, nullptr, 0 };
// mimaFLDZ declared in mima.asm line 5
static unsigned char mimaFLDZ_byteCode[] = {
	0xD9, 0xEE, // FLDZ ; line 6
};
static PatchByteCode mimaFLDZ_patchByteCode = { mimaFLDZ_byteCode, 2, nullptr, 0 };
// mimaID_FIX declared in mima.asm line 10
static unsigned char mimaID_FIX_byteCode[] = {
	0xC7, 0x86, 0x4C, 0x03, 0x00, 0x00, 0x1D, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x34C],0x0000001D ; line 11
	0x66, 0x39, 0x9E, 0x96, 0x01, 0x00, 0x00,                   // CMP [ESI+0x196],BX ; line 13
};
static PatchByteCode mimaID_FIX_patchByteCode = { mimaID_FIX_byteCode, 17, nullptr, 0 };
// mimaSYS_COST declared in mima.asm line 20
static unsigned char mimaSYS_COST_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0xF5, 0x01, // CMP WORD PTR [ESI+0x13C],0x01F5 ; line 22
	0x0F, 0x84, 0xF5, 0x00, 0x00, 0x00,                   // JE LABELC ; line 23
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x02, // CMP WORD PTR [ESI+0x13C],0x0209 ; line 25
	0x0F, 0x84, 0xE6, 0x00, 0x00, 0x00,                   // JE LABELC ; line 26
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x31, 0x02, // CMP WORD PTR [ESI+0x13C],0x0231 ; line 28
	0x0F, 0x84, 0xD7, 0x00, 0x00, 0x00,                   // JE LABELC ; line 29
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x33, 0x02, // CMP WORD PTR [ESI+0x13C],0x0233 ; line 30
	0x0F, 0x84, 0xC8, 0x00, 0x00, 0x00,                   // JE LABELC ; line 31
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x1D, 0x02, // CMP WORD PTR [ESI+0x13C],0x021D ; line 33
	0x0F, 0x84, 0xB9, 0x00, 0x00, 0x00,                   // JE LABELC ; line 34
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0xFA, 0x01, // CMP WORD PTR [ESI+0x13C],0x01FA ; line 36
	0x0F, 0x84, 0xAA, 0x00, 0x00, 0x00,                   // JE LABELC ; line 37
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0xFF, 0x01, // CMP WORD PTR [ESI+0x13C],0x01FF ; line 39
	0x0F, 0x84, 0x9B, 0x00, 0x00, 0x00,                   // JE LABELC ; line 40
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x01, 0x02, // CMP WORD PTR [ESI+0x13C],0x0201 ; line 41
	0x0F, 0x84, 0x8C, 0x00, 0x00, 0x00,                   // JE LABELC ; line 42
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x0E, 0x02, // CMP WORD PTR [ESI+0x13C],0x020E ; line 44
	0x0F, 0x84, 0x7D, 0x00, 0x00, 0x00,                   // JE LABELC ; line 45
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x10, 0x02, // CMP WORD PTR [ESI+0x13C],0x0210 ; line 46
	0x0F, 0x84, 0x6E, 0x00, 0x00, 0x00,                   // JE LABELC ; line 47
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x13, 0x02, // CMP WORD PTR [ESI+0x13C],0x0213 ; line 49
	0x0F, 0x84, 0x5F, 0x00, 0x00, 0x00,                   // JE LABELC ; line 50
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x36, 0x02, // CMP WORD PTR [ESI+0x13C],0x0236 ; line 52
	0x0F, 0x84, 0x50, 0x00, 0x00, 0x00,                   // JE LABELC ; line 53
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x38, 0x02, // CMP WORD PTR [ESI+0x13C],0x0238 ; line 54
	0x0F, 0x84, 0x41, 0x00, 0x00, 0x00,                   // JE LABELC ; line 55
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x3B, 0x02, // CMP WORD PTR [ESI+0x13C],0x023B ; line 57
	0x0F, 0x84, 0x32, 0x00, 0x00, 0x00,                   // JE LABELC ; line 58
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x3D, 0x02, // CMP WORD PTR [ESI+0x13C],0x023D ; line 59
	0x0F, 0x84, 0x23, 0x00, 0x00, 0x00,                   // JE LABELC ; line 60
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x22, 0x02, // CMP WORD PTR [ESI+0x13C],0x0222 ; line 62
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                   // JE LABELC ; line 63
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x27, 0x02, // CMP WORD PTR [ESI+0x13C],0x0227 ; line 65
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE LABELC ; line 66
	0xE9, 0x13, 0x00, 0x00, 0x00,                         // JMP LABELB ; line 68
	0x6A, 0x78,                                           // PUSH 0x78 ; line 71
	0x68, 0xE8, 0x03, 0x00, 0x00,                         // PUSH 0x000003E8 ; line 72
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 73
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 74
	0xE9, 0x13, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 75
	0x6A, 0x78,                                           // PUSH 0x78 ; line 78
	0x68, 0xC8, 0x00, 0x00, 0x00,                         // PUSH 0x000000C8 ; line 79
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 80
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 81
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 82
};
static JumpTarget mimaSYS_COST_jumpData[] = {
	{ 0x10E, 0x47A9E0 },
	{ 0x121, 0x47A9E0 },
};
static PatchByteCode mimaSYS_COST_patchByteCode = { mimaSYS_COST_byteCode, 298, mimaSYS_COST_jumpData, 2 };
// mimaSYS_COST_A236FLASHFIX declared in mima.asm line 125
static unsigned char mimaSYS_COST_A236FLASHFIX_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x36, 0x02, // CMP WORD PTR [ESI+0x13C],0x0236 ; line 127
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                   // JE LABELC ; line 128
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x38, 0x02, // CMP WORD PTR [ESI+0x13C],0x0238 ; line 129
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE LABELC ; line 130
	0xE9, 0x1A, 0x00, 0x00, 0x00,                         // JMP LABELB ; line 132
	0x6A, 0x78,                                           // PUSH 0x78 ; line 135
	0x68, 0xE8, 0x03, 0x00, 0x00,                         // PUSH 0x000003E8 ; line 136
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 137
	0x66, 0x89, 0xBE, 0xD0, 0x07, 0x00, 0x00,             // MOV [ESI+0x7D0],DI ; line 138
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 139
	0xE9, 0x1A, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 140
	0x6A, 0x78,                                           // PUSH 0x78 ; line 143
	0x68, 0xC8, 0x00, 0x00, 0x00,                         // PUSH 0x000000C8 ; line 144
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 145
	0x66, 0x89, 0xBE, 0xD0, 0x07, 0x00, 0x00,             // MOV [ESI+0x7D0],DI ; line 146
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 147
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 148
};
static JumpTarget mimaSYS_COST_A236FLASHFIX_jumpData[] = {
	{ 0x034, 0x47A9E0 },
	{ 0x04E, 0x47A9E0 },
};
static PatchByteCode mimaSYS_COST_A236FLASHFIX_patchByteCode = { mimaSYS_COST_A236FLASHFIX_byteCode, 87, mimaSYS_COST_A236FLASHFIX_jumpData, 2 };
// mimaD236_SYS declared in mima.asm line 156
static unsigned char mimaD236_SYS_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 157
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 158
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 159
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 160
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 161
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 162
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 165
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 166
	0x68, 0xF4, 0x01, 0x00, 0x00,                               // PUSH 0x000001F4 ; line 167
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 168
	0xFF, 0xD0,                                                 // CALL EAX ; line 169
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x68F18D ; line 170
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 173
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x487CA0 ; line 174
};
static JumpTarget mimaD236_SYS_jumpData[] = {
	{ 0x03D, 0x68F18D },
	{ 0x044, 0x487CA0 },
};
static PatchByteCode mimaD236_SYS_patchByteCode = { mimaD236_SYS_byteCode, 72, mimaD236_SYS_jumpData, 2 };
// mimaD623_SYS declared in mima.asm line 180
static unsigned char mimaD623_SYS_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 184
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 185
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 186
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 187
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 190
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 191
	0x68, 0x08, 0x02, 0x00, 0x00,                               // PUSH 0x00000208 ; line 192
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 193
	0xFF, 0xD0,                                                 // CALL EAX ; line 194
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x690CD0 ; line 195
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 199
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x487CA0 ; line 200
};
static JumpTarget mimaD623_SYS_jumpData[] = {
	{ 0x02E, 0x690CD0 },
	{ 0x035, 0x487CA0 },
};
static PatchByteCode mimaD623_SYS_patchByteCode = { mimaD623_SYS_byteCode, 57, mimaD623_SYS_jumpData, 2 };
// mimaD214_SYS declared in mima.asm line 206
static unsigned char mimaD214_SYS_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 207
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 208
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 209
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 210
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 211
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 212
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 215
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 216
	0x68, 0x30, 0x02, 0x00, 0x00,                               // PUSH 0x00000230 ; line 217
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 218
	0xFF, 0xD0,                                                 // CALL EAX ; line 219
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x693605 ; line 220
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 223
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x487CA0 ; line 224
};
static JumpTarget mimaD214_SYS_jumpData[] = {
	{ 0x03D, 0x693605 },
	{ 0x044, 0x487CA0 },
};
static PatchByteCode mimaD214_SYS_patchByteCode = { mimaD214_SYS_byteCode, 72, mimaD214_SYS_jumpData, 2 };
// mimaD214_SYSAIR declared in mima.asm line 227
static unsigned char mimaD214_SYSAIR_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 228
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 229
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 230
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 231
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 232
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 233
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 236
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 237
	0x68, 0x32, 0x02, 0x00, 0x00,                               // PUSH 0x00000232 ; line 238
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 239
	0xFF, 0xD0,                                                 // CALL EAX ; line 240
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x693847 ; line 241
	0xBB, 0x02, 0x00, 0x00, 0x00,                               // MOV EBX,0x02 ; line 244
};
static JumpTarget mimaD214_SYSAIR_jumpData[] = {
	{ 0x03D, 0x693847 },
};
static PatchByteCode mimaD214_SYSAIR_patchByteCode = { mimaD214_SYSAIR_byteCode, 70, mimaD214_SYSAIR_jumpData, 1 };
// mimaA236_LASER_SYS declared in mima.asm line 249
static unsigned char mimaA236_LASER_SYS_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 250
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 251
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 252
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 253
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 254
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 255
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 258
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 259
	0x68, 0xF9, 0x01, 0x00, 0x00,                               // PUSH 0x000001F9 ; line 260
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 261
	0xFF, 0xD0,                                                 // CALL EAX ; line 262
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x68F707 ; line 263
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 266
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x487CA0 ; line 267
};
static JumpTarget mimaA236_LASER_SYS_jumpData[] = {
	{ 0x03D, 0x68F707 },
	{ 0x044, 0x487CA0 },
};
static PatchByteCode mimaA236_LASER_SYS_patchByteCode = { mimaA236_LASER_SYS_byteCode, 72, mimaA236_LASER_SYS_jumpData, 2 };
// mimaA236STEP_COSTB declared in mima.asm line 272
static unsigned char mimaA236STEP_COSTB_byteCode[] = {
	0x80, 0xF8, 0x04,             // CMP AL,0x04 ; line 273
	0x6A, 0x78,                   // PUSH 0x78 ; line 275
	0x68, 0xC8, 0x00, 0x00, 0x00, // PUSH 0x000000C8 ; line 276
	0x89, 0xF1,                   // MOV ECX,ESI ; line 277
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF, // CALL 0x47A9E0 ; line 278
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x68FBFF ; line 279
};
static JumpTarget mimaA236STEP_COSTB_jumpData[] = {
	{ 0x00D, 0x47A9E0 },
	{ 0x012, 0x68FBFF },
};
static PatchByteCode mimaA236STEP_COSTB_patchByteCode = { mimaA236STEP_COSTB_byteCode, 22, mimaA236STEP_COSTB_jumpData, 2 };
// mimaA236STEP_COSTC declared in mima.asm line 283
static unsigned char mimaA236STEP_COSTC_byteCode[] = {
	0x80, 0xF8, 0x04,             // CMP AL,0x04 ; line 284
	0x6A, 0x78,                   // PUSH 0x78 ; line 286
	0x68, 0xE8, 0x03, 0x00, 0x00, // PUSH 0x000003E8 ; line 287
	0x89, 0xF1,                   // MOV ECX,ESI ; line 288
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF, // CALL 0x47A9E0 ; line 289
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x68FEF8 ; line 290
};
static JumpTarget mimaA236STEP_COSTC_jumpData[] = {
	{ 0x00D, 0x47A9E0 },
	{ 0x012, 0x68FEF8 },
};
static PatchByteCode mimaA236STEP_COSTC_patchByteCode = { mimaA236STEP_COSTC_byteCode, 22, mimaA236STEP_COSTC_jumpData, 2 };
// mimaA236STEP_SYS declared in mima.asm line 294
static unsigned char mimaA236STEP_SYS_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 295
	0x0F, 0x85, 0x54, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 296
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 297
	0x0F, 0x85, 0x44, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 298
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 299
	0x0F, 0x8D, 0x35, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 300
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x01, 0x02,       // CMP WORD PTR [ESI+0x13C],0x0201 ; line 302
	0x0F, 0x84, 0x13, 0x00, 0x00, 0x00,                         // JE LABELAIR ; line 303
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 306
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 307
	0x68, 0xFE, 0x01, 0x00, 0x00,                               // PUSH 0x000001FE ; line 308
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 309
	0xFF, 0xD0,                                                 // CALL EAX ; line 310
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x68FE79 ; line 311
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 314
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 315
	0x68, 0x00, 0x02, 0x00, 0x00,                               // PUSH 0x00000200 ; line 316
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 317
	0xFF, 0xD0,                                                 // CALL EAX ; line 318
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x68FE79 ; line 319
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 322
};
static JumpTarget mimaA236STEP_SYS_jumpData[] = {
	{ 0x04C, 0x68FE79 },
	{ 0x05F, 0x68FE79 },
};
static PatchByteCode mimaA236STEP_SYS_patchByteCode = { mimaA236STEP_SYS_byteCode, 101, mimaA236STEP_SYS_jumpData, 2 };
// mimaA214_FLASH_SYS declared in mima.asm line 327
static unsigned char mimaA214_FLASH_SYS_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 328
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 329
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 330
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 331
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 332
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 333
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 336
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 337
	0x68, 0x35, 0x02, 0x00, 0x00,                               // PUSH 0x00000235 ; line 338
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 339
	0xFF, 0xD0,                                                 // CALL EAX ; line 340
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x694C84 ; line 341
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 344
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x487CA0 ; line 345
};
static JumpTarget mimaA214_FLASH_SYS_jumpData[] = {
	{ 0x03D, 0x694C84 },
	{ 0x044, 0x487CA0 },
};
static PatchByteCode mimaA214_FLASH_SYS_patchByteCode = { mimaA214_FLASH_SYS_byteCode, 72, mimaA214_FLASH_SYS_jumpData, 2 };
// mimaA214_FLASH_SYSAIR declared in mima.asm line 347
static unsigned char mimaA214_FLASH_SYSAIR_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 348
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 349
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 350
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 351
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 352
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 353
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 356
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 357
	0x68, 0x37, 0x02, 0x00, 0x00,                               // PUSH 0x00000237 ; line 358
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 359
	0xFF, 0xD0,                                                 // CALL EAX ; line 360
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x694C84 ; line 361
	0xBB, 0x02, 0x00, 0x00, 0x00,                               // MOV EBX,0x00000002 ; line 364
};
static JumpTarget mimaA214_FLASH_SYSAIR_jumpData[] = {
	{ 0x03D, 0x694C84 },
};
static PatchByteCode mimaA214_FLASH_SYSAIR_patchByteCode = { mimaA214_FLASH_SYSAIR_byteCode, 70, mimaA214_FLASH_SYSAIR_jumpData, 1 };
// mimaA214EYE_COST declared in mima.asm line 370
static unsigned char mimaA214EYE_COST_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x3B, 0x02, // CMP WORD PTR [ESI+0x13C],0x023B ; line 371
	0x0F, 0x85, 0x13, 0x00, 0x00, 0x00,                   // JNE LABELB ; line 372
	0x6A, 0x78,                                           // PUSH 0x78 ; line 373
	0x68, 0xE8, 0x03, 0x00, 0x00,                         // PUSH 0x000003E8 ; line 374
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 375
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 376
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x695E32 ; line 377
	0x6A, 0x78,                                           // PUSH 0x78 ; line 380
	0x68, 0xC8, 0x00, 0x00, 0x00,                         // PUSH 0x000000C8 ; line 381
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 382
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 383
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x695E32 ; line 384
};
static JumpTarget mimaA214EYE_COST_jumpData[] = {
	{ 0x019, 0x47A9E0 },
	{ 0x01E, 0x695E32 },
	{ 0x02C, 0x47A9E0 },
	{ 0x031, 0x695E32 },
};
static PatchByteCode mimaA214EYE_COST_patchByteCode = { mimaA214EYE_COST_byteCode, 53, mimaA214EYE_COST_jumpData, 4 };
// mimaA214EYE_COSTAIR declared in mima.asm line 388
static unsigned char mimaA214EYE_COSTAIR_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x3D, 0x02, // CMP WORD PTR [ESI+0x13C],0x023D ; line 389
	0x0F, 0x85, 0x13, 0x00, 0x00, 0x00,                   // JNE LABELB ; line 390
	0x6A, 0x78,                                           // PUSH 0x78 ; line 391
	0x68, 0xE8, 0x03, 0x00, 0x00,                         // PUSH 0x000003E8 ; line 392
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 393
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 394
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x696058 ; line 395
	0x6A, 0x78,                                           // PUSH 0x78 ; line 398
	0x68, 0xC8, 0x00, 0x00, 0x00,                         // PUSH 0x00000C8 ; line 399
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 400
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 401
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x696058 ; line 402
};
static JumpTarget mimaA214EYE_COSTAIR_jumpData[] = {
	{ 0x019, 0x47A9E0 },
	{ 0x01E, 0x696058 },
	{ 0x02C, 0x47A9E0 },
	{ 0x031, 0x696058 },
};
static PatchByteCode mimaA214EYE_COSTAIR_patchByteCode = { mimaA214EYE_COSTAIR_byteCode, 53, mimaA214EYE_COSTAIR_jumpData, 4 };
// mimaA214_EYE_SYS declared in mima.asm line 406
static unsigned char mimaA214_EYE_SYS_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 407
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 408
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 409
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 410
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 411
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 412
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 415
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 416
	0x68, 0x3A, 0x02, 0x00, 0x00,                               // PUSH 0x0000023A ; line 417
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 418
	0xFF, 0xD0,                                                 // CALL EAX ; line 419
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x695F51 ; line 420
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 423
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x487CA0 ; line 424
};
static JumpTarget mimaA214_EYE_SYS_jumpData[] = {
	{ 0x03D, 0x695F51 },
	{ 0x044, 0x487CA0 },
};
static PatchByteCode mimaA214_EYE_SYS_patchByteCode = { mimaA214_EYE_SYS_byteCode, 72, mimaA214_EYE_SYS_jumpData, 2 };
// mimaA214_EYE_SYSAIR declared in mima.asm line 426
static unsigned char mimaA214_EYE_SYSAIR_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 427
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 428
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 429
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 430
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 431
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 432
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 435
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 436
	0x68, 0x3C, 0x02, 0x00, 0x00,                               // PUSH 0x0000023C ; line 437
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 438
	0xFF, 0xD0,                                                 // CALL EAX ; line 439
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x695F51 ; line 440
	0x66, 0x39, 0xBE, 0x3E, 0x01, 0x00, 0x00,                   // CMP [ESI+0x13E],DI ; line 443
};
static JumpTarget mimaA214_EYE_SYSAIR_jumpData[] = {
	{ 0x03D, 0x695F51 },
};
static PatchByteCode mimaA214_EYE_SYSAIR_patchByteCode = { mimaA214_EYE_SYSAIR_byteCode, 72, mimaA214_EYE_SYSAIR_jumpData, 1 };
// mimaA623_AST_SYS declared in mima.asm line 448
static unsigned char mimaA623_AST_SYS_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 449
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 450
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 451
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 452
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 453
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 454
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 457
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 458
	0x68, 0x0D, 0x02, 0x00, 0x00,                               // PUSH 0x0000020D ; line 459
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 460
	0xFF, 0xD0,                                                 // CALL EAX ; line 461
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x690DBE ; line 462
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 465
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x487CA0 ; line 466
};
static JumpTarget mimaA623_AST_SYS_jumpData[] = {
	{ 0x03D, 0x690DBE },
	{ 0x044, 0x487CA0 },
};
static PatchByteCode mimaA623_AST_SYS_patchByteCode = { mimaA623_AST_SYS_byteCode, 72, mimaA623_AST_SYS_jumpData, 2 };
// mimaA623_AST_AIR_SYS declared in mima.asm line 470
static unsigned char mimaA623_AST_AIR_SYS_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 471
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 472
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 473
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 474
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 475
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 476
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 479
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 480
	0x68, 0x0F, 0x02, 0x00, 0x00,                               // PUSH 0x0000020F ; line 481
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 482
	0xFF, 0xD0,                                                 // CALL EAX ; line 483
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x690FF2 ; line 484
	0x66, 0x39, 0xBE, 0x3E, 0x01, 0x00, 0x00,                   // CMP [ESI+0x13E],DI ; line 487
};
static JumpTarget mimaA623_AST_AIR_SYS_jumpData[] = {
	{ 0x03D, 0x690FF2 },
};
static PatchByteCode mimaA623_AST_AIR_SYS_patchByteCode = { mimaA623_AST_AIR_SYS_byteCode, 72, mimaA623_AST_AIR_SYS_jumpData, 1 };
// mimaA623_GRAB_SYS declared in mima.asm line 491
static unsigned char mimaA623_GRAB_SYS_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 492
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 493
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 494
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 495
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 496
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 497
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 500
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 501
	0x68, 0x12, 0x02, 0x00, 0x00,                               // PUSH 0x00000212 ; line 502
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 503
	0xFF, 0xD0,                                                 // CALL EAX ; line 504
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x691C80 ; line 505
	0x66, 0x39, 0x9E, 0x3E, 0x01, 0x00, 0x00,                   // CMP [ESI+0x13E],BX ; line 508
};
static JumpTarget mimaA623_GRAB_SYS_jumpData[] = {
	{ 0x03D, 0x691C80 },
};
static PatchByteCode mimaA623_GRAB_SYS_patchByteCode = { mimaA623_GRAB_SYS_byteCode, 72, mimaA623_GRAB_SYS_jumpData, 1 };
// mimaA22STOCK_SYS declared in mima.asm line 512
static unsigned char mimaA22STOCK_SYS_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 513
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 514
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 515
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 516
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 517
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 518
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 521
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 522
	0x68, 0x21, 0x02, 0x00, 0x00,                               // PUSH 0x00000221 ; line 523
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 524
	0xFF, 0xD0,                                                 // CALL EAX ; line 525
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x692CBE ; line 526
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 529
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x487CA0 ; line 530
};
static JumpTarget mimaA22STOCK_SYS_jumpData[] = {
	{ 0x03D, 0x692CBE },
	{ 0x044, 0x487CA0 },
};
static PatchByteCode mimaA22STOCK_SYS_patchByteCode = { mimaA22STOCK_SYS_byteCode, 72, mimaA22STOCK_SYS_jumpData, 2 };
// mimaA22ZONE_SYS declared in mima.asm line 534
static unsigned char mimaA22ZONE_SYS_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 535
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 536
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 537
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 538
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 539
	0x0F, 0x8D, 0x13, 0x00, 0x00, 0x00,                         // JGE LABEL1 ; line 540
	0x8B, 0x16,                                                 // MOV EDX,[ESI] ; line 543
	0x8B, 0x42, 0x08,                                           // MOV EAX,[EDX+0x08] ; line 544
	0x68, 0x26, 0x02, 0x00, 0x00,                               // PUSH 0x00000226 ; line 545
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 546
	0xFF, 0xD0,                                                 // CALL EAX ; line 547
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6933E0 ; line 548
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 551
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x487CA0 ; line 552
};
static JumpTarget mimaA22ZONE_SYS_jumpData[] = {
	{ 0x03D, 0x6933E0 },
	{ 0x044, 0x487CA0 },
};
static PatchByteCode mimaA22ZONE_SYS_patchByteCode = { mimaA22ZONE_SYS_byteCode, 72, mimaA22ZONE_SYS_jumpData, 2 };
// mimaD214_MULTICAST declared in mima.asm line 556
static unsigned char mimaD214_MULTICAST_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x07, 0x00, // CMP WORD PTR [ESI+0x140],0x0007 ; line 557
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE LABEL1 ; line 558
	0xE9, 0x49, 0x00, 0x00, 0x00,                         // JMP LABEL2 ; line 559
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x31, 0x02, // CMP WORD PTR [ESI+0x13C],0x0231 ; line 561
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                   // JE LABELC ; line 562
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x33, 0x02, // CMP WORD PTR [ESI+0x13C],0x0233 ; line 563
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE LABELC ; line 564
	0xE9, 0x13, 0x00, 0x00, 0x00,                         // JMP LABELB ; line 565
	0x6A, 0x78,                                           // PUSH 0x78 ; line 568
	0x68, 0xE8, 0x03, 0x00, 0x00,                         // PUSH 0x000003E8 ; line 569
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 570
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 571
	0xE9, 0x13, 0x00, 0x00, 0x00,                         // JMP LABEL2 ; line 572
	0x6A, 0x78,                                           // PUSH 0x78 ; line 575
	0x68, 0xC8, 0x00, 0x00, 0x00,                         // PUSH 0x000000C8 ; line 576
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 577
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 578
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP LABEL2 ; line 579
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x6935D5 ; line 582
};
static JumpTarget mimaD214_MULTICAST_jumpData[] = {
	{ 0x041, 0x47A9E0 },
	{ 0x054, 0x47A9E0 },
	{ 0x05E, 0x6935D5 },
};
static PatchByteCode mimaD214_MULTICAST_patchByteCode = { mimaD214_MULTICAST_byteCode, 98, mimaD214_MULTICAST_jumpData, 3 };
// mimaD214_MULTICAST_AIR declared in mima.asm line 585
static unsigned char mimaD214_MULTICAST_AIR_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x07, 0x00, // CMP WORD PTR [ESI+0x140],0x0007 ; line 586
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE LABEL1 ; line 587
	0xE9, 0x49, 0x00, 0x00, 0x00,                         // JMP LABEL2 ; line 588
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x31, 0x02, // CMP WORD PTR [ESI+0x13C],0x0231 ; line 590
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                   // JE LABELC ; line 591
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x33, 0x02, // CMP WORD PTR [ESI+0x13C],0x0233 ; line 592
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE LABELC ; line 593
	0xE9, 0x13, 0x00, 0x00, 0x00,                         // JMP LABELB ; line 594
	0x6A, 0x78,                                           // PUSH 0x78 ; line 597
	0x68, 0xE8, 0x03, 0x00, 0x00,                         // PUSH 0x000003E8 ; line 598
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 599
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 600
	0xE9, 0x13, 0x00, 0x00, 0x00,                         // JMP LABEL2 ; line 601
	0x6A, 0x78,                                           // PUSH 0x78 ; line 604
	0x68, 0xC8, 0x00, 0x00, 0x00,                         // PUSH 0x000000C8 ; line 605
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 606
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 607
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP LABEL2 ; line 608
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x693A46 ; line 611
};
static JumpTarget mimaD214_MULTICAST_AIR_jumpData[] = {
	{ 0x041, 0x47A9E0 },
	{ 0x054, 0x47A9E0 },
	{ 0x05E, 0x693A46 },
};
static PatchByteCode mimaD214_MULTICAST_AIR_patchByteCode = { mimaD214_MULTICAST_AIR_byteCode, 98, mimaD214_MULTICAST_AIR_jumpData, 3 };
// mimaD214_MULTICAST2 declared in mima.asm line 616
static unsigned char mimaD214_MULTICAST2_byteCode[] = {
	0x80, 0xBE, 0xA7, 0x06, 0x00, 0x00, 0x01,             // CMP BYTE PTR [ESI+0x6A7],0x01 ; line 617
	0x0F, 0x8C, 0x35, 0x00, 0x00, 0x00,                   // JL LABEL0 ; line 618
	0x80, 0xBE, 0xA7, 0x06, 0x00, 0x00, 0x03,             // CMP BYTE PTR [ESI+0x6A7],0x03 ; line 619
	0x0F, 0x8C, 0x14, 0x00, 0x00, 0x00,                   // JL LABEL12 ; line 620
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x0A, 0x00, // CMP WORD PTR [ESI+0x140],0x000A ; line 623
	0x0F, 0x8F, 0xDE, 0xAD, 0xBE, 0xEF,                   // JG 0x6935D5 ; line 624
	0xE9, 0x28, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 625
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x09, 0x00, // CMP WORD PTR [ESI+0x140],0x0009 ; line 628
	0x0F, 0x8F, 0xDE, 0xAD, 0xBE, 0xEF,                   // JG 0x6935D5 ; line 629
	0xE9, 0x14, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 630
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x08, 0x00, // CMP WORD PTR [ESI+0x140],0x0008 ; line 633
	0x0F, 0x8F, 0xDE, 0xAD, 0xBE, 0xEF,                   // JG 0x6935D5 ; line 634
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 635
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x07, 0x00, // CMP WORD PTR [ESI+0x140],0x0007 ; line 638
	0x0F, 0x8C, 0xDE, 0xAD, 0xBE, 0xEF,                   // JL 0x6935D5 ; line 639
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x6936B0 ; line 640
};
static JumpTarget mimaD214_MULTICAST2_jumpData[] = {
	{ 0x025, 0x6935D5 },
	{ 0x039, 0x6935D5 },
	{ 0x04D, 0x6935D5 },
	{ 0x061, 0x6935D5 },
	{ 0x066, 0x6936B0 },
};
static PatchByteCode mimaD214_MULTICAST2_patchByteCode = { mimaD214_MULTICAST2_byteCode, 106, mimaD214_MULTICAST2_jumpData, 5 };
// mimaD214_MULTICAST2_AIR declared in mima.asm line 642
static unsigned char mimaD214_MULTICAST2_AIR_byteCode[] = {
	0x80, 0xBE, 0xA7, 0x06, 0x00, 0x00, 0x01,             // CMP BYTE PTR [ESI+0x6A7],0x01 ; line 643
	0x0F, 0x8C, 0x35, 0x00, 0x00, 0x00,                   // JL LABEL0 ; line 644
	0x80, 0xBE, 0xA7, 0x06, 0x00, 0x00, 0x03,             // CMP BYTE PTR [ESI+0x6A7],0x03 ; line 645
	0x0F, 0x8C, 0x14, 0x00, 0x00, 0x00,                   // JL LABEL12 ; line 646
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x0A, 0x00, // CMP WORD PTR [ESI+0x140],0x000A ; line 649
	0x0F, 0x8F, 0xDE, 0xAD, 0xBE, 0xEF,                   // JG 0x693A46 ; line 650
	0xE9, 0x28, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 651
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x09, 0x00, // CMP WORD PTR [ESI+0x140],0x0009 ; line 654
	0x0F, 0x8F, 0xDE, 0xAD, 0xBE, 0xEF,                   // JG 0x693A46 ; line 655
	0xE9, 0x14, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 656
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x08, 0x00, // CMP WORD PTR [ESI+0x140],0x0008 ; line 659
	0x0F, 0x8F, 0xDE, 0xAD, 0xBE, 0xEF,                   // JG 0x693A46 ; line 660
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 661
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x07, 0x00, // CMP WORD PTR [ESI+0x140],0x0007 ; line 664
	0x0F, 0x8C, 0xDE, 0xAD, 0xBE, 0xEF,                   // JL 0x693A46 ; line 665
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x693B99 ; line 666
};
static JumpTarget mimaD214_MULTICAST2_AIR_jumpData[] = {
	{ 0x025, 0x693A46 },
	{ 0x039, 0x693A46 },
	{ 0x04D, 0x693A46 },
	{ 0x061, 0x693A46 },
	{ 0x066, 0x693B99 },
};
static PatchByteCode mimaD214_MULTICAST2_AIR_patchByteCode = { mimaD214_MULTICAST2_AIR_byteCode, 106, mimaD214_MULTICAST2_AIR_jumpData, 5 };
// mimaD214_NOCHARGE declared in mima.asm line 671
static unsigned char mimaD214_NOCHARGE_byteCode[] = {
	0xC6, 0x86, 0xF4, 0x07, 0x00, 0x00, 0x00, // MOV BYTE PTR [ESI+0x07F4],0x00 ; line 672
};
static PatchByteCode mimaD214_NOCHARGE_patchByteCode = { mimaD214_NOCHARGE_byteCode, 7, nullptr, 0 };
// mimaD214_SOUND_ANDHIT declared in mima.asm line 679
static unsigned char mimaD214_SOUND_ANDHIT_byteCode[] = {
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 683
	0x81, 0xB9, 0x58, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x758],0x00 ; line 686
	0x0F, 0x8F, 0xBA, 0x00, 0x00, 0x00,                         // JG LABELM_DOWN ; line 687
	0x81, 0xB9, 0x78, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x778],0x00 ; line 688
	0x0F, 0x8F, 0xAA, 0x00, 0x00, 0x00,                         // JG LABELM_DOWN ; line 689
	0x81, 0xB9, 0x58, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x758],0x00 ; line 691
	0x0F, 0x8C, 0x55, 0x00, 0x00, 0x00,                         // JL LABELM_UP ; line 692
	0x81, 0xB9, 0x78, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x778],0x00 ; line 693
	0x0F, 0x8C, 0x45, 0x00, 0x00, 0x00,                         // JL LABELM_UP ; line 694
	0x81, 0xB9, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x754],0x00 ; line 696
	0x0F, 0x8F, 0x91, 0x01, 0x00, 0x00,                         // JG LABELM_RIGHTONLY ; line 697
	0x81, 0xB9, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x774],0x00 ; line 698
	0x0F, 0x8F, 0x81, 0x01, 0x00, 0x00,                         // JG LABELM_RIGHTONLY ; line 699
	0x81, 0xB9, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x754],0x00 ; line 701
	0x0F, 0x8C, 0x88, 0x01, 0x00, 0x00,                         // JL LABELM_LEFTONLY ; line 702
	0x81, 0xB9, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x774],0x00 ; line 703
	0x0F, 0x8C, 0x78, 0x01, 0x00, 0x00,                         // JL LABELM_LEFTONLY ; line 704
	0xE9, 0x8A, 0x01, 0x00, 0x00,                               // JMP LABELX ; line 705
	0x81, 0xB9, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x754],0x00 ; line 708
	0x0F, 0x8F, 0x7A, 0x00, 0x00, 0x00,                         // JG LABELM_UPRIGHT ; line 709
	0x81, 0xB9, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x774],0x00 ; line 710
	0x0F, 0x8F, 0x6A, 0x00, 0x00, 0x00,                         // JG LABELM_UPRIGHT ; line 711
	0x81, 0xB9, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x754],0x00 ; line 713
	0x0F, 0x8C, 0xAC, 0x00, 0x00, 0x00,                         // JL LABELM_UPLEFT ; line 714
	0x81, 0xB9, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x774],0x00 ; line 715
	0x0F, 0x8C, 0x9C, 0x00, 0x00, 0x00,                         // JL LABELM_UPLEFT ; line 716
	0xE9, 0xE9, 0x00, 0x00, 0x00,                               // JMP LABELM_UPONLY ; line 717
	0x81, 0xB9, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x754],0x00 ; line 720
	0x0F, 0x8F, 0x5E, 0x00, 0x00, 0x00,                         // JG LABELM_DOWNRIGHT ; line 721
	0x81, 0xB9, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x774],0x00 ; line 722
	0x0F, 0x8F, 0x4E, 0x00, 0x00, 0x00,                         // JG LABELM_DOWNRIGHT ; line 723
	0x81, 0xB9, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x754],0x00 ; line 725
	0x0F, 0x8C, 0x90, 0x00, 0x00, 0x00,                         // JL LABELM_DOWNLEFT ; line 726
	0x81, 0xB9, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x774],0x00 ; line 727
	0x0F, 0x8C, 0x80, 0x00, 0x00, 0x00,                         // JL LABELM_DOWNLEFT ; line 728
	0xE9, 0xBB, 0x00, 0x00, 0x00,                               // JMP LABELM_DOWNONLY ; line 729
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 732
	0xD8, 0x05, 0x10, 0x78, 0x86, 0x00,                         // FADD DWORD PTR [0x867810] ; line 733
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 734
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 735
	0xD8, 0x05, 0x10, 0x78, 0x86, 0x00,                         // FADD DWORD PTR [0x867810] ; line 736
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 737
	0xE9, 0xD7, 0x00, 0x00, 0x00,                               // JMP LABELX ; line 738
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 740
	0xD8, 0x05, 0x10, 0x78, 0x86, 0x00,                         // FADD DWORD PTR [0x867810] ; line 741
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 742
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 743
	0xD8, 0x25, 0x10, 0x78, 0x86, 0x00,                         // FSUB DWORD PTR [0x867810] ; line 744
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 745
	0xE9, 0xAE, 0x00, 0x00, 0x00,                               // JMP LABELX ; line 746
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 748
	0xD8, 0x25, 0x10, 0x78, 0x86, 0x00,                         // FSUB DWORD PTR [0x867810] ; line 749
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 750
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 751
	0xD8, 0x05, 0x10, 0x78, 0x86, 0x00,                         // FADD DWORD PTR [0x867810] ; line 752
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 753
	0xE9, 0x85, 0x00, 0x00, 0x00,                               // JMP LABELX ; line 754
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 756
	0xD8, 0x25, 0x10, 0x78, 0x86, 0x00,                         // FSUB DWORD PTR [0x867810] ; line 757
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 758
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 759
	0xD8, 0x25, 0x10, 0x78, 0x86, 0x00,                         // FSUB DWORD PTR [0x867810] ; line 760
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 761
	0xE9, 0x5C, 0x00, 0x00, 0x00,                               // JMP LABELX ; line 762
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 764
	0xD8, 0x05, 0x10, 0x78, 0x86, 0x00,                         // FADD DWORD PTR [0x867810] ; line 765
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 766
	0xE9, 0x45, 0x00, 0x00, 0x00,                               // JMP LABELX ; line 767
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 769
	0xD8, 0x25, 0x10, 0x78, 0x86, 0x00,                         // FSUB DWORD PTR [0x867810] ; line 770
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 771
	0xE9, 0x2E, 0x00, 0x00, 0x00,                               // JMP LABELX ; line 772
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 774
	0xD8, 0x05, 0x10, 0x78, 0x86, 0x00,                         // FADD DWORD PTR [0x867810] ; line 775
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 776
	0xE9, 0x17, 0x00, 0x00, 0x00,                               // JMP LABELX ; line 777
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 779
	0xD8, 0x25, 0x10, 0x78, 0x86, 0x00,                         // FSUB DWORD PTR [0x867810] ; line 780
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 781
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP LABELX ; line 782
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 789
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x31, 0x02,       // CMP WORD PTR [ECX+0x13C],0x0231 ; line 790
	0x0F, 0x85, 0x10, 0x00, 0x00, 0x00,                         // JNE LABELZ ; line 791
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x01 ; line 792
	0x0F, 0x85, 0x00, 0x00, 0x00, 0x00,                         // JNE LABELZ ; line 793
	0x6A, 0x05,                                                 // PUSH 0x05 ; line 801
	0x6A, 0x02,                                                 // PUSH 0x02 ; line 802
	0x6A, 0x00,                                                 // PUSH 0x00 ; line 803
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 804
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE90 ; line 805
	0x84, 0xC0,                                                 // TEST AL,AL ; line 806
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,                         // JNE 0x69EBDB ; line 807
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0xB4, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0xB4 ; line 823
	0x0F, 0x85, 0x0D, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 824
	0x6A, 0x01,                                                 // PUSH 0x01 ; line 825
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 826
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x464980 ; line 827
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x11C] ; line 850
};
static JumpTarget mimaD214_SOUND_ANDHIT_jumpData[] = {
	{ 0x243, 0x48CE90 },
	{ 0x24B, 0x69EBDB },
	{ 0x268, 0x464980 },
};
static PatchByteCode mimaD214_SOUND_ANDHIT_patchByteCode = { mimaD214_SOUND_ANDHIT_byteCode, 626, mimaD214_SOUND_ANDHIT_jumpData, 3 };
// mimaA236JGRAVITY declared in mima.asm line 856
static unsigned char mimaA236JGRAVITY_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x00, 0x02, // CMP WORD PTR [ESI+0x13C],0x0200 ; line 857
	0x0F, 0x8C, 0x1B, 0x00, 0x00, 0x00,                   // JL LABEL1 ; line 858
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x04, 0x00, // CMP WORD PTR [ESI+0x140],0x0004 ; line 859
	0x0F, 0x8C, 0x0C, 0x00, 0x00, 0x00,                   // JL LABEL1 ; line 860
	0xD9, 0x05, 0xA8, 0x77, 0x86, 0x00,                   // FLD DWORD PTR [0x8677A8] ; line 861
	0xD9, 0x9E, 0x00, 0x01, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0x100] ; line 862
	0xD9, 0x86, 0xF8, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0xF8] ; line 864
	0xD8, 0xA6, 0x00, 0x01, 0x00, 0x00,                   // FSUB DWORD PTR [ESI+0x100] ; line 865
	0xD9, 0x9E, 0xF8, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0xF8] ; line 866
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0xF0] ; line 867
	0xD8, 0x86, 0xF8, 0x00, 0x00, 0x00,                   // FADD DWORD PTR [ESI+0xF8] ; line 868
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0xF0] ; line 869
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0xF4] ; line 870
};
static PatchByteCode mimaA236JGRAVITY_patchByteCode = { mimaA236JGRAVITY_byteCode, 84, nullptr, 0 };
// mimaA236JGRAVITYEND1 declared in mima.asm line 876
static unsigned char mimaA236JGRAVITYEND1_byteCode[] = {
	0x0F, 0x84, 0xDE, 0xAD, 0xBE, 0xEF, // JE 0x68FB9F ; line 877
	0x8B, 0x06,                         // MOV EAX,[ESI] ; line 878
	0x8B, 0x50, 0x08,                   // MOV EDX,[EAX+0x08] ; line 879
	0x6A, 0x09,                         // PUSH 0x09 ; line 880
	0x89, 0xF1,                         // MOV ECX,ESI ; line 881
	0xFF, 0xD2,                         // CALL EDX ; line 882
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,       // JMP 0x68FB9F ; line 883
};
static JumpTarget mimaA236JGRAVITYEND1_jumpData[] = {
	{ 0x002, 0x68FB9F },
	{ 0x012, 0x68FB9F },
};
static PatchByteCode mimaA236JGRAVITYEND1_patchByteCode = { mimaA236JGRAVITYEND1_byteCode, 22, mimaA236JGRAVITYEND1_jumpData, 2 };
// mimaA236JGRAVITYEND2 declared in mima.asm line 886
static unsigned char mimaA236JGRAVITYEND2_byteCode[] = {
	0x0F, 0x84, 0xDE, 0xAD, 0xBE, 0xEF, // JE 0x68FE98 ; line 887
	0x8B, 0x06,                         // MOV EAX,[ESI] ; line 888
	0x8B, 0x50, 0x08,                   // MOV EDX,[EAX+0x08] ; line 889
	0x6A, 0x09,                         // PUSH 0x09 ; line 890
	0x89, 0xF1,                         // MOV ECX,ESI ; line 891
	0xFF, 0xD2,                         // CALL EDX ; line 892
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,       // JMP 0x68FE98 ; line 893
};
static JumpTarget mimaA236JGRAVITYEND2_jumpData[] = {
	{ 0x002, 0x68FE98 },
	{ 0x012, 0x68FE98 },
};
static PatchByteCode mimaA236JGRAVITYEND2_patchByteCode = { mimaA236JGRAVITYEND2_byteCode, 22, mimaA236JGRAVITYEND2_jumpData, 2 };
// mimaA236EFFECTS declared in mima.asm line 910
static unsigned char mimaA236EFFECTS_byteCode[] = {
	0x66, 0x81, 0xF8, 0xFE, 0x01,       // CMP AX,0x01FE ; line 911
	0x0F, 0x8C, 0xDE, 0xAD, 0xBE, 0xEF, // JL 0x6A257C ; line 912
	0x66, 0x81, 0xF8, 0x01, 0x02,       // CMP AX,0x0201 ; line 913
	0x0F, 0x8F, 0xDE, 0xAD, 0xBE, 0xEF, // JG 0x6A257C ; line 914
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,       // JMP 0x6A2565 ; line 915
};
static JumpTarget mimaA236EFFECTS_jumpData[] = {
	{ 0x007, 0x6A257C },
	{ 0x012, 0x6A257C },
	{ 0x017, 0x6A2565 },
};
static PatchByteCode mimaA236EFFECTS_patchByteCode = { mimaA236EFFECTS_byteCode, 27, mimaA236EFFECTS_jumpData, 3 };
// mimaA236EFFECTS2 declared in mima.asm line 919
static unsigned char mimaA236EFFECTS2_byteCode[] = {
	0xDD, 0xD8,                         // FSTP ST0 ; line 920
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00, // MOV ECX,[ESI+0x398] ; line 921
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00, // FLD DWORD PTR [ECX+0xF0] ; line 922
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00, // FSTP DWORD PTR [ESI+0xF0] ; line 923
};
static PatchByteCode mimaA236EFFECTS2_patchByteCode = { mimaA236EFFECTS2_byteCode, 20, nullptr, 0 };
// mimaA236STEPFLOORLESS declared in mima.asm line 927
static PatchByteCode mimaA236STEPFLOORLESS_patchByteCode = { nullptr, 0, nullptr, 0 };
// mimaA236STEP_NOSELFCANCEL1 declared in mima.asm line 933
static unsigned char mimaA236STEP_NOSELFCANCEL1_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x68FB8A ; line 934
};
static JumpTarget mimaA236STEP_NOSELFCANCEL1_jumpData[] = {
	{ 0x001, 0x68FB8A },
};
static PatchByteCode mimaA236STEP_NOSELFCANCEL1_patchByteCode = { mimaA236STEP_NOSELFCANCEL1_byteCode, 5, mimaA236STEP_NOSELFCANCEL1_jumpData, 1 };
// mimaA236STEP_NOSELFCANCEL2 declared in mima.asm line 938
static unsigned char mimaA236STEP_NOSELFCANCEL2_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x68FE83 ; line 939
};
static JumpTarget mimaA236STEP_NOSELFCANCEL2_jumpData[] = {
	{ 0x001, 0x68FE83 },
};
static PatchByteCode mimaA236STEP_NOSELFCANCEL2_patchByteCode = { mimaA236STEP_NOSELFCANCEL2_byteCode, 5, mimaA236STEP_NOSELFCANCEL2_jumpData, 1 };
// mimaA236STEPC_MMNTM declared in mima.asm line 943
static unsigned char mimaA236STEPC_MMNTM_byteCode[] = {
	0xD9, 0x05, 0xE0, 0xBB, 0x85, 0x00, // FLD DWORD PTR [0x85BBE0] ; line 944
};
static PatchByteCode mimaA236STEPC_MMNTM_patchByteCode = { mimaA236STEPC_MMNTM_byteCode, 6, nullptr, 0 };
// mimaA236STEPC_DECEL declared in mima.asm line 948
static unsigned char mimaA236STEPC_DECEL_byteCode[] = {
	0xD9, 0x05, 0x60, 0xC0, 0x85, 0x00, // FLD DWORD PTR [0x85C060] ; line 950
};
static PatchByteCode mimaA236STEPC_DECEL_patchByteCode = { mimaA236STEPC_DECEL_byteCode, 6, nullptr, 0 };
// mimaA236STEP_HITS declared in mima.asm line 954
static unsigned char mimaA236STEP_HITS_byteCode[] = {
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 955
	0x88, 0x9E, 0x9A, 0x04, 0x00, 0x00,                         // MOV [ESI+0x49A],BL ; line 956
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 957
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x69B3C4 ; line 958
};
static JumpTarget mimaA236STEP_HITS_jumpData[] = {
	{ 0x018, 0x69B3C4 },
};
static PatchByteCode mimaA236STEP_HITS_patchByteCode = { mimaA236STEP_HITS_byteCode, 28, mimaA236STEP_HITS_jumpData, 1 };
// mimaD22_BULLETCHECK0 declared in mima.asm line 972
static unsigned char mimaD22_BULLETCHECK0_byteCode[] = {
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x1C, 0x02, // CMP WORD PTR [ECX+0x13C],0x021C ; line 973
	0x0F, 0x84, 0x09, 0x00, 0x00, 0x00,                   // JE LABEL1 ; line 974
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x1D, 0x02, // CMP WORD PTR [ECX+0x13C],0x021D ; line 975
};
static PatchByteCode mimaD22_BULLETCHECK0_patchByteCode = { mimaD22_BULLETCHECK0_byteCode, 24, nullptr, 0 };
// mimaD22_BULLETCHECK1 declared in mima.asm line 978
static unsigned char mimaD22_BULLETCHECK1_byteCode[] = {
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x1C, 0x02, // CMP WORD PTR [EAX+0x13C],0x021C ; line 979
	0x0F, 0x84, 0x09, 0x00, 0x00, 0x00,                   // JE LABEL1 ; line 980
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x1D, 0x02, // CMP WORD PTR [EAX+0x13C],0x021D ; line 981
};
static PatchByteCode mimaD22_BULLETCHECK1_patchByteCode = { mimaD22_BULLETCHECK1_byteCode, 24, nullptr, 0 };
// mimaD22_BULLETCHECK2 declared in mima.asm line 984
static unsigned char mimaD22_BULLETCHECK2_byteCode[] = {
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x1D, 0x02, // CMP WORD PTR [EAX+0x13C],0x021D ; line 985
};
static PatchByteCode mimaD22_BULLETCHECK2_patchByteCode = { mimaD22_BULLETCHECK2_byteCode, 9, nullptr, 0 };
// mimaD22_CVER1 declared in mima.asm line 993
static unsigned char mimaD22_CVER1_byteCode[] = {
	0x80, 0xBE, 0x02, 0x08, 0x00, 0x00, 0x00,             // CMP BYTE PTR [ESI+0x802],0x00 ; line 994
	0x0F, 0x85, 0x0C, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 995
	0x01, 0x9E, 0xC8, 0x04, 0x00, 0x00,                   // ADD [ESI+0x4C8],EBX ; line 996
	0x88, 0x9E, 0x02, 0x08, 0x00, 0x00,                   // MOV [ESI+0x802],BL ; line 997
	0x66, 0x81, 0xBE, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03, // CMP WORD PTR [ESI+0x49E],0x03E8 ; line 999
	0x0F, 0x8D, 0x22, 0x00, 0x00, 0x00,                   // JGE LABEL2 ; line 1000
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1001
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x483CE0 ; line 1002
	0x0F, 0xBF, 0xC7,                                     // MOVSX EAX,DI ; line 1003
	0x50,                                                 // PUSH EAX ; line 1004
	0x68, 0x1C, 0x02, 0x00, 0x00,                         // PUSH 0x0000021C ; line 1005
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1006
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x487BA0 ; line 1007
	0x5D,                                                 // POP EBP ; line 1008
	0x5F,                                                 // POP EDI ; line 1009
	0x5E,                                                 // POP ESI ; line 1010
	0x5B,                                                 // POP EBX ; line 1011
	0x81, 0xC4, 0x08, 0x00, 0x00, 0x00,                   // ADD ESP,0x08 ; line 1012
	0xC3,                                                 // RET ; line 1013
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1016
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x483CE0 ; line 1017
	0x0F, 0xBF, 0xC7,                                     // MOVSX EAX,DI ; line 1018
	0x50,                                                 // PUSH EAX ; line 1019
	0x68, 0x1D, 0x02, 0x00, 0x00,                         // PUSH 0x0000021D ; line 1020
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1021
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x487BA0 ; line 1022
	0x5D,                                                 // POP EBP ; line 1023
	0x5F,                                                 // POP EDI ; line 1024
	0x5E,                                                 // POP ESI ; line 1025
	0x5B,                                                 // POP EBX ; line 1026
	0x81, 0xC4, 0x08, 0x00, 0x00, 0x00,                   // ADD ESP,0x08 ; line 1027
	0xC3,                                                 // RET ; line 1028
};
static JumpTarget mimaD22_CVER1_jumpData[] = {
	{ 0x02B, 0x483CE0 },
	{ 0x03B, 0x487BA0 },
	{ 0x04D, 0x483CE0 },
	{ 0x05D, 0x487BA0 },
};
static PatchByteCode mimaD22_CVER1_patchByteCode = { mimaD22_CVER1_byteCode, 108, mimaD22_CVER1_jumpData, 4 };
// mimaA623_AST_ALLDUR declared in mima.asm line 1037
static unsigned char mimaA623_AST_ALLDUR_byteCode[] = {
	0xD9, 0x05, 0xE8, 0xBC, 0x85, 0x00, // FLD DWORD PTR [0x85BCE8] ; line 1038
};
static PatchByteCode mimaA623_AST_ALLDUR_patchByteCode = { mimaA623_AST_ALLDUR_byteCode, 6, nullptr, 0 };
// mimaA623_AST_HITC declared in mima.asm line 1049
static unsigned char mimaA623_AST_HITC_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x01 ; line 1050
	0x0F, 0x85, 0x78, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 1051
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 1052
	0x0F, 0x85, 0x0C, 0x00, 0x00, 0x00,                         // JNE LABEL2 ; line 1053
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x04,                   // MOV BYTE PTR [ESI+0x194],0x04 ; line 1054
	0xE9, 0x5D, 0x00, 0x00, 0x00,                               // JMP LABEL1 ; line 1055
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 1057
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x08,                   // MOV BYTE PTR [ESI+0x194],0x08 ; line 1058
	0x80, 0xB9, 0xA9, 0x06, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [ECX+0x6A9],0x01 ; line 1059
	0x0F, 0x8C, 0x43, 0x00, 0x00, 0x00,                         // JL LABEL1 ; line 1060
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x09,                   // MOV BYTE PTR [ESI+0x194],0x09 ; line 1061
	0x80, 0xB9, 0xA9, 0x06, 0x00, 0x00, 0x02,                   // CMP BYTE PTR [ECX+0x6A9],0x02 ; line 1062
	0x0F, 0x8C, 0x2F, 0x00, 0x00, 0x00,                         // JL LABEL1 ; line 1063
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x0A,                   // MOV BYTE PTR [ESI+0x194],0x0A ; line 1064
	0x80, 0xB9, 0xA9, 0x06, 0x00, 0x00, 0x03,                   // CMP BYTE PTR [ECX+0x6A9],0x03 ; line 1065
	0x0F, 0x8C, 0x1B, 0x00, 0x00, 0x00,                         // JL LABEL1 ; line 1066
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x0B,                   // MOV BYTE PTR [ESI+0x194],0x0B ; line 1067
	0x80, 0xB9, 0xA9, 0x06, 0x00, 0x00, 0x04,                   // CMP BYTE PTR [ECX+0x6A9],0x04 ; line 1068
	0x0F, 0x8C, 0x07, 0x00, 0x00, 0x00,                         // JL LABEL1 ; line 1069
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x0C,                   // MOV BYTE PTR [ESI+0x194],0x0C ; line 1070
	0x6A, 0x0A,                                                 // PUSH 0x0A ; line 1074
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 1075
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE30 ; line 1076
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000000 ; line 1079
	0x0F, 0x84, 0xC9, 0x00, 0x00, 0x00,                         // JE LABELNOT ; line 1080
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000001 ; line 1081
	0x0F, 0x84, 0x55, 0x00, 0x00, 0x00,                         // JE LABELHIT ; line 1082
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000002 ; line 1083
	0x0F, 0x84, 0x45, 0x00, 0x00, 0x00,                         // JE LABELHIT ; line 1084
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000004 ; line 1085
	0x0F, 0x84, 0x88, 0x00, 0x00, 0x00,                         // JE LABELEND ; line 1086
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000006 ; line 1087
	0x0F, 0x84, 0x62, 0x00, 0x00, 0x00,                         // JE LABELGRAZE ; line 1088
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000007 ; line 1089
	0x0F, 0x84, 0x15, 0x00, 0x00, 0x00,                         // JE LABELHIT ; line 1090
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000008 ; line 1091
	0x0F, 0x84, 0x58, 0x00, 0x00, 0x00,                         // JE LABELEND ; line 1092
	0xE9, 0x5F, 0x00, 0x00, 0x00,                               // JMP LABELIDK ; line 1093
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 1096
	0x0F, 0x8E, 0x57, 0x00, 0x00, 0x00,                         // JLE LABELNOT ; line 1097
	0x66, 0x81, 0x86, 0x6E, 0x03, 0x00, 0x00, 0x01, 0x00,       // ADD WORD PTR [ESI+0x36E],0x01 ; line 1098
	0x66, 0x81, 0xBE, 0x6E, 0x03, 0x00, 0x00, 0x02, 0x00,       // CMP WORD PTR [ESI+0x36E],0x0002 ; line 1099
	0x0F, 0x85, 0x13, 0x00, 0x00, 0x00,                         // JNE LABELHIT2 ; line 1100
	0x66, 0xC7, 0x86, 0x6E, 0x03, 0x00, 0x00, 0x00, 0x00,       // MOV WORD PTR [ESI+0x36E],0x0000 ; line 1101
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000000 ; line 1102
	0xE9, 0x27, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 1105
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000000 ; line 1109
	0x80, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // ADD BYTE PTR [ESI+0x194],0x01 ; line 1110
	0xE9, 0x11, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 1111
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 1114
	0xE9, 0x05, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 1115
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 1119
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x01 ; line 1122
	0x0F, 0x8C, 0x3C, 0x00, 0x00, 0x00,                         // JL LABELNOT2 ; line 1123
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0xAA, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0xAA ; line 1124
	0x0F, 0x8C, 0x07, 0x00, 0x00, 0x00,                         // JL LABELNOT3 ; line 1125
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 1126
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 1128
	0x0F, 0x8F, 0x18, 0x00, 0x00, 0x00,                         // JG LABELNOT2 ; line 1129
	0x8A, 0x8E, 0x13, 0x01, 0x00, 0x00,                         // MOV CL,[ESI+0x113] ; line 1130
	0x80, 0xE9, 0x19,                                           // SUB CL,0x19 ; line 1131
	0x80, 0xF9, 0x19,                                           // CMP CL,0x19 ; line 1132
	0x0F, 0x86, 0x06, 0x00, 0x00, 0x00,                         // JBE LABELNOT2 ; line 1133
	0x88, 0x8E, 0x13, 0x01, 0x00, 0x00,                         // MOV BYTE PTR [ESI+0x113],CL ; line 1134
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 1137
};
static JumpTarget mimaA623_AST_HITC_jumpData[] = {
	{ 0x08D, 0x48CE30 },
};
static PatchByteCode mimaA623_AST_HITC_patchByteCode = { mimaA623_AST_HITC_byteCode, 444, mimaA623_AST_HITC_jumpData, 1 };
// mimaD623_LVA declared in mima.asm line 1145
static unsigned char mimaD623_LVA_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x02, // CMP WORD PTR [ESI+0x13C],0x0209 ; line 1146
	0x0F, 0x8C, 0x07, 0x00, 0x00, 0x00,                   // JL LABEL2 ; line 1147
	0x80, 0xBE, 0xA5, 0x06, 0x00, 0x00, 0x00,             // CMP BYTE PTR [ESI+0x6A5],0x00 ; line 1148
};
static PatchByteCode mimaD623_LVA_patchByteCode = { mimaD623_LVA_byteCode, 22, nullptr, 0 };
// mimaD623_LVB declared in mima.asm line 1153
static unsigned char mimaD623_LVB_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x02, // CMP WORD PTR [ESI+0x13C],0x0209 ; line 1154
	0x0F, 0x8C, 0x07, 0x00, 0x00, 0x00,                   // JL LABEL2 ; line 1155
	0x80, 0xBE, 0xA5, 0x06, 0x00, 0x00, 0x02,             // CMP BYTE PTR [ESI+0x6A5],0x02 ; line 1156
};
static PatchByteCode mimaD623_LVB_patchByteCode = { mimaD623_LVB_byteCode, 22, nullptr, 0 };
// mimaA236LASERB declared in mima.asm line 1165
static unsigned char mimaA236LASERB_byteCode[] = {
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 1166
	0x81, 0xB8, 0x58, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x758],0x00 ; line 1167
	0x0F, 0x8F, 0xC2, 0x00, 0x00, 0x00,                         // JG LABELM_DOWN ; line 1168
	0x81, 0xB8, 0x78, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x778],0x00 ; line 1169
	0x0F, 0x8F, 0xB2, 0x00, 0x00, 0x00,                         // JG LABELM_DOWN ; line 1170
	0x81, 0xB8, 0x58, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x758],0x00 ; line 1172
	0x0F, 0x8C, 0x05, 0x01, 0x00, 0x00,                         // JL LABELM_UP ; line 1173
	0x81, 0xB8, 0x78, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x778],0x00 ; line 1174
	0x0F, 0x8C, 0xF5, 0x00, 0x00, 0x00,                         // JL LABELM_UP ; line 1175
	0x80, 0xB8, 0x04, 0x01, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [EAX+0x104],0x01 ; line 1177
	0x0F, 0x85, 0x40, 0x00, 0x00, 0x00,                         // JNE LABELLEFT ; line 1178
	0x81, 0xB8, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x754],0x00 ; line 1179
	0x0F, 0x8F, 0x75, 0x00, 0x00, 0x00,                         // JG LABELM_DOWN ; line 1180
	0x81, 0xB8, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x774],0x00 ; line 1181
	0x0F, 0x8F, 0x65, 0x00, 0x00, 0x00,                         // JG LABELM_DOWN ; line 1182
	0x81, 0xB8, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x754],0x00 ; line 1183
	0x0F, 0x8C, 0xB8, 0x00, 0x00, 0x00,                         // JL LABELM_UP ; line 1184
	0x81, 0xB8, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x774],0x00 ; line 1185
	0x0F, 0x8C, 0xA8, 0x00, 0x00, 0x00,                         // JL LABELM_UP ; line 1186
	0x81, 0xB8, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x754],0x00 ; line 1189
	0x0F, 0x8F, 0x98, 0x00, 0x00, 0x00,                         // JG LABELM_UP ; line 1190
	0x81, 0xB8, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x774],0x00 ; line 1191
	0x0F, 0x8F, 0x88, 0x00, 0x00, 0x00,                         // JG LABELM_UP ; line 1192
	0x81, 0xB8, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x754],0x00 ; line 1193
	0x0F, 0x8C, 0x15, 0x00, 0x00, 0x00,                         // JL LABELM_DOWN ; line 1194
	0x81, 0xB8, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x774],0x00 ; line 1195
	0x0F, 0x8C, 0x05, 0x00, 0x00, 0x00,                         // JL LABELM_DOWN ; line 1196
	0xE9, 0xC6, 0x00, 0x00, 0x00,                               // JMP LABELEND ; line 1198
	0xD9, 0x86, 0x2C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x12C] ; line 1201
	0xDC, 0x05, 0x80, 0xA2, 0x85, 0x00,                         // FADD QWORD PTR [0x85A280] ; line 1202
	0x80, 0xB8, 0xA8, 0x06, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [EAX+0x6A8],0x01 ; line 1203
	0x0F, 0x8C, 0x3F, 0x00, 0x00, 0x00,                         // JL LABELEND1 ; line 1204
	0xDC, 0x05, 0x80, 0xA2, 0x85, 0x00,                         // FADD QWORD PTR [0x85A280] ; line 1205
	0x80, 0xB8, 0xA8, 0x06, 0x00, 0x00, 0x02,                   // CMP BYTE PTR [EAX+0x6A8],0x02 ; line 1206
	0x0F, 0x8C, 0x2C, 0x00, 0x00, 0x00,                         // JL LABELEND1 ; line 1207
	0xDC, 0x05, 0x80, 0xA2, 0x85, 0x00,                         // FADD QWORD PTR [0x85A280] ; line 1208
	0x80, 0xB8, 0xA8, 0x06, 0x00, 0x00, 0x03,                   // CMP BYTE PTR [EAX+0x6A8],0x03 ; line 1209
	0x0F, 0x8C, 0x19, 0x00, 0x00, 0x00,                         // JL LABELEND1 ; line 1210
	0xDC, 0x05, 0x80, 0xA2, 0x85, 0x00,                         // FADD QWORD PTR [0x85A280] ; line 1211
	0x80, 0xB8, 0xA8, 0x06, 0x00, 0x00, 0x04,                   // CMP BYTE PTR [EAX+0x6A8],0x04 ; line 1212
	0x0F, 0x8C, 0x06, 0x00, 0x00, 0x00,                         // JL LABELEND1 ; line 1213
	0xDC, 0x05, 0x80, 0xA2, 0x85, 0x00,                         // FADD QWORD PTR [0x85A280] ; line 1214
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 1216
	0xE9, 0x63, 0x00, 0x00, 0x00,                               // JMP LABELEND ; line 1217
	0xD9, 0x86, 0x2C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x12C] ; line 1220
	0xDC, 0x25, 0x80, 0xA2, 0x85, 0x00,                         // FSUB QWORD PTR [0x85A280] ; line 1221
	0x80, 0xB8, 0xA8, 0x06, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [EAX+0x6A8],0x01 ; line 1222
	0x0F, 0x8C, 0x3F, 0x00, 0x00, 0x00,                         // JL LABELEND2 ; line 1223
	0xDC, 0x25, 0x80, 0xA2, 0x85, 0x00,                         // FSUB QWORD PTR [0x85A280] ; line 1224
	0x80, 0xB8, 0xA8, 0x06, 0x00, 0x00, 0x02,                   // CMP BYTE PTR [EAX+0x6A8],0x02 ; line 1225
	0x0F, 0x8C, 0x2C, 0x00, 0x00, 0x00,                         // JL LABELEND2 ; line 1226
	0xDC, 0x25, 0x80, 0xA2, 0x85, 0x00,                         // FSUB QWORD PTR [0x85A280] ; line 1227
	0x80, 0xB8, 0xA8, 0x06, 0x00, 0x00, 0x03,                   // CMP BYTE PTR [EAX+0x6A8],0x03 ; line 1228
	0x0F, 0x8C, 0x19, 0x00, 0x00, 0x00,                         // JL LABELEND2 ; line 1229
	0xDC, 0x25, 0x80, 0xA2, 0x85, 0x00,                         // FSUB QWORD PTR [0x85A280] ; line 1230
	0x80, 0xB8, 0xA8, 0x06, 0x00, 0x00, 0x04,                   // CMP BYTE PTR [EAX+0x6A8],0x04 ; line 1231
	0x0F, 0x8C, 0x06, 0x00, 0x00, 0x00,                         // JL LABELEND2 ; line 1232
	0xDC, 0x25, 0x80, 0xA2, 0x85, 0x00,                         // FSUB QWORD PTR [0x85A280] ; line 1233
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 1235
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP LABELEND ; line 1236
	0x0F, 0xB7, 0x81, 0x3E, 0x01, 0x00, 0x00,                   // MOVZX EAX,WORD PTR [ECX+0x13E] ; line 1239
};
static PatchByteCode mimaA236LASERB_patchByteCode = { mimaA236LASERB_byteCode, 421, nullptr, 0 };
// mimaA236LASERC declared in mima.asm line 1241
static unsigned char mimaA236LASERC_byteCode[] = {
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 1242
	0x81, 0xB9, 0x58, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x758],0x00 ; line 1243
	0x0F, 0x8F, 0xC2, 0x00, 0x00, 0x00,                         // JG LABELM_DOWN ; line 1244
	0x81, 0xB9, 0x78, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x778],0x00 ; line 1245
	0x0F, 0x8F, 0xB2, 0x00, 0x00, 0x00,                         // JG LABELM_DOWN ; line 1246
	0x81, 0xB9, 0x58, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x758],0x00 ; line 1248
	0x0F, 0x8C, 0x05, 0x01, 0x00, 0x00,                         // JL LABELM_UP ; line 1249
	0x81, 0xB9, 0x78, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x778],0x00 ; line 1250
	0x0F, 0x8C, 0xF5, 0x00, 0x00, 0x00,                         // JL LABELM_UP ; line 1251
	0x80, 0xB9, 0x04, 0x01, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [ECX+0x104],0x01 ; line 1253
	0x0F, 0x85, 0x40, 0x00, 0x00, 0x00,                         // JNE LABELLEFT ; line 1254
	0x81, 0xB9, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x754],0x00 ; line 1255
	0x0F, 0x8F, 0x75, 0x00, 0x00, 0x00,                         // JG LABELM_DOWN ; line 1256
	0x81, 0xB9, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x774],0x00 ; line 1257
	0x0F, 0x8F, 0x65, 0x00, 0x00, 0x00,                         // JG LABELM_DOWN ; line 1258
	0x81, 0xB9, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x754],0x00 ; line 1259
	0x0F, 0x8C, 0xB8, 0x00, 0x00, 0x00,                         // JL LABELM_UP ; line 1260
	0x81, 0xB9, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x774],0x00 ; line 1261
	0x0F, 0x8C, 0xA8, 0x00, 0x00, 0x00,                         // JL LABELM_UP ; line 1262
	0x81, 0xB9, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x754],0x00 ; line 1265
	0x0F, 0x8F, 0x98, 0x00, 0x00, 0x00,                         // JG LABELM_UP ; line 1266
	0x81, 0xB9, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x774],0x00 ; line 1267
	0x0F, 0x8F, 0x88, 0x00, 0x00, 0x00,                         // JG LABELM_UP ; line 1268
	0x81, 0xB9, 0x54, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x754],0x00 ; line 1269
	0x0F, 0x8C, 0x15, 0x00, 0x00, 0x00,                         // JL LABELM_DOWN ; line 1270
	0x81, 0xB9, 0x74, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x774],0x00 ; line 1271
	0x0F, 0x8C, 0x05, 0x00, 0x00, 0x00,                         // JL LABELM_DOWN ; line 1272
	0xE9, 0xC6, 0x00, 0x00, 0x00,                               // JMP LABELEND ; line 1274
	0xD9, 0x86, 0x2C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x12C] ; line 1277
	0xDC, 0x05, 0x80, 0xA2, 0x85, 0x00,                         // FADD QWORD PTR [0x85A280] ; line 1278
	0x80, 0xB9, 0xA8, 0x06, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [ECX+0x6A8],0x01 ; line 1279
	0x0F, 0x8C, 0x3F, 0x00, 0x00, 0x00,                         // JL LABELEND1 ; line 1280
	0xDC, 0x05, 0x80, 0xA2, 0x85, 0x00,                         // FADD QWORD PTR [0x85A280] ; line 1281
	0x80, 0xB9, 0xA8, 0x06, 0x00, 0x00, 0x02,                   // CMP BYTE PTR [ECX+0x6A8],0x02 ; line 1282
	0x0F, 0x8C, 0x2C, 0x00, 0x00, 0x00,                         // JL LABELEND1 ; line 1283
	0xDC, 0x05, 0x80, 0xA2, 0x85, 0x00,                         // FADD QWORD PTR [0x85A280] ; line 1284
	0x80, 0xB9, 0xA8, 0x06, 0x00, 0x00, 0x03,                   // CMP BYTE PTR [ECX+0x6A8],0x03 ; line 1285
	0x0F, 0x8C, 0x19, 0x00, 0x00, 0x00,                         // JL LABELEND1 ; line 1286
	0xDC, 0x05, 0x80, 0xA2, 0x85, 0x00,                         // FADD QWORD PTR [0x85A280] ; line 1287
	0x80, 0xB9, 0xA8, 0x06, 0x00, 0x00, 0x04,                   // CMP BYTE PTR [ECX+0x6A8],0x04 ; line 1288
	0x0F, 0x8C, 0x06, 0x00, 0x00, 0x00,                         // JL LABELEND1 ; line 1289
	0xDC, 0x05, 0x80, 0xA2, 0x85, 0x00,                         // FADD QWORD PTR [0x85A280] ; line 1290
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 1292
	0xE9, 0x63, 0x00, 0x00, 0x00,                               // JMP LABELEND ; line 1293
	0xD9, 0x86, 0x2C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x12C] ; line 1296
	0xDC, 0x25, 0x80, 0xA2, 0x85, 0x00,                         // FSUB QWORD PTR [0x85A280] ; line 1297
	0x80, 0xB9, 0xA8, 0x06, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [ECX+0x6A8],0x01 ; line 1298
	0x0F, 0x8C, 0x3F, 0x00, 0x00, 0x00,                         // JL LABELEND2 ; line 1299
	0xDC, 0x25, 0x80, 0xA2, 0x85, 0x00,                         // FSUB QWORD PTR [0x85A280] ; line 1300
	0x80, 0xB9, 0xA8, 0x06, 0x00, 0x00, 0x02,                   // CMP BYTE PTR [ECX+0x6A8],0x02 ; line 1301
	0x0F, 0x8C, 0x2C, 0x00, 0x00, 0x00,                         // JL LABELEND2 ; line 1302
	0xDC, 0x25, 0x80, 0xA2, 0x85, 0x00,                         // FSUB QWORD PTR [0x85A280] ; line 1303
	0x80, 0xB9, 0xA8, 0x06, 0x00, 0x00, 0x03,                   // CMP BYTE PTR [ECX+0x6A8],0x03 ; line 1304
	0x0F, 0x8C, 0x19, 0x00, 0x00, 0x00,                         // JL LABELEND2 ; line 1305
	0xDC, 0x25, 0x80, 0xA2, 0x85, 0x00,                         // FSUB QWORD PTR [0x85A280] ; line 1306
	0x80, 0xB9, 0xA8, 0x06, 0x00, 0x00, 0x04,                   // CMP BYTE PTR [ECX+0x6A8],0x04 ; line 1307
	0x0F, 0x8C, 0x06, 0x00, 0x00, 0x00,                         // JL LABELEND2 ; line 1308
	0xDC, 0x25, 0x80, 0xA2, 0x85, 0x00,                         // FSUB QWORD PTR [0x85A280] ; line 1309
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 1311
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP LABELEND ; line 1312
	0x0F, 0xB7, 0x88, 0x3E, 0x01, 0x00, 0x00,                   // MOVZX ECX,WORD PTR [EAX+0x13E] ; line 1315
};
static PatchByteCode mimaA236LASERC_patchByteCode = { mimaA236LASERC_byteCode, 421, nullptr, 0 };
// mimaA236LASERC_FIX declared in mima.asm line 1320
static unsigned char mimaA236LASERC_FIX_byteCode[] = {
	0x66, 0x81, 0xB8, 0x40, 0x01, 0x00, 0x00, 0x0D, 0x00, // CMP WORD PTR [EAX+0x140],0x000D ; line 1321
};
static PatchByteCode mimaA236LASERC_FIX_patchByteCode = { mimaA236LASERC_FIX_byteCode, 9, nullptr, 0 };
// mimaA236LASER_LVDIF1 declared in mima.asm line 1325
static unsigned char mimaA236LASER_LVDIF1_byteCode[] = {
	0x80, 0xBA, 0xA8, 0x06, 0x00, 0x00, 0x05, // CMP BYTE PTR [EDX+0x6A8],0x05 ; line 1326
};
static PatchByteCode mimaA236LASER_LVDIF1_patchByteCode = { mimaA236LASER_LVDIF1_byteCode, 7, nullptr, 0 };
// mimaA236LASER_LVDIF2 declared in mima.asm line 1328
static unsigned char mimaA236LASER_LVDIF2_byteCode[] = {
	0x80, 0xB8, 0xA8, 0x06, 0x00, 0x00, 0x05, // CMP BYTE PTR [EAX+0x6A8],0x05 ; line 1329
};
static PatchByteCode mimaA236LASER_LVDIF2_patchByteCode = { mimaA236LASER_LVDIF2_byteCode, 7, nullptr, 0 };
// mimaA236LASER_CTOBCH declared in mima.asm line 1340
static unsigned char mimaA236LASER_CTOBCH_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x68F474 ; line 1341
};
static JumpTarget mimaA236LASER_CTOBCH_jumpData[] = {
	{ 0x001, 0x68F474 },
};
static PatchByteCode mimaA236LASER_CTOBCH_patchByteCode = { mimaA236LASER_CTOBCH_byteCode, 5, mimaA236LASER_CTOBCH_jumpData, 1 };
// mimaA236LASER_UNLOCK1 declared in mima.asm line 1345
static unsigned char mimaA236LASER_UNLOCK1_byteCode[] = {
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xF9, 0x01, // CMP WORD PTR [ECX+0x13C],0x01F9 ; line 1346
	0x0F, 0x84, 0x0F, 0x00, 0x00, 0x00,                   // JE LABELNEXT ; line 1347
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xFA, 0x01, // CMP WORD PTR [ECX+0x13C],0x01FA ; line 1348
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,                   // JNE 0x69EBDB ; line 1349
};
static JumpTarget mimaA236LASER_UNLOCK1_jumpData[] = {
	{ 0x01A, 0x69EBDB },
};
static PatchByteCode mimaA236LASER_UNLOCK1_patchByteCode = { mimaA236LASER_UNLOCK1_byteCode, 30, mimaA236LASER_UNLOCK1_jumpData, 1 };
// mimaA236LASER_UNLOCK2 declared in mima.asm line 1353
static unsigned char mimaA236LASER_UNLOCK2_byteCode[] = {
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0xF9, 0x01, // CMP WORD PTR [EAX+0x13C],0x01F9 ; line 1354
	0x0F, 0x84, 0x0F, 0x00, 0x00, 0x00,                   // JE LABELNEXT ; line 1355
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0xFA, 0x01, // CMP WORD PTR [EAX+0x13C],0x01FA ; line 1356
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,                   // JNE 0x69EBDB ; line 1357
};
static JumpTarget mimaA236LASER_UNLOCK2_jumpData[] = {
	{ 0x01A, 0x69EBDB },
};
static PatchByteCode mimaA236LASER_UNLOCK2_patchByteCode = { mimaA236LASER_UNLOCK2_byteCode, 30, mimaA236LASER_UNLOCK2_jumpData, 1 };
// mimaA214FLASH_SPD declared in mima.asm line 1363
static unsigned char mimaA214FLASH_SPD_byteCode[] = {
	0xD9, 0xEB, // FLDPI ; line 1364
};
static PatchByteCode mimaA214FLASH_SPD_patchByteCode = { mimaA214FLASH_SPD_byteCode, 2, nullptr, 0 };
// mimaA214FLASH_SPDLV declared in mima.asm line 1368
static unsigned char mimaA214FLASH_SPDLV_byteCode[] = {
	0x80, 0xBA, 0xAB, 0x06, 0x00, 0x00, 0x05, // CMP BYTE PTR [EDX+0x6AB],0x05 ; line 1369
};
static PatchByteCode mimaA214FLASH_SPDLV_patchByteCode = { mimaA214FLASH_SPDLV_byteCode, 7, nullptr, 0 };
// mimaA214FLASH_B1B declared in mima.asm line 1373
static unsigned char mimaA214FLASH_B1B_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x693FA8 ; line 1375
};
static JumpTarget mimaA214FLASH_B1B_jumpData[] = {
	{ 0x001, 0x693FA8 },
};
static PatchByteCode mimaA214FLASH_B1B_patchByteCode = { mimaA214FLASH_B1B_byteCode, 5, mimaA214FLASH_B1B_jumpData, 1 };
// mimaA214FLASH_BCH1B declared in mima.asm line 1377
static unsigned char mimaA214FLASH_BCH1B_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x694342 ; line 1378
};
static JumpTarget mimaA214FLASH_BCH1B_jumpData[] = {
	{ 0x001, 0x694342 },
};
static PatchByteCode mimaA214FLASH_BCH1B_patchByteCode = { mimaA214FLASH_BCH1B_byteCode, 5, mimaA214FLASH_BCH1B_jumpData, 1 };
// mimaA214FLASH_JB1B declared in mima.asm line 1380
static unsigned char mimaA214FLASH_JB1B_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x694FB2 ; line 1381
};
static JumpTarget mimaA214FLASH_JB1B_jumpData[] = {
	{ 0x001, 0x694FB2 },
};
static PatchByteCode mimaA214FLASH_JB1B_patchByteCode = { mimaA214FLASH_JB1B_byteCode, 5, mimaA214FLASH_JB1B_jumpData, 1 };
// mimaA214FLASH_JBCH1B declared in mima.asm line 1383
static unsigned char mimaA214FLASH_JBCH1B_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x695352 ; line 1384
};
static JumpTarget mimaA214FLASH_JBCH1B_jumpData[] = {
	{ 0x001, 0x695352 },
};
static PatchByteCode mimaA214FLASH_JBCH1B_patchByteCode = { mimaA214FLASH_JBCH1B_byteCode, 5, mimaA214FLASH_JBCH1B_jumpData, 1 };
// mimaA214FLASH_BONCE declared in mima.asm line 1391
static unsigned char mimaA214FLASH_BONCE_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x13E],0x0000 ; line 1392
	0x0F, 0x85, 0x23, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1393
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x06, 0x00, // CMP WORD PTR [ESI+0x140],0x0006 ; line 1394
	0x0F, 0x85, 0x14, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1395
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x0000 ; line 1396
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1397
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x693D16 ; line 1398
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x693FAF ; line 1400
};
static JumpTarget mimaA214FLASH_BONCE_jumpData[] = {
	{ 0x02E, 0x693D16 },
	{ 0x033, 0x693FAF },
};
static PatchByteCode mimaA214FLASH_BONCE_patchByteCode = { mimaA214FLASH_BONCE_byteCode, 55, mimaA214FLASH_BONCE_jumpData, 2 };
// mimaA214FLASH_BCHGONCE declared in mima.asm line 1404
static unsigned char mimaA214FLASH_BCHGONCE_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x01, 0x00, // CMP WORD PTR [ESI+0x13E],0x0001 ; line 1405
	0x0F, 0x85, 0x23, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1406
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x02, 0x00, // CMP WORD PTR [ESI+0x140],0x0002 ; line 1407
	0x0F, 0x85, 0x14, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1408
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x0000 ; line 1409
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1410
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x693FDA ; line 1411
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x694349 ; line 1413
};
static JumpTarget mimaA214FLASH_BCHGONCE_jumpData[] = {
	{ 0x02E, 0x693FDA },
	{ 0x033, 0x694349 },
};
static PatchByteCode mimaA214FLASH_BCHGONCE_patchByteCode = { mimaA214FLASH_BCHGONCE_byteCode, 55, mimaA214FLASH_BCHGONCE_jumpData, 2 };
// mimaA214FLASH_JBONCE declared in mima.asm line 1417
static unsigned char mimaA214FLASH_JBONCE_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x13E],0x0000 ; line 1418
	0x0F, 0x85, 0x23, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1419
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x06, 0x00, // CMP WORD PTR [ESI+0x140],0x0006 ; line 1420
	0x0F, 0x85, 0x14, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1421
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x0000 ; line 1422
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1423
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x694D0D ; line 1424
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x694FB9 ; line 1426
};
static JumpTarget mimaA214FLASH_JBONCE_jumpData[] = {
	{ 0x02E, 0x694D0D },
	{ 0x033, 0x694FB9 },
};
static PatchByteCode mimaA214FLASH_JBONCE_patchByteCode = { mimaA214FLASH_JBONCE_byteCode, 55, mimaA214FLASH_JBONCE_jumpData, 2 };
// mimaA214FLASH_JBCHGONCE declared in mima.asm line 1430
static unsigned char mimaA214FLASH_JBCHGONCE_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x01, 0x00, // CMP WORD PTR [ESI+0x13E],0x0001 ; line 1431
	0x0F, 0x85, 0x23, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1432
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x02, 0x00, // CMP WORD PTR [ESI+0x140],0x0002 ; line 1433
	0x0F, 0x85, 0x14, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1434
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x0000 ; line 1435
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1436
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x694FE1 ; line 1437
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x695359 ; line 1439
};
static JumpTarget mimaA214FLASH_JBCHGONCE_jumpData[] = {
	{ 0x02E, 0x694FE1 },
	{ 0x033, 0x695359 },
};
static PatchByteCode mimaA214FLASH_JBCHGONCE_patchByteCode = { mimaA214FLASH_JBCHGONCE_byteCode, 55, mimaA214FLASH_JBCHGONCE_jumpData, 2 };
// mimaA214FLASH_CCHGONCE declared in mima.asm line 1443
static unsigned char mimaA214FLASH_CCHGONCE_byteCode[] = {
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,                   // JNE 0x694B4D ; line 1444
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x01, 0x00, // CMP WORD PTR [ESI+0x13E],0x0001 ; line 1446
	0x0F, 0x85, 0x14, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1447
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x03, 0x00, // CMP WORD PTR [ESI+0x140],0x0003 ; line 1448
	0x0F, 0x8D, 0x05, 0x00, 0x00, 0x00,                   // JGE LABEL1 ; line 1449
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x6947DE ; line 1450
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x694B4D ; line 1452
};
static JumpTarget mimaA214FLASH_CCHGONCE_jumpData[] = {
	{ 0x002, 0x694B4D },
	{ 0x025, 0x6947DE },
	{ 0x02A, 0x694B4D },
};
static PatchByteCode mimaA214FLASH_CCHGONCE_patchByteCode = { mimaA214FLASH_CCHGONCE_byteCode, 46, mimaA214FLASH_CCHGONCE_jumpData, 3 };
// mimaA214FLASH_JCCHGONCE declared in mima.asm line 1456
static unsigned char mimaA214FLASH_JCCHGONCE_byteCode[] = {
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,                   // JNE 0x695BD8 ; line 1457
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x01, 0x00, // CMP WORD PTR [ESI+0x13E],0x0001 ; line 1459
	0x0F, 0x85, 0x14, 0x00, 0x00, 0x00,                   // JNE LABEL1 ; line 1460
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x03, 0x00, // CMP WORD PTR [ESI+0x140],0x0003 ; line 1461
	0x0F, 0x8D, 0x05, 0x00, 0x00, 0x00,                   // JGE LABEL1 ; line 1462
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x695860 ; line 1463
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x695BD8 ; line 1465
};
static JumpTarget mimaA214FLASH_JCCHGONCE_jumpData[] = {
	{ 0x002, 0x695BD8 },
	{ 0x025, 0x695860 },
	{ 0x02A, 0x695BD8 },
};
static PatchByteCode mimaA214FLASH_JCCHGONCE_patchByteCode = { mimaA214FLASH_JCCHGONCE_byteCode, 46, mimaA214FLASH_JCCHGONCE_jumpData, 3 };
// mimaA214FLASH_OFFSCREEN1 declared in mima.asm line 1469
static unsigned char mimaA214FLASH_OFFSCREEN1_byteCode[] = {
	0xD9, 0x05, 0x40, 0xC0, 0x85, 0x00, // FLD DWORD PTR [0x85C040] ; line 1470
	0xDC, 0x25, 0x70, 0xB9, 0x85, 0x00, // FSUB QWORD PTR [0x85B970] ; line 1471
};
static PatchByteCode mimaA214FLASH_OFFSCREEN1_patchByteCode = { mimaA214FLASH_OFFSCREEN1_byteCode, 12, nullptr, 0 };
// mimaA214FLASH_OFFSCREEN2 declared in mima.asm line 1475
static unsigned char mimaA214FLASH_OFFSCREEN2_byteCode[] = {
	0xDC, 0x1D, 0x58, 0xC0, 0x85, 0x00, // FCOMP QWORD PTR [0x85C058] ; line 1476
};
static PatchByteCode mimaA214FLASH_OFFSCREEN2_patchByteCode = { mimaA214FLASH_OFFSCREEN2_byteCode, 6, nullptr, 0 };
// mimaA214FLASH_SKIPHITFUNCS declared in mima.asm line 1480
static unsigned char mimaA214FLASH_SKIPHITFUNCS_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x6A2132 ; line 1481
};
static JumpTarget mimaA214FLASH_SKIPHITFUNCS_jumpData[] = {
	{ 0x001, 0x6A2132 },
};
static PatchByteCode mimaA214FLASH_SKIPHITFUNCS_patchByteCode = { mimaA214FLASH_SKIPHITFUNCS_byteCode, 5, mimaA214FLASH_SKIPHITFUNCS_jumpData, 1 };
// mimaA214FLASH_RISE declared in mima.asm line 1485
static unsigned char mimaA214FLASH_RISE_byteCode[] = {
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 1487
	0x80, 0xBE, 0x13, 0x01, 0x00, 0x00, 0xFF,                   // CMP BYTE PTR [ESI+0x113],0xFF ; line 1496
	0x0F, 0x84, 0x4E, 0x00, 0x00, 0x00,                         // JE LABELOK ; line 1497
	0x8A, 0x8E, 0x13, 0x01, 0x00, 0x00,                         // MOV CL,[ESI+0x113] ; line 1498
	0x80, 0xF9, 0x0A,                                           // CMP CL,0x0A ; line 1499
	0x0F, 0x86, 0x26, 0x00, 0x00, 0x00,                         // JBE LABELKILLTRUE ; line 1500
	0x80, 0xE9, 0x0A,                                           // SUB CL,0x0A ; line 1501
	0x88, 0x8E, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],CL ; line 1502
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x11C] ; line 1503
	0xD8, 0x05, 0x14, 0xCB, 0x85, 0x00,                         // FADD DWORD PTR [0x85CB14] ; line 1504
	0xD9, 0x96, 0x1C, 0x01, 0x00, 0x00,                         // FST DWORD PTR [ESI+0x11C] ; line 1505
	0xD9, 0x9E, 0x20, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x120] ; line 1506
	0xE9, 0x19, 0x00, 0x00, 0x00,                               // JMP LABELOK ; line 1507
	0x0F, 0xBF, 0x86, 0x3E, 0x01, 0x00, 0x00,                   // MOVSX EAX,WORD PTR [ESI+0x13E] ; line 1509
	0xBF, 0x0C, 0x00, 0x00, 0x00,                               // MOV EDI,0x0000000C ; line 1510
	0x39, 0xBE, 0x44, 0x01, 0x00, 0x00,                         // CMP [ESI+0x144],EDI ; line 1511
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 1512
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6A21A2 ; line 1513
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x0C ; line 1516
	0x0F, 0x8C, 0x4A, 0x00, 0x00, 0x00,                         // JL LABELNOHOME ; line 1517
	0x81, 0xEC, 0x0C, 0x00, 0x00, 0x00,                         // SUB ESP,0x0C ; line 1518
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 1519
	0xD9, 0x05, 0x44, 0x15, 0x87, 0x00,                         // FLD DWORD PTR [0x871544] ; line 1521
	0xD9, 0x5C, 0x24, 0x08,                                     // FSTP DWORD PTR [ESP+0x08] ; line 1522
	0xD9, 0x05, 0xF0, 0x89, 0x85, 0x00,                         // FLD DWORD PTR [0x8589F0] ; line 1524
	0xD9, 0x5C, 0x24, 0x04,                                     // FSTP DWORD PTR [ESP+0x04] ; line 1525
	0xD9, 0xEE,                                                 // FLDZ ; line 1526
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 1527
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CCA0 ; line 1528
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x35C] ; line 1529
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 1530
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                         // SUB ESP,0x08 ; line 1531
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 1533
	0x8D, 0x4E, 0x04,                                           // LEA ECX,[ESI+0x04] ; line 1534
	0xD9, 0x40, 0x04,                                           // FLD DWORD PTR [EAX+0x04] ; line 1535
	0xD9, 0x5C, 0x24, 0x04,                                     // FSTP DWORD PTR [ESP+0x04] ; line 1538
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 1539
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 1540
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x438C00 ; line 1541
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x0C ; line 1544
	0x0F, 0x8F, 0x06, 0x00, 0x00, 0x00,                         // JG LABELA3 ; line 1545
	0x0F, 0x8C, 0x00, 0x00, 0x00, 0x00,                         // JL LABELA2 ; line 1546
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 1561
	0x0F, 0x85, 0x79, 0x00, 0x00, 0x00,                         // JNE LABELA1 ; line 1562
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 1564
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF4] ; line 1565
	0xD8, 0x0D, 0xC0, 0xB9, 0x85, 0x00,                         // FMUL DWORD PTR [0x85B9C0] ; line 1566
	0xD9, 0x9E, 0xF4, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF4] ; line 1567
	0xD9, 0x86, 0xF8, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF8] ; line 1568
	0xD8, 0x25, 0x30, 0xB8, 0x85, 0x00,                         // FSUB DWORD PTR [0x85B830] ; line 1569
	0xD9, 0x9E, 0xF8, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF8] ; line 1570
	0x8B, 0x8E, 0x5C, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x35C] ; line 1572
	0xD9, 0xEB,                                                 // FLDPI ; line 1573
	0xD9, 0x59, 0x04,                                           // FSTP DWORD PTR [ECX+0x04] ; line 1574
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 1576
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x35, 0x02,       // CMP WORD PTR [ECX+0x13C],0x0235 ; line 1577
	0x0F, 0x8C, 0x2E, 0x00, 0x00, 0x00,                         // JL LABELA1 ; line 1578
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x38, 0x02,       // CMP WORD PTR [ECX+0x13C],0x0238 ; line 1579
	0x0F, 0x8F, 0x1F, 0x00, 0x00, 0x00,                         // JG LABELA1 ; line 1580
	0x66, 0x81, 0xB9, 0x3E, 0x01, 0x00, 0x00, 0x01, 0x00,       // CMP WORD PTR [ECX+0x13E],0x0001 ; line 1581
	0x0F, 0x85, 0x10, 0x00, 0x00, 0x00,                         // JNE LABELA1 ; line 1582
	0x66, 0xC7, 0x86, 0x40, 0x01, 0x00, 0x00, 0x3D, 0x00,       // MOV WORD PTR [ESI+0x140],0x003D ; line 1583
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x04,                   // MOV BYTE PTR [ESI+0x194],0x04 ; line 1584
	0x6A, 0x0A,                                                 // PUSH 0x0A ; line 1596
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 1597
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CDE0 ; line 1598
	0x6A, 0x02,                                                 // PUSH 0x02 ; line 1601
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 1602
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE30 ; line 1603
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000000 ; line 1606
	0x0F, 0x84, 0xBA, 0x00, 0x00, 0x00,                         // JE LABELNOT ; line 1607
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000001 ; line 1608
	0x0F, 0x84, 0x55, 0x00, 0x00, 0x00,                         // JE LABELHIT ; line 1609
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000002 ; line 1610
	0x0F, 0x84, 0x45, 0x00, 0x00, 0x00,                         // JE LABELHIT ; line 1611
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000004 ; line 1612
	0x0F, 0x84, 0x7E, 0x00, 0x00, 0x00,                         // JE LABELEND ; line 1613
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000006 ; line 1614
	0x0F, 0x84, 0x62, 0x00, 0x00, 0x00,                         // JE LABELGRAZE ; line 1615
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000007 ; line 1616
	0x0F, 0x84, 0x15, 0x00, 0x00, 0x00,                         // JE LABELHIT ; line 1617
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000008 ; line 1618
	0x0F, 0x84, 0x4E, 0x00, 0x00, 0x00,                         // JE LABELEND ; line 1619
	0xE9, 0x55, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 1620
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 1623
	0x0F, 0x8E, 0x48, 0x00, 0x00, 0x00,                         // JLE LABELNOT ; line 1624
	0x66, 0x81, 0x86, 0x6E, 0x03, 0x00, 0x00, 0x01, 0x00,       // ADD WORD PTR [ESI+0x36E],0x01 ; line 1625
	0x66, 0x81, 0xBE, 0x6E, 0x03, 0x00, 0x00, 0x04, 0x00,       // CMP WORD PTR [ESI+0x36E],0x0004 ; line 1626
	0x0F, 0x85, 0x13, 0x00, 0x00, 0x00,                         // JNE LABELHIT2 ; line 1627
	0x66, 0xC7, 0x86, 0x6E, 0x03, 0x00, 0x00, 0x00, 0x00,       // MOV WORD PTR [ESI+0x36E],0x0000 ; line 1628
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000000 ; line 1629
	0xE9, 0x18, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 1632
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 1638
	0xE9, 0x0C, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 1639
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 1642
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 1643
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 1648
	0x0F, 0x84, 0x9D, 0x00, 0x00, 0x00,                         // JE LABELKILL ; line 1649
	0x80, 0xBE, 0xAB, 0x06, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [ESI+0x6AB],0x01 ; line 1650
	0x0F, 0x84, 0x3C, 0x00, 0x00, 0x00,                         // JE LABELLV1 ; line 1651
	0x80, 0xBE, 0xAB, 0x06, 0x00, 0x00, 0x02,                   // CMP BYTE PTR [ESI+0x6AB],0x02 ; line 1652
	0x0F, 0x84, 0x44, 0x00, 0x00, 0x00,                         // JE LABELLV2 ; line 1653
	0x80, 0xBE, 0xAB, 0x06, 0x00, 0x00, 0x03,                   // CMP BYTE PTR [ESI+0x6AB],0x03 ; line 1654
	0x0F, 0x84, 0x4C, 0x00, 0x00, 0x00,                         // JE LABELLV3 ; line 1655
	0x80, 0xBE, 0xAB, 0x06, 0x00, 0x00, 0x04,                   // CMP BYTE PTR [ESI+0x6AB],0x04 ; line 1656
	0x0F, 0x84, 0x54, 0x00, 0x00, 0x00,                         // JE LABELLV4 ; line 1657
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x60, 0x01, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x160 ; line 1659
	0x0F, 0x8D, 0x59, 0x00, 0x00, 0x00,                         // JGE LABELKILL ; line 1660
	0xE9, 0x68, 0x00, 0x00, 0x00,                               // JMP LABELA1B ; line 1661
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0xD2, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x0D2 ; line 1664
	0x0F, 0x8D, 0x44, 0x00, 0x00, 0x00,                         // JGE LABELKILL ; line 1665
	0xE9, 0x53, 0x00, 0x00, 0x00,                               // JMP LABELA1B ; line 1666
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x0F0 ; line 1669
	0x0F, 0x8D, 0x2F, 0x00, 0x00, 0x00,                         // JGE LABELKILL ; line 1670
	0xE9, 0x3E, 0x00, 0x00, 0x00,                               // JMP LABELA1B ; line 1671
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x0E, 0x01, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x10E ; line 1674
	0x0F, 0x8D, 0x1A, 0x00, 0x00, 0x00,                         // JGE LABELKILL ; line 1675
	0xE9, 0x29, 0x00, 0x00, 0x00,                               // JMP LABELA1B ; line 1676
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x2C, 0x01, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x12C ; line 1679
	0x0F, 0x8D, 0x05, 0x00, 0x00, 0x00,                         // JGE LABELKILL ; line 1680
	0xE9, 0x14, 0x00, 0x00, 0x00,                               // JMP LABELA1B ; line 1681
	0x80, 0xBE, 0x13, 0x01, 0x00, 0x00, 0xFF,                   // CMP BYTE PTR [ESI+0x113],0xFF ; line 1683
	0x0F, 0x85, 0x07, 0x00, 0x00, 0x00,                         // JNE LABELA1B ; line 1684
	0xC6, 0x86, 0x13, 0x01, 0x00, 0x00, 0xF5,                   // MOV BYTE PTR [ESI+0x113],0xF5 ; line 1685
	0xD9, 0xEE,                                                 // FLDZ ; line 1688
	0x0F, 0xBF, 0x86, 0x3E, 0x01, 0x00, 0x00,                   // MOVSX EAX,WORD PTR [ESI+0x13E] ; line 1689
	0xBF, 0x0C, 0x00, 0x00, 0x00,                               // MOV EDI,0x0000000C ; line 1690
	0x39, 0xBE, 0x44, 0x01, 0x00, 0x00,                         // CMP [ESI+0x144],EDI ; line 1691
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 1692
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6A2018 ; line 1694
};
static JumpTarget mimaA214FLASH_RISE_jumpData[] = {
	{ 0x059, 0x6A21A2 },
	{ 0x08F, 0x48CCA0 },
	{ 0x0B3, 0x438C00 },
	{ 0x15B, 0x48CDE0 },
	{ 0x164, 0x48CE30 },
	{ 0x307, 0x6A2018 },
};
static PatchByteCode mimaA214FLASH_RISE_patchByteCode = { mimaA214FLASH_RISE_byteCode, 779, mimaA214FLASH_RISE_jumpData, 6 };
// mimaA214FLASHB_1X declared in mima.asm line 1711
static unsigned char mimaA214FLASHB_1X_byteCode[] = {
	0xD9, 0xEE, // FLDZ ; line 1712
};
static PatchByteCode mimaA214FLASHB_1X_patchByteCode = { mimaA214FLASHB_1X_byteCode, 2, nullptr, 0 };
// mimaA214FLASHB_1Y declared in mima.asm line 1714
static unsigned char mimaA214FLASHB_1Y_byteCode[] = {
	0xD9, 0x05, 0x94, 0xAE, 0x85, 0x00, // FLD DWORD PTR [0x85AE94] ; line 1715
};
static PatchByteCode mimaA214FLASHB_1Y_patchByteCode = { mimaA214FLASHB_1Y_byteCode, 6, nullptr, 0 };
// mimaA214FLASHC_1A declared in mima.asm line 1731
static unsigned char mimaA214FLASHC_1A_byteCode[] = {
	0xD9, 0x05, 0xB0, 0xB3, 0x85, 0x00, // FLD DWORD PTR [0x85B3B0] ; line 1732
};
static PatchByteCode mimaA214FLASHC_1A_patchByteCode = { mimaA214FLASHC_1A_byteCode, 6, nullptr, 0 };
// mimaA214FLASHC_1B declared in mima.asm line 1734
static unsigned char mimaA214FLASHC_1B_byteCode[] = {
	0xD9, 0xEE,                         // FLDZ ; line 1735
	0xD8, 0x25, 0xB0, 0xB3, 0x85, 0x00, // FSUB DWORD PTR [0x85B3B0] ; line 1736
};
static PatchByteCode mimaA214FLASHC_1B_patchByteCode = { mimaA214FLASHC_1B_byteCode, 8, nullptr, 0 };
// mimaA214FLASHC_2A declared in mima.asm line 1738
static unsigned char mimaA214FLASHC_2A_byteCode[] = {
	0xD9, 0xEE, // FLDZ ; line 1739
};
static PatchByteCode mimaA214FLASHC_2A_patchByteCode = { mimaA214FLASHC_2A_byteCode, 2, nullptr, 0 };
// mimaA214FLASHC_2B declared in mima.asm line 1741
static unsigned char mimaA214FLASHC_2B_byteCode[] = {
	0xD9, 0xEE,                         // FLDZ ; line 1742
	0xD8, 0x25, 0xB0, 0xB3, 0x85, 0x00, // FSUB DWORD PTR [0x85B3B0] ; line 1743
	0xD8, 0x25, 0xB0, 0xB3, 0x85, 0x00, // FSUB DWORD PTR [0x85B3B0] ; line 1744
};
static PatchByteCode mimaA214FLASHC_2B_patchByteCode = { mimaA214FLASHC_2B_byteCode, 14, nullptr, 0 };
// mimaA214FLASHC_3A declared in mima.asm line 1746
static unsigned char mimaA214FLASHC_3A_byteCode[] = {
	0xD9, 0x05, 0xB0, 0xB3, 0x85, 0x00, // FLD DWORD PTR [0x85B3B0] ; line 1747
};
static PatchByteCode mimaA214FLASHC_3A_patchByteCode = { mimaA214FLASHC_3A_byteCode, 6, nullptr, 0 };
// mimaA214FLASHC_3B declared in mima.asm line 1749
static unsigned char mimaA214FLASHC_3B_byteCode[] = {
	0xD9, 0xEE,                         // FLDZ ; line 1750
	0xD8, 0x25, 0xB0, 0xB3, 0x85, 0x00, // FSUB DWORD PTR [0x85B3B0] ; line 1751
};
static PatchByteCode mimaA214FLASHC_3B_patchByteCode = { mimaA214FLASHC_3B_byteCode, 8, nullptr, 0 };
// mimaA214FLASHC_4A declared in mima.asm line 1753
static unsigned char mimaA214FLASHC_4A_byteCode[] = {
	0xD9, 0x05, 0xB0, 0xB3, 0x85, 0x00, // FLD DWORD PTR [0x85B3B0] ; line 1754
	0xD8, 0x05, 0xB0, 0xB3, 0x85, 0x00, // FADD DWORD PTR [0x85B3B0] ; line 1755
};
static PatchByteCode mimaA214FLASHC_4A_patchByteCode = { mimaA214FLASHC_4A_byteCode, 12, nullptr, 0 };
// mimaA214FLASHC_4B declared in mima.asm line 1757
static unsigned char mimaA214FLASHC_4B_byteCode[] = {
	0xD9, 0xEE,                         // FLDZ ; line 1758
	0xD8, 0x25, 0xB0, 0xB3, 0x85, 0x00, // FSUB DWORD PTR [0x85B3B0] ; line 1759
	0xD8, 0x25, 0xB0, 0xB3, 0x85, 0x00, // FSUB DWORD PTR [0x85B3B0] ; line 1760
};
static PatchByteCode mimaA214FLASHC_4B_patchByteCode = { mimaA214FLASHC_4B_byteCode, 14, nullptr, 0 };
// mimaA623GRAB_ALLOWCANCELB declared in mima.asm line 1796
static unsigned char mimaA623GRAB_ALLOWCANCELB_byteCode[] = {
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 1797
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000001 ; line 1798
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x69B4D8 ; line 1799
};
static JumpTarget mimaA623GRAB_ALLOWCANCELB_jumpData[] = {
	{ 0x012, 0x69B4D8 },
};
static PatchByteCode mimaA623GRAB_ALLOWCANCELB_patchByteCode = { mimaA623GRAB_ALLOWCANCELB_byteCode, 22, mimaA623GRAB_ALLOWCANCELB_jumpData, 1 };
// mimaA623GRAB_ALLOWCANCELC declared in mima.asm line 1801
static unsigned char mimaA623GRAB_ALLOWCANCELC_byteCode[] = {
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 1802
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000001 ; line 1803
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x69B57C ; line 1804
};
static JumpTarget mimaA623GRAB_ALLOWCANCELC_jumpData[] = {
	{ 0x012, 0x69B57C },
};
static PatchByteCode mimaA623GRAB_ALLOWCANCELC_patchByteCode = { mimaA623GRAB_ALLOWCANCELC_byteCode, 22, mimaA623GRAB_ALLOWCANCELC_jumpData, 1 };
// mimaA623GRABB_SPREADC2 declared in mima.asm line 1822
static unsigned char mimaA623GRABB_SPREADC2_byteCode[] = {
	0xDB, 0x44, 0x24, 0x14,             // FILD DWORD PTR [ESP+0x14] ; line 1823
	0xD8, 0x0D, 0x38, 0x15, 0x87, 0x00, // FMUL DWORD PTR [0x871538] ; line 1824
	0x0F, 0x8D, 0xDE, 0xAD, 0xBE, 0xEF, // JNL 0x691E30 ; line 1825
};
static JumpTarget mimaA623GRABB_SPREADC2_jumpData[] = {
	{ 0x00C, 0x691E30 },
};
static PatchByteCode mimaA623GRABB_SPREADC2_patchByteCode = { mimaA623GRABB_SPREADC2_byteCode, 16, mimaA623GRABB_SPREADC2_jumpData, 1 };
// mimaA623GRABB_SPREADC1 declared in mima.asm line 1827
static unsigned char mimaA623GRABB_SPREADC1_byteCode[] = {
	0xDB, 0x44, 0x24, 0x10,             // FILD DWORD PTR [ESP+0x10] ; line 1828
	0xD8, 0x0D, 0x38, 0x15, 0x87, 0x00, // FMUL DWORD PTR [0x871538] ; line 1829
	0x0F, 0x8D, 0xDE, 0xAD, 0xBE, 0xEF, // JNL 0x691E7E ; line 1830
};
static JumpTarget mimaA623GRABB_SPREADC1_jumpData[] = {
	{ 0x00C, 0x691E7E },
};
static PatchByteCode mimaA623GRABB_SPREADC1_patchByteCode = { mimaA623GRABB_SPREADC1_byteCode, 16, mimaA623GRABB_SPREADC1_jumpData, 1 };
// mimaA623GRAB_LENGTHB declared in mima.asm line 1836
static unsigned char mimaA623GRAB_LENGTHB_byteCode[] = {
	0x80, 0xBE, 0xAD, 0x06, 0x00, 0x00, 0x00,             // CMP BYTE PTR [ESI+0x6AD],0x00 ; line 1837
	0x0F, 0x84, 0x34, 0x00, 0x00, 0x00,                   // JE LABEL0 ; line 1838
	0x80, 0xBE, 0xAD, 0x06, 0x00, 0x00, 0x01,             // CMP BYTE PTR [ESI+0x6AD],0x01 ; line 1839
	0x0F, 0x84, 0x35, 0x00, 0x00, 0x00,                   // JE LABEL1 ; line 1840
	0x80, 0xBE, 0xAD, 0x06, 0x00, 0x00, 0x02,             // CMP BYTE PTR [ESI+0x6AD],0x02 ; line 1841
	0x0F, 0x84, 0x36, 0x00, 0x00, 0x00,                   // JE LABEL2 ; line 1842
	0x80, 0xBE, 0xAD, 0x06, 0x00, 0x00, 0x03,             // CMP BYTE PTR [ESI+0x6AD],0x03 ; line 1843
	0x0F, 0x84, 0x37, 0x00, 0x00, 0x00,                   // JE LABEL3 ; line 1844
	0x80, 0xBE, 0xAD, 0x06, 0x00, 0x00, 0x04,             // CMP BYTE PTR [ESI+0x6AD],0x04 ; line 1845
	0x0F, 0x8D, 0x38, 0x00, 0x00, 0x00,                   // JGE LABEL4 ; line 1846
	0x66, 0x81, 0xBE, 0xD2, 0x07, 0x00, 0x00, 0x09, 0x00, // CMP WORD PTR [ESI+0x7D2],0x09 ; line 1849
	0xE9, 0x38, 0x00, 0x00, 0x00,                         // JMP END ; line 1850
	0x66, 0x81, 0xBE, 0xD2, 0x07, 0x00, 0x00, 0x0B, 0x00, // CMP WORD PTR [ESI+0x7D2],0x0B ; line 1853
	0xE9, 0x2A, 0x00, 0x00, 0x00,                         // JMP END ; line 1854
	0x66, 0x81, 0xBE, 0xD2, 0x07, 0x00, 0x00, 0x0D, 0x00, // CMP WORD PTR [ESI+0x7D2],0x0D ; line 1857
	0xE9, 0x1C, 0x00, 0x00, 0x00,                         // JMP END ; line 1858
	0x66, 0x81, 0xBE, 0xD2, 0x07, 0x00, 0x00, 0x0F, 0x00, // CMP WORD PTR [ESI+0x7D2],0x0F ; line 1861
	0xE9, 0x0E, 0x00, 0x00, 0x00,                         // JMP END ; line 1862
	0x66, 0x81, 0xBE, 0xD2, 0x07, 0x00, 0x00, 0x11, 0x00, // CMP WORD PTR [ESI+0x7D2],0x11 ; line 1865
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP END ; line 1866
};
static PatchByteCode mimaA623GRAB_LENGTHB_patchByteCode = { mimaA623GRAB_LENGTHB_byteCode, 135, nullptr, 0 };
// mimaA623GRAB_LENGTHC declared in mima.asm line 1870
static unsigned char mimaA623GRAB_LENGTHC_byteCode[] = {
	0x80, 0xBE, 0xAD, 0x06, 0x00, 0x00, 0x00,             // CMP BYTE PTR [ESI+0x6AD],0x00 ; line 1871
	0x0F, 0x84, 0x34, 0x00, 0x00, 0x00,                   // JE LABEL0 ; line 1872
	0x80, 0xBE, 0xAD, 0x06, 0x00, 0x00, 0x01,             // CMP BYTE PTR [ESI+0x6AD],0x01 ; line 1873
	0x0F, 0x84, 0x35, 0x00, 0x00, 0x00,                   // JE LABEL1 ; line 1874
	0x80, 0xBE, 0xAD, 0x06, 0x00, 0x00, 0x02,             // CMP BYTE PTR [ESI+0x6AD],0x02 ; line 1875
	0x0F, 0x84, 0x36, 0x00, 0x00, 0x00,                   // JE LABEL2 ; line 1876
	0x80, 0xBE, 0xAD, 0x06, 0x00, 0x00, 0x03,             // CMP BYTE PTR [ESI+0x6AD],0x03 ; line 1877
	0x0F, 0x84, 0x37, 0x00, 0x00, 0x00,                   // JE LABEL3 ; line 1878
	0x80, 0xBE, 0xAD, 0x06, 0x00, 0x00, 0x04,             // CMP BYTE PTR [ESI+0x6AD],0x04 ; line 1879
	0x0F, 0x8D, 0x38, 0x00, 0x00, 0x00,                   // JGE LABEL4 ; line 1880
	0x66, 0x81, 0xBE, 0xD2, 0x07, 0x00, 0x00, 0x09, 0x00, // CMP WORD PTR [ESI+0x7D2],0x09 ; line 1883
	0xE9, 0x38, 0x00, 0x00, 0x00,                         // JMP END ; line 1884
	0x66, 0x81, 0xBE, 0xD2, 0x07, 0x00, 0x00, 0x0B, 0x00, // CMP WORD PTR [ESI+0x7D2],0x0B ; line 1887
	0xE9, 0x2A, 0x00, 0x00, 0x00,                         // JMP END ; line 1888
	0x66, 0x81, 0xBE, 0xD2, 0x07, 0x00, 0x00, 0x0D, 0x00, // CMP WORD PTR [ESI+0x7D2],0x0D ; line 1891
	0xE9, 0x1C, 0x00, 0x00, 0x00,                         // JMP END ; line 1892
	0x66, 0x81, 0xBE, 0xD2, 0x07, 0x00, 0x00, 0x0F, 0x00, // CMP WORD PTR [ESI+0x7D2],0x0F ; line 1895
	0xE9, 0x0E, 0x00, 0x00, 0x00,                         // JMP END ; line 1896
	0x66, 0x81, 0xBE, 0xD2, 0x07, 0x00, 0x00, 0x11, 0x00, // CMP WORD PTR [ESI+0x7D2],0x11 ; line 1899
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP END ; line 1900
};
static PatchByteCode mimaA623GRAB_LENGTHC_patchByteCode = { mimaA623GRAB_LENGTHC_byteCode, 135, nullptr, 0 };
// mimaA623GRAB_NOREANGLE declared in mima.asm line 1910
static unsigned char mimaA623GRAB_NOREANGLE_byteCode[] = {
	0xDD, 0xD8, // FSTP ST0 ; line 1911
};
static PatchByteCode mimaA623GRAB_NOREANGLE_patchByteCode = { mimaA623GRAB_NOREANGLE_byteCode, 2, nullptr, 0 };
// mimaA623GRAB_FIRSTSUB declared in mima.asm line 1915
static unsigned char mimaA623GRAB_FIRSTSUB_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x81, 0x00, // CMP WORD PTR [ESI+0x140],0x0081 ; line 1916
	0x0F, 0x8C, 0x05, 0x00, 0x00, 0x00,                   // JL LABELNEXT ; line 1917
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x69EBDB ; line 1918
	0x80, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x01,             // CMP BYTE PTR [ESI+0x144],0x01 ; line 1921
	0x0F, 0x8E, 0x13, 0x00, 0x00, 0x00,                   // JLE LABELNEXT2 ; line 1922
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,             // CMP BYTE PTR [ESI+0x194],0x00 ; line 1923
	0x0F, 0x85, 0x06, 0x00, 0x00, 0x00,                   // JNE LABELNEXT2 ; line 1924
	0x0F, 0x84, 0xDE, 0xAD, 0xBE, 0xEF,                   // JE 0x69EBDB ; line 1925
	0x8A, 0x86, 0x13, 0x01, 0x00, 0x00,                   // MOV AL,[ESI+0x113] ; line 1928
	0x80, 0xF8, 0x01,                                     // CMP AL,0x01 ; line 1929
	0x0F, 0x82, 0xDE, 0xAD, 0xBE, 0xEF,                   // JB 0x69EBDB ; line 1930
	0x88, 0x86, 0x13, 0x01, 0x00, 0x00,                   // MOV [ESI+0x113],AL ; line 1932
	0x88, 0x86, 0x11, 0x01, 0x00, 0x00,                   // MOV [ESI+0x111],AL ; line 1933
	0x88, 0x86, 0x12, 0x01, 0x00, 0x00,                   // MOV [ESI+0x112],AL ; line 1934
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x6A267A ; line 1935
};
static JumpTarget mimaA623GRAB_FIRSTSUB_jumpData[] = {
	{ 0x010, 0x69EBDB },
	{ 0x030, 0x69EBDB },
	{ 0x03F, 0x69EBDB },
	{ 0x056, 0x6A267A },
};
static PatchByteCode mimaA623GRAB_FIRSTSUB_patchByteCode = { mimaA623GRAB_FIRSTSUB_byteCode, 90, mimaA623GRAB_FIRSTSUB_jumpData, 4 };
// mimaA623GRAB_FIX1 declared in mima.asm line 1940
static unsigned char mimaA623GRAB_FIX1_byteCode[] = {
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00, // FADD DWORD PTR [ESI+0xF0] ; line 1941
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00, // FSTP DWORD PTR [ESI+0xF0] ; line 1942
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,       // JMP 0x6A257C ; line 1943
};
static JumpTarget mimaA623GRAB_FIX1_jumpData[] = {
	{ 0x00D, 0x6A257C },
};
static PatchByteCode mimaA623GRAB_FIX1_patchByteCode = { mimaA623GRAB_FIX1_byteCode, 17, mimaA623GRAB_FIX1_jumpData, 1 };
// mimaA623GRAB_EFFECT2 declared in mima.asm line 1947
static unsigned char mimaA623GRAB_EFFECT2_byteCode[] = {
	0x60,                                                       // PUSHAD ; line 1950
	0x6A, 0x01,                                                 // PUSH 0x01 ; line 1951
	0x6A, 0x00,                                                 // PUSH 0x00 ; line 1952
	0x6A, 0x00,                                                 // PUSH 0x00 ; line 1953
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 1954
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE90 ; line 1955
	0x84, 0xC0,                                                 // TEST AL,AL ; line 1956
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,                         // JNE 0x6A2382 ; line 1957
	0x61,                                                       // POPAD ; line 1958
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x01 ; line 1960
	0x0F, 0x85, 0x11, 0x00, 0x00, 0x00,                         // JNE LABELGONEXT ; line 1961
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 1963
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000000 ; line 1964
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x76, 0x00,       // CMP WORD PTR [ESI+0x140],0x0076 ; line 1968
	0x0F, 0x85, 0x1C, 0x00, 0x00, 0x00,                         // JNE LABELNOSOUND ; line 1969
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x142],0x00 ; line 1970
	0x0F, 0x85, 0x0D, 0x00, 0x00, 0x00,                         // JNE LABELNOSOUND ; line 1971
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 1972
	0x6A, 0x02,                                                 // PUSH 0x02 ; line 1973
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x464980 ; line 1974
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x11C] ; line 1977
};
static JumpTarget mimaA623GRAB_EFFECT2_jumpData[] = {
	{ 0x00A, 0x48CE90 },
	{ 0x012, 0x6A2382 },
	{ 0x05F, 0x464980 },
};
static PatchByteCode mimaA623GRAB_EFFECT2_patchByteCode = { mimaA623GRAB_EFFECT2_byteCode, 105, mimaA623GRAB_EFFECT2_jumpData, 3 };
// mimaA623GRAB_EFFECT declared in mima.asm line 1982
static unsigned char mimaA623GRAB_EFFECT_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x76, 0x00,       // CMP WORD PTR [ESI+0x140],0x0076 ; line 1985
	0x0F, 0x85, 0x30, 0x00, 0x00, 0x00,                         // JNE LABELNOSOUND ; line 1986
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x142],0x00 ; line 1987
	0x0F, 0x85, 0x21, 0x00, 0x00, 0x00,                         // JNE LABELNOSOUND ; line 1988
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 1989
	0x0F, 0x8E, 0x14, 0x00, 0x00, 0x00,                         // JLE LABELNOSOUND ; line 1990
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 1991
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 1992
	0x6A, 0x02,                                                 // PUSH 0x02 ; line 1993
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x464980 ; line 1994
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 1999
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2000
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CDE0 ; line 2001
	0x6A, 0x01,                                                 // PUSH 0x01 ; line 2004
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2005
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE30 ; line 2006
	0x60,                                                       // PUSHAD ; line 2009
	0x6A, 0x02,                                                 // PUSH 0x02 ; line 2010
	0x6A, 0x00,                                                 // PUSH 0x00 ; line 2011
	0x6A, 0x00,                                                 // PUSH 0x00 ; line 2012
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2013
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE90 ; line 2014
	0x84, 0xC0,                                                 // TEST AL,AL ; line 2015
	0x0F, 0x84, 0x0A, 0x00, 0x00, 0x00,                         // JE LABELNOTHIT ; line 2016
	0x81, 0x86, 0x44, 0x01, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, // ADD DWORD PTR [ESI+0x144],0x0258 ; line 2017
	0x61,                                                       // POPAD ; line 2019
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000000 ; line 2022
	0x0F, 0x84, 0xBA, 0x00, 0x00, 0x00,                         // JE LABELNOT ; line 2023
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000001 ; line 2024
	0x0F, 0x84, 0x55, 0x00, 0x00, 0x00,                         // JE LABELHIT ; line 2025
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000002 ; line 2026
	0x0F, 0x84, 0x45, 0x00, 0x00, 0x00,                         // JE LABELHIT ; line 2027
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000004 ; line 2028
	0x0F, 0x84, 0x7E, 0x00, 0x00, 0x00,                         // JE LABELEND ; line 2029
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000006 ; line 2030
	0x0F, 0x84, 0x62, 0x00, 0x00, 0x00,                         // JE LABELGRAZE ; line 2031
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000007 ; line 2032
	0x0F, 0x84, 0x15, 0x00, 0x00, 0x00,                         // JE LABELHIT ; line 2033
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000008 ; line 2034
	0x0F, 0x84, 0x4E, 0x00, 0x00, 0x00,                         // JE LABELEND ; line 2035
	0xE9, 0x55, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 2036
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 2039
	0x0F, 0x8E, 0x48, 0x00, 0x00, 0x00,                         // JLE LABELNOT ; line 2040
	0x66, 0x81, 0x86, 0x6E, 0x03, 0x00, 0x00, 0x01, 0x00,       // ADD WORD PTR [ESI+0x36E],0x01 ; line 2041
	0x66, 0x81, 0xBE, 0x6E, 0x03, 0x00, 0x00, 0x04, 0x00,       // CMP WORD PTR [ESI+0x36E],0x0004 ; line 2042
	0x0F, 0x85, 0x13, 0x00, 0x00, 0x00,                         // JNE LABELHIT2 ; line 2043
	0x66, 0xC7, 0x86, 0x6E, 0x03, 0x00, 0x00, 0x00, 0x00,       // MOV WORD PTR [ESI+0x36E],0x0000 ; line 2044
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000000 ; line 2045
	0xE9, 0x18, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 2048
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 2054
	0xE9, 0x0C, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 2055
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 2058
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 2059
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 2066
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE NODYING ; line 2067
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x01 ; line 2068
	0x0F, 0x8E, 0x22, 0x00, 0x00, 0x00,                         // JLE NODYING ; line 2069
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x11C] ; line 2070
	0xDC, 0x0D, 0x98, 0xA2, 0x85, 0x00,                         // FMUL QWORD PTR [0x85A298] ; line 2071
	0xD9, 0x96, 0x1C, 0x01, 0x00, 0x00,                         // FST DWORD PTR [ESI+0x11C] ; line 2072
	0xD9, 0x9E, 0x20, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x120] ; line 2073
	0x81, 0x86, 0x44, 0x01, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, // ADD DWORD PTR [ESI+0x144],0x0258 ; line 2074
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x01 ; line 2081
	0x0F, 0x85, 0x2F, 0x01, 0x00, 0x00,                         // JNE LABELGONEXT ; line 2082
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x02,                   // MOV BYTE PTR [ESI+0x194],0x02 ; line 2084
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000000 ; line 2085
	0x60,                                                       // PUSHAD ; line 2087
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 2089
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x13, 0x02,       // CMP WORD PTR [ECX+0x13C],0x0213 ; line 2090
	0x0F, 0x85, 0x07, 0x01, 0x00, 0x00,                         // JNE LABELNOTC ; line 2091
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 2094
	0x6A, 0x02,                                                 // PUSH 0x02 ; line 2095
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x464980 ; line 2096
	0xBA, 0x00, 0x00, 0x00, 0x00,                               // MOV EDX,0x00000000 ; line 2099
	0x89, 0x54, 0x24, 0x10,                                     // MOV [ESP+0x10],EDX ; line 2100
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 2104
	0x8D, 0x44, 0x24, 0x78,                                     // LEA EAX,[ESP+0x78] ; line 2105
	0x50,                                                       // PUSH EAX ; line 2106
	0x6A, 0x01,                                                 // PUSH 0x01 ; line 2107
	0xD9, 0xEE,                                                 // FLDZ ; line 2110
	0xD9, 0x9C, 0x24, 0x80, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x80] ; line 2111
	0xD9, 0xEE,                                                 // FLDZ ; line 2114
	0xD9, 0x9C, 0x24, 0x84, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x84] ; line 2115
	0xD9, 0xE8,                                                 // FLD1 ; line 2118
	0xD9, 0x9C, 0x24, 0x88, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x88] ; line 2119
	0xD9, 0xEE,                                                 // FLDZ ; line 2121
	0xD9, 0x9C, 0x24, 0x8C, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x8C] ; line 2123
	0xD9, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESP+0x80] ; line 2124
	0x0F, 0xB6, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVZX ECX,BYTE PTR [ESI+0x104] ; line 2125
	0xD9, 0xE0,                                                 // FCHS ; line 2126
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 2127
	0x51,                                                       // PUSH ECX ; line 2128
	0x51,                                                       // PUSH ECX ; line 2129
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 2130
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2131
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 2132
	0xDC, 0x0D, 0xB0, 0x77, 0x86, 0x00,                         // FMUL QWORD PTR [0x8677B0] ; line 2134
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0xF0] ; line 2135
	0xD9, 0x5C, 0x24, 0x24,                                     // FSTP DWORD PTR [ESP+0x24] ; line 2136
	0xD9, 0x44, 0x24, 0x24,                                     // FLD DWORD PTR [ESP+0x24] ; line 2137
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2138
	0x51,                                                       // PUSH ECX ; line 2139
	0xD9, 0x84, 0x24, 0x8C, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESP+0x8C] ; line 2140
	0xD9, 0xE0,                                                 // FCHS ; line 2141
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2142
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 2143
	0x0F, 0xBE, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVSX EDX,BYTE PTR [ESI+0x104] ; line 2144
	0xDC, 0x0D, 0xB0, 0x77, 0x86, 0x00,                         // FMUL QWORD PTR [0x8677B0] ; line 2146
	0x8B, 0x07,                                                 // MOV EAX,[EDI] ; line 2147
	0x89, 0x54, 0x24, 0x28,                                     // MOV [ESP+0x28],EDX ; line 2148
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2149
	0xDB, 0x44, 0x24, 0x28,                                     // FILD DWORD PTR [ESP+0x28] ; line 2150
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 2151
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0xEC] ; line 2152
	0xD9, 0x5C, 0x24, 0x28,                                     // FSTP DWORD PTR [ESP+0x28] ; line 2153
	0xD9, 0x44, 0x24, 0x28,                                     // FLD DWORD PTR [ESP+0x28] ; line 2154
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2155
	0x50,                                                       // PUSH EAX ; line 2156
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 2157
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x12, 0x02,       // CMP WORD PTR [EAX+0x13C],0x212 ; line 2158
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                         // JE SHORT LABELSC0 ; line 2159
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x13, 0x02,       // CMP WORD PTR [EAX+0x13C],0x213 ; line 2160
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE SHORT LABELSC0 ; line 2161
	0xE9, 0x16, 0x00, 0x00, 0x00,                               // JMP SHORT LABELSC4 ; line 2162
	0x58,                                                       // POP EAX ; line 2164
	0x68, 0x35, 0x03, 0x00, 0x00,                               // PUSH 0x00000335 ; line 2165
	0xE9, 0x16, 0x00, 0x00, 0x00,                               // JMP SHORT LABELSC ; line 2166
	0x58,                                                       // POP EAX ; line 2168
	0x68, 0x35, 0x03, 0x00, 0x00,                               // PUSH 0x00000335 ; line 2169
	0xE9, 0x0B, 0x00, 0x00, 0x00,                               // JMP SHORT LABELSC ; line 2170
	0x58,                                                       // POP EAX ; line 2172
	0x68, 0x35, 0x03, 0x00, 0x00,                               // PUSH 0x00000335 ; line 2173
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP SHORT LABELSC ; line 2174
	0xFF, 0xD0,                                                 // CALL EAX ; line 2176
	0x61,                                                       // POPAD ; line 2180
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x11C] ; line 2183
};
static JumpTarget mimaA623GRAB_EFFECT_jumpData[] = {
	{ 0x03B, 0x464980 },
	{ 0x044, 0x48CDE0 },
	{ 0x04D, 0x48CE30 },
	{ 0x05B, 0x48CE90 },
	{ 0x1BB, 0x464980 },
	{ 0x213, 0x409580 },
	{ 0x23C, 0x4095F0 },
};
static PatchByteCode mimaA623GRAB_EFFECT_patchByteCode = { mimaA623GRAB_EFFECT_byteCode, 704, mimaA623GRAB_EFFECT_jumpData, 7 };
// mimaA623GRAB_LV4NEVER declared in mima.asm line 2187
static unsigned char mimaA623GRAB_LV4NEVER_byteCode[] = {
	0x80, 0xBE, 0xAD, 0x06, 0x00, 0x00, 0x09, // CMP BYTE PTR [ESI+0x6AD],0x09 ; line 2188
};
static PatchByteCode mimaA623GRAB_LV4NEVER_patchByteCode = { mimaA623GRAB_LV4NEVER_byteCode, 7, nullptr, 0 };
// mimaA623GRAB_EFFDUR declared in mima.asm line 2204
static unsigned char mimaA623GRAB_EFFDUR_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x81, 0x00,       // CMP WORD PTR [ESI+0x140],0x0081 ; line 2205
	0x0F, 0x8C, 0x0A, 0x00, 0x00, 0x00,                         // JL LABELNEXT ; line 2206
	0xC7, 0x86, 0x44, 0x01, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, // MOV DWORD PTR [ESI+0x144],0x0258 ; line 2207
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x0258 ; line 2209
};
static PatchByteCode mimaA623GRAB_EFFDUR_patchByteCode = { mimaA623GRAB_EFFDUR_byteCode, 35, nullptr, 0 };
// mimaA623GRAB_NEVERB1 declared in mima.asm line 2213
static unsigned char mimaA623GRAB_NEVERB1_byteCode[] = {
	0xD9, 0xEE,                   // FLDZ ; line 2216
	0xBD, 0x04, 0x00, 0x00, 0x00, // MOV EBP,0x00000004 ; line 2217
	0x66, 0x39, 0xE8,             // CMP AX,BP ; line 2218
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x6913C7 ; line 2219
};
static JumpTarget mimaA623GRAB_NEVERB1_jumpData[] = {
	{ 0x00B, 0x6913C7 },
};
static PatchByteCode mimaA623GRAB_NEVERB1_patchByteCode = { mimaA623GRAB_NEVERB1_byteCode, 15, mimaA623GRAB_NEVERB1_jumpData, 1 };
// mimaA623GRAB_NEVERC1 declared in mima.asm line 2223
static unsigned char mimaA623GRAB_NEVERC1_byteCode[] = {
	0xD9, 0xEE,                   // FLDZ ; line 2225
	0xBD, 0x04, 0x00, 0x00, 0x00, // MOV EBP,0x00000004 ; line 2226
	0x66, 0x39, 0xE8,             // CMP AX,BP ; line 2227
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x691DE1 ; line 2228
};
static JumpTarget mimaA623GRAB_NEVERC1_jumpData[] = {
	{ 0x00B, 0x691DE1 },
};
static PatchByteCode mimaA623GRAB_NEVERC1_patchByteCode = { mimaA623GRAB_NEVERC1_byteCode, 15, mimaA623GRAB_NEVERC1_jumpData, 1 };
// mimaA214EYEC_ADDON1 declared in mima.asm line 2232
static unsigned char mimaA214EYEC_ADDON1_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0xB4, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0xB4 ; line 2233
};
static PatchByteCode mimaA214EYEC_ADDON1_patchByteCode = { mimaA214EYEC_ADDON1_byteCode, 10, nullptr, 0 };
// mimaA214EYE_SHRINKBOX declared in mima.asm line 2239
static unsigned char mimaA214EYE_SHRINKBOX_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x6A31CB ; line 2240
};
static JumpTarget mimaA214EYE_SHRINKBOX_jumpData[] = {
	{ 0x001, 0x6A31CB },
};
static PatchByteCode mimaA214EYE_SHRINKBOX_patchByteCode = { mimaA214EYE_SHRINKBOX_byteCode, 5, mimaA214EYE_SHRINKBOX_jumpData, 1 };
// mimaA214EYE_BALLDONTPOPIFRODGONE declared in mima.asm line 2244
static PatchByteCode mimaA214EYE_BALLDONTPOPIFRODGONE_patchByteCode = { nullptr, 0, nullptr, 0 };
// mimaA214EYE_HITCOUNT declared in mima.asm line 2248
static unsigned char mimaA214EYE_HITCOUNT_byteCode[] = {
	0x6A, 0x0A,                                                 // PUSH 0x0A ; line 2254
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2255
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CDE0 ; line 2256
	0x6A, 0x01,                                                 // PUSH 0x01 ; line 2259
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2260
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE30 ; line 2261
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 2263
	0x0F, 0x85, 0x11, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 2264
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 2265
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 2266
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 2271
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                         // JNE LABEL2 ; line 2272
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6A33AD ; line 2273
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x11C] ; line 2275
};
static JumpTarget mimaA214EYE_HITCOUNT_jumpData[] = {
	{ 0x005, 0x48CDE0 },
	{ 0x00E, 0x48CE30 },
	{ 0x041, 0x6A33AD },
};
static PatchByteCode mimaA214EYE_HITCOUNT_patchByteCode = { mimaA214EYE_HITCOUNT_byteCode, 75, mimaA214EYE_HITCOUNT_jumpData, 3 };
// mimaA214EYE_CORESPD declared in mima.asm line 2290
static unsigned char mimaA214EYE_CORESPD_byteCode[] = {
	0x0F, 0xBE, 0x86, 0x04, 0x01, 0x00, 0x00, // MOVSX EAX,BYTE PTR [ESI+0x104] ; line 2291
};
static PatchByteCode mimaA214EYE_CORESPD_patchByteCode = { mimaA214EYE_CORESPD_byteCode, 7, nullptr, 0 };
// mimaA214EYE_CORESPIN declared in mima.asm line 2297
static unsigned char mimaA214EYE_CORESPIN_byteCode[] = {
	0xD8, 0x02,                         // FADD DWORD PTR [EDX] ; line 2298
	0xD8, 0x86, 0x2C, 0x01, 0x00, 0x00, // FADD DWORD PTR [ESI+0x12C] ; line 2299
};
static PatchByteCode mimaA214EYE_CORESPIN_patchByteCode = { mimaA214EYE_CORESPIN_byteCode, 8, nullptr, 0 };
// mimaA214EYE_COREMAXSTRETCH declared in mima.asm line 2309
static unsigned char mimaA214EYE_COREMAXSTRETCH_byteCode[] = {
	0xD9, 0x05, 0xF0, 0x89, 0x85, 0x00, // FLD DWORD PTR [0x8589F0] ; line 2310
};
static PatchByteCode mimaA214EYE_COREMAXSTRETCH_patchByteCode = { mimaA214EYE_COREMAXSTRETCH_byteCode, 6, nullptr, 0 };
// mimaA214EYE_CORECOLOR declared in mima.asm line 2332
static unsigned char mimaA214EYE_CORECOLOR_byteCode[] = {
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 2333
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 2335
	0x0F, 0x85, 0x81, 0x00, 0x00, 0x00,                         // JNE LABELG ; line 2336
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 2338
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x3D, 0x02,       // CMP WORD PTR [EAX+0x13C],0x023D ; line 2339
	0x0F, 0x84, 0x39, 0x00, 0x00, 0x00,                         // JE LABELC ; line 2340
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x3B, 0x02,       // CMP WORD PTR [EAX+0x13C],0x023B ; line 2341
	0x0F, 0x84, 0x2A, 0x00, 0x00, 0x00,                         // JE LABELC ; line 2342
	0xD9, 0x42, 0x04,                                           // FLD DWORD PTR [EDX+0x04] ; line 2345
	0xD9, 0xEE,                                                 // FLDZ ; line 2346
	0xDE, 0xD9,                                                 // FCOMPP ; line 2347
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2348
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2349
	0x0F, 0x85, 0x0C, 0x00, 0x00, 0x00,                         // JNE LABELB1 ; line 2350
	0xC6, 0x86, 0x12, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x112],0x00 ; line 2351
	0xE9, 0x3F, 0x00, 0x00, 0x00,                               // JMP LABELG ; line 2352
	0xC6, 0x86, 0x10, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x110],0x00 ; line 2354
	0xE9, 0x33, 0x00, 0x00, 0x00,                               // JMP LABELG ; line 2355
	0xD9, 0x42, 0x04,                                           // FLD DWORD PTR [EDX+0x04] ; line 2358
	0xD9, 0xEE,                                                 // FLDZ ; line 2359
	0xDE, 0xD9,                                                 // FCOMPP ; line 2360
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2361
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2362
	0x0F, 0x85, 0x13, 0x00, 0x00, 0x00,                         // JNE LABELC1 ; line 2363
	0xC6, 0x86, 0x12, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x112],0x00 ; line 2364
	0xC6, 0x86, 0x11, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x111],0x00 ; line 2365
	0xE9, 0x0E, 0x00, 0x00, 0x00,                               // JMP LABELG ; line 2366
	0xC6, 0x86, 0x11, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x111],0x00 ; line 2368
	0xC6, 0x86, 0x10, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x110],0x00 ; line 2369
};
static PatchByteCode mimaA214EYE_CORECOLOR_patchByteCode = { mimaA214EYE_CORECOLOR_byteCode, 151, nullptr, 0 };
// mimaA214EYE_CDIFF declared in mima.asm line 2375
static unsigned char mimaA214EYE_CDIFF_byteCode[] = {
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,       // JNE 0x69FA87 ; line 2376
	0x80, 0xBE, 0x11, 0x01, 0x00, 0x00, 0x00, // CMP BYTE PTR [ESI+0x111],0x00 ; line 2377
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,       // JNE 0x69FA87 ; line 2378
};
static JumpTarget mimaA214EYE_CDIFF_jumpData[] = {
	{ 0x002, 0x69FA87 },
	{ 0x00F, 0x69FA87 },
};
static PatchByteCode mimaA214EYE_CDIFF_patchByteCode = { mimaA214EYE_CDIFF_byteCode, 19, mimaA214EYE_CDIFF_jumpData, 2 };
// mimaA214EYE_CEFFSPD declared in mima.asm line 2382
static unsigned char mimaA214EYE_CEFFSPD_byteCode[] = {
	0xD9, 0xEE,                         // FLDZ ; line 2383
	0xDC, 0x05, 0x50, 0x7F, 0x85, 0x00, // FADD QWORD PTR [0x857F50] ; line 2384
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,       // JMP 0x6A2F18 ; line 2385
};
static JumpTarget mimaA214EYE_CEFFSPD_jumpData[] = {
	{ 0x009, 0x6A2F18 },
};
static PatchByteCode mimaA214EYE_CEFFSPD_patchByteCode = { mimaA214EYE_CEFFSPD_byteCode, 13, mimaA214EYE_CEFFSPD_jumpData, 1 };
// mimaA214EYE_CONHIT declared in mima.asm line 2389
static unsigned char mimaA214EYE_CONHIT_byteCode[] = {
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,       // MOV EAX,[ESI+0x35C] ; line 2390
	0x60,                                     // PUSHAD ; line 2393
	0x6A, 0x01,                               // PUSH 0x01 ; line 2394
	0x6A, 0x00,                               // PUSH 0x00 ; line 2395
	0x6A, 0x00,                               // PUSH 0x00 ; line 2396
	0x89, 0xF1,                               // MOV ECX,ESI ; line 2397
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,             // CALL 0x48CE90 ; line 2398
	0x84, 0xC0,                               // TEST AL,AL ; line 2399
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,       // JNE 0x6A33AD ; line 2400
	0x61,                                     // POPAD ; line 2401
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00, // CMP BYTE PTR [ESI+0x194],0x00 ; line 2403
	0x0F, 0x84, 0xDE, 0xAD, 0xBE, 0xEF,       // JE 0x6A33AD ; line 2404
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,       // MOV EAX,[ESI+0x35C] ; line 2407
};
static JumpTarget mimaA214EYE_CONHIT_jumpData[] = {
	{ 0x010, 0x48CE90 },
	{ 0x018, 0x6A33AD },
	{ 0x026, 0x6A33AD },
};
static PatchByteCode mimaA214EYE_CONHIT_patchByteCode = { mimaA214EYE_CONHIT_byteCode, 48, mimaA214EYE_CONHIT_jumpData, 3 };
// mimaA214EYE_CHITCOUNT declared in mima.asm line 2411
static unsigned char mimaA214EYE_CHITCOUNT_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x03, 0x00,       // CMP WORD PTR [ESI+0x13E],0x03 ; line 2412
	0x0F, 0x85, 0x11, 0x00, 0x00, 0x00,                         // JNE LABELNEXT ; line 2413
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 2414
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 2415
	0x66, 0x39, 0x9E, 0x3E, 0x01, 0x00, 0x00,                   // CMP [ESI+0x13E],BX ; line 2417
};
static PatchByteCode mimaA214EYE_CHITCOUNT_patchByteCode = { mimaA214EYE_CHITCOUNT_byteCode, 39, nullptr, 0 };
// mima4SCSTAR_ORBEFF declared in mima.asm line 2428
static unsigned char mima4SCSTAR_ORBEFF_byteCode[] = {
	0x8B, 0x86, 0x9C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x39C] ; line 2431
	0x81, 0xB8, 0x44, 0x01, 0x00, 0x00, 0xA5, 0x01, 0x00, 0x00, // CMP DWORD PTR [EAX+0x144],0x000001A5 ; line 2432
	0x0F, 0x8C, 0xF5, 0x00, 0x00, 0x00,                         // JL LABEL1 ; line 2433
	0x0F, 0x8F, 0x11, 0x00, 0x00, 0x00,                         // JG LABEL2 ; line 2434
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 2435
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000000 ; line 2436
	0x6A, 0x00,                                                 // PUSH 0x00 ; line 2443
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2444
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CDE0 ; line 2445
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000000 ; line 2448
	0x0F, 0x84, 0xC5, 0x00, 0x00, 0x00,                         // JE LABELNOT ; line 2449
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000001 ; line 2450
	0x0F, 0x84, 0x55, 0x00, 0x00, 0x00,                         // JE LABELHIT ; line 2451
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000002 ; line 2452
	0x0F, 0x84, 0x45, 0x00, 0x00, 0x00,                         // JE LABELHIT ; line 2453
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000004 ; line 2454
	0x0F, 0x84, 0x78, 0x00, 0x00, 0x00,                         // JE LABELUNCLEAR ; line 2457
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000006 ; line 2458
	0x0F, 0x84, 0x5C, 0x00, 0x00, 0x00,                         // JE LABELGRAZE ; line 2459
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000007 ; line 2460
	0x0F, 0x84, 0x15, 0x00, 0x00, 0x00,                         // JE LABELHIT ; line 2461
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000008 ; line 2462
	0x0F, 0x84, 0x48, 0x00, 0x00, 0x00,                         // JE LABELUNCLEAR ; line 2465
	0xE9, 0x60, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 2466
	0x66, 0x81, 0x86, 0x6E, 0x03, 0x00, 0x00, 0x01, 0x00,       // ADD WORD PTR [ESI+0x36E],0x01 ; line 2471
	0x66, 0x81, 0xBE, 0x6E, 0x03, 0x00, 0x00, 0x04, 0x00,       // CMP WORD PTR [ESI+0x36E],0x0004 ; line 2472
	0x0F, 0x85, 0x1A, 0x00, 0x00, 0x00,                         // JNE LABELHIT2 ; line 2473
	0x66, 0xC7, 0x86, 0x6E, 0x03, 0x00, 0x00, 0x00, 0x00,       // MOV WORD PTR [ESI+0x36E],0x0000 ; line 2474
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000000 ; line 2475
	0x80, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // ADD BYTE PTR [ESI+0x194],0x01 ; line 2476
	0xE9, 0x29, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 2478
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 2484
	0xE9, 0x1D, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 2485
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000000 ; line 2488
	0x80, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // ADD BYTE PTR [ESI+0x194],0x01 ; line 2489
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 2492
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP LABELNOT ; line 2493
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x144] ; line 2500
};
static JumpTarget mima4SCSTAR_ORBEFF_jumpData[] = {
	{ 0x032, 0x48CDE0 },
};
static PatchByteCode mima4SCSTAR_ORBEFF_patchByteCode = { mima4SCSTAR_ORBEFF_byteCode, 273, mima4SCSTAR_ORBEFF_jumpData, 1 };
// mima4SCSTAR_DUR declared in mima.asm line 2504
static unsigned char mima4SCSTAR_DUR_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x3A, 0x02, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x023A ; line 2506
};
static PatchByteCode mima4SCSTAR_DUR_patchByteCode = { mima4SCSTAR_DUR_byteCode, 10, nullptr, 0 };
// mima4SCSTAR declared in mima.asm line 2515
static unsigned char mima4SCSTAR_byteCode[] = {
	0xD9, 0xEE,                               // FLDZ ; line 2516
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00, // MOV BYTE PTR [ESI+0x194],0x00 ; line 2517
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,             // JMP 0x6A5EEC ; line 2519
};
static JumpTarget mima4SCSTAR_jumpData[] = {
	{ 0x00A, 0x6A5EEC },
};
static PatchByteCode mima4SCSTAR_patchByteCode = { mima4SCSTAR_byteCode, 14, mima4SCSTAR_jumpData, 1 };
// mima4SCSTAR_COLOR declared in mima.asm line 2523
static unsigned char mima4SCSTAR_COLOR_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 2524
	0x0F, 0x85, 0x46, 0x01, 0x00, 0x00,                         // JNE LABELNEXT ; line 2525
	0xD9, 0x05, 0x90, 0xB9, 0x85, 0x00,                         // FLD DWORD PTR [0x85B990] ; line 2527
	0xD8, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FCOMP DWORD PTR [ESI+0x12C] ; line 2529
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2530
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2531
	0x0F, 0x85, 0x1A, 0x00, 0x00, 0x00,                         // JNE LABEL360 ; line 2532
	0xC6, 0x86, 0x10, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x110],0xFF ; line 2533
	0xC6, 0x86, 0x11, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x111],0xFF ; line 2534
	0xC6, 0x86, 0x12, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x112],0x00 ; line 2535
	0xE9, 0x15, 0x01, 0x00, 0x00,                               // JMP LABELNEXT ; line 2536
	0xD9, 0x05, 0x90, 0xB9, 0x85, 0x00,                         // FLD DWORD PTR [0x85B990] ; line 2539
	0xD8, 0x05, 0xB4, 0x96, 0x85, 0x00,                         // FADD DWORD PTR [0x8596B4] ; line 2541
	0xD8, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FCOMP DWORD PTR [ESI+0x12C] ; line 2543
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2544
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2545
	0x0F, 0x85, 0x1A, 0x00, 0x00, 0x00,                         // JNE LABEL288 ; line 2546
	0xC6, 0x86, 0x10, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x110],0xFF ; line 2547
	0xC6, 0x86, 0x11, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x111],0x00 ; line 2548
	0xC6, 0x86, 0x12, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x112],0x00 ; line 2549
	0xE9, 0xDE, 0x00, 0x00, 0x00,                               // JMP LABELNEXT ; line 2550
	0xD9, 0x05, 0x90, 0xB9, 0x85, 0x00,                         // FLD DWORD PTR [0x85B990] ; line 2553
	0xD8, 0x05, 0xB4, 0x96, 0x85, 0x00,                         // FADD DWORD PTR [0x8596B4] ; line 2555
	0xD8, 0x05, 0xB4, 0x96, 0x85, 0x00,                         // FADD DWORD PTR [0x8596B4] ; line 2557
	0xD8, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FCOMP DWORD PTR [ESI+0x12C] ; line 2559
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2560
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2561
	0x0F, 0x85, 0x1A, 0x00, 0x00, 0x00,                         // JNE LABEL216 ; line 2562
	0xC6, 0x86, 0x10, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x110],0x00 ; line 2563
	0xC6, 0x86, 0x11, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x111],0xFF ; line 2564
	0xC6, 0x86, 0x12, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x112],0x00 ; line 2565
	0xE9, 0xA1, 0x00, 0x00, 0x00,                               // JMP LABELNEXT ; line 2566
	0xD9, 0x05, 0x90, 0xB9, 0x85, 0x00,                         // FLD DWORD PTR [0x85B990] ; line 2569
	0xD8, 0x05, 0xB4, 0x96, 0x85, 0x00,                         // FADD DWORD PTR [0x8596B4] ; line 2571
	0xD8, 0x05, 0xB4, 0x96, 0x85, 0x00,                         // FADD DWORD PTR [0x8596B4] ; line 2573
	0xD8, 0x05, 0xB4, 0x96, 0x85, 0x00,                         // FADD DWORD PTR [0x8596B4] ; line 2575
	0xD8, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FCOMP DWORD PTR [ESI+0x12C] ; line 2577
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2578
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2579
	0x0F, 0x85, 0x1A, 0x00, 0x00, 0x00,                         // JNE LABEL144 ; line 2580
	0xC6, 0x86, 0x10, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x110],0x00 ; line 2581
	0xC6, 0x86, 0x11, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x111],0x00 ; line 2582
	0xC6, 0x86, 0x12, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x112],0xFF ; line 2583
	0xE9, 0x5E, 0x00, 0x00, 0x00,                               // JMP LABELNEXT ; line 2584
	0xD9, 0x05, 0x90, 0xB9, 0x85, 0x00,                         // FLD DWORD PTR [0x85B990] ; line 2587
	0xD8, 0x05, 0xB4, 0x96, 0x85, 0x00,                         // FADD DWORD PTR [0x8596B4] ; line 2589
	0xD8, 0x05, 0xB4, 0x96, 0x85, 0x00,                         // FADD DWORD PTR [0x8596B4] ; line 2591
	0xD8, 0x05, 0xB4, 0x96, 0x85, 0x00,                         // FADD DWORD PTR [0x8596B4] ; line 2593
	0xD8, 0x05, 0xB4, 0x96, 0x85, 0x00,                         // FADD DWORD PTR [0x8596B4] ; line 2595
	0xD8, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FCOMP DWORD PTR [ESI+0x12C] ; line 2597
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2598
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2599
	0x0F, 0x85, 0x1A, 0x00, 0x00, 0x00,                         // JNE LABEL72 ; line 2600
	0xC6, 0x86, 0x10, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x110],0xFF ; line 2601
	0xC6, 0x86, 0x11, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x111],0x00 ; line 2602
	0xC6, 0x86, 0x12, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x112],0xFF ; line 2603
	0xE9, 0x15, 0x00, 0x00, 0x00,                               // JMP LABELNEXT ; line 2604
	0xC6, 0x86, 0x10, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x110],0x00 ; line 2607
	0xC6, 0x86, 0x11, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x111],0xFF ; line 2608
	0xC6, 0x86, 0x12, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x112],0xFF ; line 2609
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x11C] ; line 2612
};
static PatchByteCode mima4SCSTAR_COLOR_patchByteCode = { mima4SCSTAR_COLOR_byteCode, 348, nullptr, 0 };
// mima4SCSTAR_CORESPIN declared in mima.asm line 2618
static unsigned char mima4SCSTAR_CORESPIN_byteCode[] = {
	0xD8, 0x05, 0x60, 0x78, 0x86, 0x00, // FADD DWORD PTR [0x867860] ; line 2620
};
static PatchByteCode mima4SCSTAR_CORESPIN_patchByteCode = { mima4SCSTAR_CORESPIN_byteCode, 6, nullptr, 0 };
// mima4SCSTAR_COREDIST2 declared in mima.asm line 2624
static unsigned char mima4SCSTAR_COREDIST2_byteCode[] = {
	0xDC, 0x0D, 0xE0, 0xCD, 0x85, 0x00, // FMUL QWORD PTR [0x85CDE0] ; line 2625
};
static PatchByteCode mima4SCSTAR_COREDIST2_patchByteCode = { mima4SCSTAR_COREDIST2_byteCode, 6, nullptr, 0 };
// mima4SCSTAR_COREDIST declared in mima.asm line 2629
static unsigned char mima4SCSTAR_COREDIST_byteCode[] = {
	0xD9, 0xEE, // FLDZ ; line 2630
};
static PatchByteCode mima4SCSTAR_COREDIST_patchByteCode = { mima4SCSTAR_COREDIST_byteCode, 2, nullptr, 0 };
// mima4SCSTAR_PROJSPD declared in mima.asm line 2635
static unsigned char mima4SCSTAR_PROJSPD_byteCode[] = {
	0xD9, 0xEE, // FLDZ ; line 2636
};
static PatchByteCode mima4SCSTAR_PROJSPD_patchByteCode = { mima4SCSTAR_PROJSPD_byteCode, 2, nullptr, 0 };
// mima4SCSTAR_PROJSPDLOCK declared in mima.asm line 2642
static unsigned char mima4SCSTAR_PROJSPDLOCK_byteCode[] = {
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 2643
	0x80, 0xBE, 0x13, 0x01, 0x00, 0x00, 0x7D,                   // CMP BYTE PTR [ESI+0x113],0x7D ; line 2646
	0x0F, 0x84, 0x24, 0x00, 0x00, 0x00,                         // JE LABEL1 ; line 2647
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 2649
	0xD9, 0x81, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xEC] ; line 2650
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 2651
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 2652
	0xDC, 0x05, 0xE8, 0xCB, 0x85, 0x00,                         // FADD QWORD PTR [0x85CBE8] ; line 2653
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 2654
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 2657
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0xA4, 0x01, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x000001A4 ; line 2658
	0x0F, 0x84, 0x4D, 0x00, 0x00, 0x00,                         // JE LABELFIRE ; line 2659
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x9A, 0x01,       // CMP WORD PTR [ECX+0x13C],0x019A ; line 2661
	0x0F, 0x8C, 0x5E, 0x00, 0x00, 0x00,                         // JL LABEL2 ; line 2662
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xA1, 0x01,       // CMP WORD PTR [ECX+0x13C],0x01A1 ; line 2663
	0x0F, 0x8F, 0x4F, 0x00, 0x00, 0x00,                         // JG LABEL2 ; line 2664
	0x66, 0x81, 0xB9, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ECX+0x13E],0x0000 ; line 2665
	0x0F, 0x85, 0x40, 0x00, 0x00, 0x00,                         // JNE LABEL2 ; line 2666
	0x81, 0xB9, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x144],0x0000 ; line 2667
	0x0F, 0x85, 0x30, 0x00, 0x00, 0x00,                         // JNE LABEL2 ; line 2668
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0xA4, 0x01, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x000001A4 ; line 2669
	0x0F, 0x8F, 0x20, 0x00, 0x00, 0x00,                         // JG LABEL2 ; line 2670
	0xC6, 0x86, 0x13, 0x01, 0x00, 0x00, 0x7D,                   // MOV BYTE PTR [ESI+0x113],0x7D ; line 2673
	0xC7, 0x86, 0x44, 0x01, 0x00, 0x00, 0xA4, 0x01, 0x00, 0x00, // MOV DWORD PTR [ESI+0x144],0x000001A4 ; line 2674
	0x8B, 0x8E, 0x5C, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x35C] ; line 2676
	0xD9, 0x05, 0xB8, 0xBD, 0x85, 0x00,                         // FLD DWORD PTR [0x85BDB8] ; line 2677
	0xD9, 0x59, 0x04,                                           // FSTP DWORD PTR [ECX+0x04] ; line 2678
	0xDB, 0x44, 0x24, 0x18,                                     // FILD DWORD PTR [ESP+0x18] ; line 2685
	0x0F, 0xBE, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVSX ECX,BYTE PTR [ESI+0x104] ; line 2686
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6A3279 ; line 2687
};
static JumpTarget mima4SCSTAR_PROJSPDLOCK_jumpData[] = {
	{ 0x0C2, 0x6A3279 },
};
static PatchByteCode mima4SCSTAR_PROJSPDLOCK_patchByteCode = { mima4SCSTAR_PROJSPDLOCK_byteCode, 198, mima4SCSTAR_PROJSPDLOCK_jumpData, 1 };
// mima4SCSTAR_HIJACKSUBSEQ1 declared in mima.asm line 2691
static unsigned char mima4SCSTAR_HIJACKSUBSEQ1_byteCode[] = {
	0x0F, 0x87, 0xDE, 0xAD, 0xBE, 0xEF,                         // JA 0x69FA87 ; line 2692
	0x81, 0xF8, 0x01, 0x00, 0x00, 0x00,                         // CMP EAX,0x01 ; line 2693
	0x0F, 0x85, 0x51, 0x03, 0x00, 0x00,                         // JNE LABELZ ; line 2694
	0x81, 0xBE, 0x9C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x39C],0x00000000 ; line 2699
	0x0F, 0x84, 0xDE, 0xAD, 0xBE, 0xEF,                         // JE 0x69EBDB ; line 2700
	0x8B, 0x86, 0x9C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x39C] ; line 2701
	0x80, 0xB8, 0x11, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [EAX+0x111],0x00 ; line 2702
	0x0F, 0x84, 0xDE, 0x01, 0x00, 0x00,                         // JE LABELCOLOR1 ; line 2703
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 2705
	0x0F, 0x85, 0x11, 0x00, 0x00, 0x00,                         // JNE LABEL2Y ; line 2706
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 2707
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x04,                   // MOV BYTE PTR [ESI+0x194],0x04 ; line 2708
	0x6A, 0x0A,                                                 // PUSH 0x0A ; line 2715
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2716
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CDE0 ; line 2717
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 2720
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2721
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE30 ; line 2722
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000000 ; line 2726
	0x0F, 0x84, 0xBA, 0x00, 0x00, 0x00,                         // JE LABELLNOT ; line 2727
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000001 ; line 2728
	0x0F, 0x84, 0x55, 0x00, 0x00, 0x00,                         // JE LABELLHIT ; line 2729
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000002 ; line 2730
	0x0F, 0x84, 0x45, 0x00, 0x00, 0x00,                         // JE LABELLHIT ; line 2731
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000004 ; line 2732
	0x0F, 0x84, 0x7E, 0x00, 0x00, 0x00,                         // JE LABELLEND ; line 2733
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000006 ; line 2734
	0x0F, 0x84, 0x62, 0x00, 0x00, 0x00,                         // JE LABELLGRAZE ; line 2735
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000007 ; line 2736
	0x0F, 0x84, 0x15, 0x00, 0x00, 0x00,                         // JE LABELLHIT ; line 2737
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000008 ; line 2738
	0x0F, 0x84, 0x4E, 0x00, 0x00, 0x00,                         // JE LABELLEND ; line 2739
	0xE9, 0x55, 0x00, 0x00, 0x00,                               // JMP LABELLNOT ; line 2740
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 2743
	0x0F, 0x8E, 0x48, 0x00, 0x00, 0x00,                         // JLE LABELLNOT ; line 2744
	0x66, 0x81, 0x86, 0x6E, 0x03, 0x00, 0x00, 0x01, 0x00,       // ADD WORD PTR [ESI+0x36E],0x01 ; line 2745
	0x66, 0x81, 0xBE, 0x6E, 0x03, 0x00, 0x00, 0x04, 0x00,       // CMP WORD PTR [ESI+0x36E],0x0004 ; line 2746
	0x0F, 0x85, 0x13, 0x00, 0x00, 0x00,                         // JNE LABELLHIT2 ; line 2747
	0x66, 0xC7, 0x86, 0x6E, 0x03, 0x00, 0x00, 0x00, 0x00,       // MOV WORD PTR [ESI+0x36E],0x0000 ; line 2748
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000000 ; line 2749
	0xE9, 0x18, 0x00, 0x00, 0x00,                               // JMP LABELLNOT ; line 2752
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 2758
	0xE9, 0x0C, 0x00, 0x00, 0x00,                               // JMP LABELLNOT ; line 2759
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 2762
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP LABELLNOT ; line 2763
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 2770
	0x0F, 0x85, 0x2C, 0x00, 0x00, 0x00,                         // JNE LNODYING ; line 2771
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x38 ; line 2772
	0x0F, 0x8D, 0x1C, 0x00, 0x00, 0x00,                         // JGE LNODYING ; line 2773
	0x66, 0xC7, 0x86, 0x40, 0x01, 0x00, 0x00, 0x39, 0x00,       // MOV WORD PTR [ESI+0x140],0x39 ; line 2774
	0x66, 0xC7, 0x86, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00,       // MOV WORD PTR [ESI+0x142],0x00 ; line 2775
	0xC7, 0x86, 0x44, 0x01, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x144],0x39 ; line 2776
	0x8B, 0x86, 0x9C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x39C] ; line 2784
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xEC] ; line 2785
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 2786
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xF0] ; line 2787
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 2788
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x14 ; line 2790
	0x0F, 0x85, 0x0D, 0x00, 0x00, 0x00,                         // JNE LABELNOSOUND1 ; line 2791
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 2792
	0x6A, 0x13,                                                 // PUSH 0x13 ; line 2793
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x464980 ; line 2794
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x14 ; line 2798
	0x81, 0xEC, 0x0C, 0x00, 0x00, 0x00,                         // SUB ESP,0x0C ; line 2800
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2801
	0xD9, 0x05, 0x44, 0x15, 0x87, 0x00,                         // FLD DWORD PTR [0x871544] ; line 2804
	0xD9, 0x5C, 0x24, 0x08,                                     // FSTP DWORD PTR [ESP+0x08] ; line 2805
	0xD9, 0x05, 0x98, 0x7D, 0x85, 0x00,                         // FLD DWORD PTR [0x857D98] ; line 2807
	0xD9, 0x5C, 0x24, 0x04,                                     // FSTP DWORD PTR [ESP+0x04] ; line 2809
	0xD9, 0xEE,                                                 // FLDZ ; line 2810
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2811
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CCA0 ; line 2812
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x35C] ; line 2813
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 2814
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                         // SUB ESP,0x08 ; line 2815
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 2816
	0x8D, 0x4E, 0x04,                                           // LEA ECX,[ESI+0x04] ; line 2818
	0xD9, 0x40, 0x04,                                           // FLD DWORD PTR [EAX+0x04] ; line 2819
	0xD9, 0x5C, 0x24, 0x04,                                     // FSTP DWORD PTR [ESP+0x04] ; line 2822
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 2823
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2824
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x438C00 ; line 2825
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x0000003C ; line 2828
	0x0F, 0x8C, 0xDE, 0xAD, 0xBE, 0xEF,                         // JL 0x69FA87 ; line 2829
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6A2FA0 ; line 2830
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 2837
	0x0F, 0x85, 0xDC, 0x00, 0x00, 0x00,                         // JNE LABEL2X ; line 2838
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 2839
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 2840
	0x66, 0xC7, 0x86, 0x40, 0x01, 0x00, 0x00, 0x3E, 0x00,       // MOV WORD PTR [ESI+0x140],0x003E ; line 2843
	0x66, 0xC7, 0x86, 0x42, 0x01, 0x00, 0x00, 0x40, 0x06,       // MOV WORD PTR [ESI+0x142],0x0640 ; line 2844
	0xC7, 0x86, 0x44, 0x01, 0x00, 0x00, 0x40, 0x06, 0x00, 0x00, // MOV DWORD PTR [ESI+0x144],0x00000640 ; line 2845
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 2847
	0x8A, 0x89, 0x04, 0x01, 0x00, 0x00,                         // MOV CL,[ECX+0x104] ; line 2848
	0x88, 0x8E, 0x04, 0x01, 0x00, 0x00,                         // MOV [ESI+0x104],CL ; line 2849
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x35C] ; line 2852
	0xD9, 0x05, 0xB8, 0xBD, 0x85, 0x00,                         // FLD DWORD PTR [0x85BDB8] ; line 2854
	0xD9, 0x58, 0x04,                                           // FSTP DWORD PTR [EAX+0x04] ; line 2855
	0x81, 0xEC, 0x0C, 0x00, 0x00, 0x00,                         // SUB ESP,0x0C ; line 2863
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2864
	0xD9, 0x05, 0x44, 0x15, 0x87, 0x00,                         // FLD DWORD PTR [0x871544] ; line 2866
	0xD9, 0x5C, 0x24, 0x08,                                     // FSTP DWORD PTR [ESP+0x08] ; line 2867
	0xD9, 0x05, 0x98, 0x7D, 0x85, 0x00,                         // FLD DWORD PTR [0x857D98] ; line 2869
	0xD9, 0x5C, 0x24, 0x04,                                     // FSTP DWORD PTR [ESP+0x04] ; line 2871
	0xD9, 0xEE,                                                 // FLDZ ; line 2872
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2873
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CCA0 ; line 2874
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x35C] ; line 2875
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 2876
	0xD8, 0x25, 0xE4, 0xBB, 0x85, 0x00,                         // FSUB DWORD PTR [0x85BBE4] ; line 2877
	0xD9, 0x18,                                                 // FSTP DWORD PTR [EAX] ; line 2878
	0x6A, 0x3C,                                                 // PUSH 0x0000003C ; line 2882
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4099F0 ; line 2883
	0x81, 0xC4, 0x04, 0x00, 0x00, 0x00,                         // ADD ESP,0x04 ; line 2884
	0x85, 0xC0,                                                 // TEST EAX,EAX ; line 2886
	0x89, 0x44, 0x24, 0x18,                                     // MOV [ESP+0x18],EAX ; line 2887
	0xDB, 0x44, 0x24, 0x18,                                     // FILD DWORD PTR [ESP+0x18] ; line 2888
	0x0F, 0x8D, 0x06, 0x00, 0x00, 0x00,                         // JNL LABELANGX ; line 2889
	0xD8, 0x05, 0x54, 0x15, 0x87, 0x00,                         // FADD DWORD PTR [0x871554] ; line 2890
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x35C] ; line 2892
	0xD8, 0x00,                                                 // FADD DWORD PTR [EAX] ; line 2893
	0xD9, 0x18,                                                 // FSTP DWORD PTR [EAX] ; line 2894
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x35C] ; line 2898
	0xD9, 0x40, 0x04,                                           // FLD DWORD PTR [EAX+0x04] ; line 2899
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                         // SUB ESP,0x08 ; line 2900
	0x8D, 0x4E, 0x04,                                           // LEA ECX,[ESI+0x04] ; line 2901
	0xD9, 0x5C, 0x24, 0x18,                                     // FSTP DWORD PTR [ESP+0x18] ; line 2902
	0xD9, 0x44, 0x24, 0x18,                                     // FLD DWORD PTR [ESP+0x18] ; line 2903
	0xD9, 0x50, 0x04,                                           // FST DWORD PTR [EAX+0x04] ; line 2904
	0xD9, 0x5C, 0x24, 0x04,                                     // FSTP DWORD PTR [ESP+0x04] ; line 2905
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 2906
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2907
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x438C00 ; line 2908
	0x0F, 0xBE, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVSX ECX,BYTE PTR [ESI+0x104] ; line 2911
	0x89, 0x4C, 0x24, 0x10,                                     // MOV [ESP+0x10],ECX ; line 2912
	0xDB, 0x44, 0x24, 0x10,                                     // FILD DWORD PTR [ESP+0x10] ; line 2913
	0xD8, 0x8E, 0xF4, 0x00, 0x00, 0x00,                         // FMUL DWORD PTR [ESI+0xF4] ; line 2914
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0xEC] ; line 2915
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 2916
	0xD9, 0x86, 0xF8, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF8] ; line 2917
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0xF0] ; line 2918
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 2919
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 2921
	0x0F, 0x85, 0x0F, 0x00, 0x00, 0x00,                         // JNE LABELBNODIE ; line 2922
	0xC7, 0x86, 0x44, 0x01, 0x00, 0x00, 0xF4, 0x06, 0x00, 0x00, // MOV DWORD PTR [ESI+0x144],0x000006F4 ; line 2923
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x69FA96 ; line 2924
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0xF4, 0x06, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x000006F4 ; line 2927
	0x0F, 0x8C, 0xDE, 0xAD, 0xBE, 0xEF,                         // JL 0x69FA87 ; line 2928
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6A2FA0 ; line 2929
	0x81, 0xF8, 0x04, 0x00, 0x00, 0x00,                         // CMP EAX,0x04 ; line 2936
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6A5BA0 ; line 2937
};
static JumpTarget mima4SCSTAR_HIJACKSUBSEQ1_jumpData[] = {
	{ 0x002, 0x69FA87 },
	{ 0x01E, 0x69EBDB },
	{ 0x05B, 0x48CDE0 },
	{ 0x064, 0x48CE30 },
	{ 0x1A2, 0x464980 },
	{ 0x1D2, 0x48CCA0 },
	{ 0x1FA, 0x438C00 },
	{ 0x20A, 0x69FA87 },
	{ 0x20F, 0x6A2FA0 },
	{ 0x293, 0x48CCA0 },
	{ 0x2AA, 0x4099F0 },
	{ 0x2FB, 0x438C00 },
	{ 0x34A, 0x69FA96 },
	{ 0x35A, 0x69FA87 },
	{ 0x35F, 0x6A2FA0 },
	{ 0x36A, 0x6A5BA0 },
};
static PatchByteCode mima4SCSTAR_HIJACKSUBSEQ1_patchByteCode = { mima4SCSTAR_HIJACKSUBSEQ1_byteCode, 878, mima4SCSTAR_HIJACKSUBSEQ1_jumpData, 16 };
// mima4SCSTAR_SECONDARYBULLET declared in mima.asm line 2941
static unsigned char mima4SCSTAR_SECONDARYBULLET_byteCode[] = {
	0x80, 0xBE, 0x11, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x111],0x00 ; line 2944
	0x0F, 0x84, 0x82, 0x00, 0x00, 0x00,                         // JE LABELCOLOR1 ; line 2945
	0x8B, 0x9E, 0x98, 0x03, 0x00, 0x00,                         // MOV EBX,[ESI+0x398] ; line 2948
	0x66, 0x81, 0xBB, 0x3C, 0x01, 0x00, 0x00, 0x90, 0x01,       // CMP WORD PTR [EBX+0x13C],0x0190 ; line 2950
	0x0F, 0x8C, 0x55, 0x00, 0x00, 0x00,                         // JL LABEL2 ; line 2951
	0x66, 0x81, 0xBB, 0x3C, 0x01, 0x00, 0x00, 0x96, 0x01,       // CMP WORD PTR [EBX+0x13C],0x0196 ; line 2952
	0x0F, 0x8F, 0x46, 0x00, 0x00, 0x00,                         // JG LABEL2 ; line 2953
	0x66, 0x81, 0xBB, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [EBX+0x13E],0x0000 ; line 2954
	0x0F, 0x85, 0x37, 0x00, 0x00, 0x00,                         // JNE LABEL2 ; line 2955
	0x81, 0xBB, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EBX+0x144],0x0000 ; line 2956
	0x0F, 0x85, 0x27, 0x00, 0x00, 0x00,                         // JNE LABEL2 ; line 2957
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 2960
	0x6A, 0x11,                                                 // PUSH 0x11 ; line 2961
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x464980 ; line 2962
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x144] ; line 2964
	0x99,                                                       // CDQ ; line 2965
	0xB9, 0x06, 0x00, 0x00, 0x00,                               // MOV ECX,0x00000006 ; line 2966
	0xF7, 0xF9,                                                 // IDIV ECX ; line 2967
	0x8D, 0x59, 0xFB,                                           // LEA EBX,[ECX-0x05] ; line 2968
	0x85, 0xD2,                                                 // TEST EDX,EDX ; line 2969
	0xD9, 0xEE,                                                 // FLDZ ; line 2970
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6A5BF9 ; line 2971
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x144] ; line 2974
	0x99,                                                       // CDQ ; line 2975
	0xB9, 0x06, 0x00, 0x00, 0x00,                               // MOV ECX,0x00000006 ; line 2976
	0xF7, 0xF9,                                                 // IDIV ECX ; line 2977
	0x8D, 0x59, 0xFB,                                           // LEA EBX,[ECX-0x05] ; line 2978
	0x85, 0xD2,                                                 // TEST EDX,EDX ; line 2979
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6A5C47 ; line 2980
	0x8B, 0x9E, 0x98, 0x03, 0x00, 0x00,                         // MOV EBX,[ESI+0x398] ; line 2985
	0x66, 0x81, 0xBB, 0x3C, 0x01, 0x00, 0x00, 0x90, 0x01,       // CMP WORD PTR [EBX+0x13C],0x0190 ; line 2987
	0x0F, 0x8C, 0x3C, 0x00, 0x00, 0x00,                         // JL LABEL2X ; line 2988
	0x66, 0x81, 0xBB, 0x3C, 0x01, 0x00, 0x00, 0x96, 0x01,       // CMP WORD PTR [EBX+0x13C],0x0196 ; line 2989
	0x0F, 0x8F, 0x2D, 0x00, 0x00, 0x00,                         // JG LABEL2X ; line 2990
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 2992
	0x6A, 0x02,                                                 // PUSH 0x02 ; line 2993
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x464980 ; line 2994
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x144] ; line 2996
	0x99,                                                       // CDQ ; line 2997
	0xB9, 0x06, 0x00, 0x00, 0x00,                               // MOV ECX,0x00000006 ; line 2998
	0xF7, 0xF9,                                                 // IDIV ECX ; line 2999
	0x8D, 0x59, 0xFB,                                           // LEA EBX,[ECX-0x05] ; line 3000
	0x85, 0xD2,                                                 // TEST EDX,EDX ; line 3001
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,                         // JNE 0x6A5C47 ; line 3002
	0xD9, 0xEE,                                                 // FLDZ ; line 3003
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6A5BF9 ; line 3004
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x144] ; line 3007
	0x99,                                                       // CDQ ; line 3008
	0xB9, 0x06, 0x00, 0x00, 0x00,                               // MOV ECX,0x00000006 ; line 3009
	0xF7, 0xF9,                                                 // IDIV ECX ; line 3010
	0x8D, 0x59, 0xFB,                                           // LEA EBX,[ECX-0x05] ; line 3011
	0x85, 0xD2,                                                 // TEST EDX,EDX ; line 3012
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6A5C47 ; line 3013
};
static JumpTarget mima4SCSTAR_SECONDARYBULLET_jumpData[] = {
	{ 0x059, 0x464980 },
	{ 0x073, 0x6A5BF9 },
	{ 0x08B, 0x6A5C47 },
	{ 0x0BC, 0x464980 },
	{ 0x0D5, 0x6A5C47 },
	{ 0x0DC, 0x6A5BF9 },
	{ 0x0F4, 0x6A5C47 },
};
static PatchByteCode mima4SCSTAR_SECONDARYBULLET_patchByteCode = { mima4SCSTAR_SECONDARYBULLET_byteCode, 248, mima4SCSTAR_SECONDARYBULLET_jumpData, 7 };
// mimaA22STOCK_NOEFF declared in mima.asm line 3018
static unsigned char mimaA22STOCK_NOEFF_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x69EBDB ; line 3019
};
static JumpTarget mimaA22STOCK_NOEFF_jumpData[] = {
	{ 0x001, 0x69EBDB },
};
static PatchByteCode mimaA22STOCK_NOEFF_patchByteCode = { mimaA22STOCK_NOEFF_byteCode, 5, mimaA22STOCK_NOEFF_jumpData, 1 };
// mimaA22STOCK declared in mima.asm line 3023
static unsigned char mimaA22STOCK_byteCode[] = {
	0x80, 0xBE, 0x13, 0x01, 0x00, 0x00, 0xFF,                   // CMP BYTE PTR [ESI+0x113],0xFF ; line 3026
	0x0F, 0x84, 0x3A, 0x00, 0x00, 0x00,                         // JE NOKILL ; line 3027
	0x8A, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV AL,BYTE PTR [ESI+0x113] ; line 3028
	0x80, 0xF8, 0x08,                                           // CMP AL,0x08 ; line 3029
	0x0F, 0x82, 0x26, 0x00, 0x00, 0x00,                         // JB LABELKILL ; line 3030
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x11C] ; line 3031
	0xDC, 0x0D, 0x08, 0xC0, 0x85, 0x00,                         // FMUL QWORD PTR [0x85C008] ; line 3032
	0xD9, 0x96, 0x1C, 0x01, 0x00, 0x00,                         // FST DWORD PTR [ESI+0x11C] ; line 3033
	0xD9, 0x9E, 0x20, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x120] ; line 3034
	0x80, 0xE8, 0x08,                                           // SUB AL,0x08 ; line 3035
	0x88, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],AL ; line 3036
	0xE9, 0x05, 0x00, 0x00, 0x00,                               // JMP NOKILL ; line 3037
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x69EBDB ; line 3039
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 3043
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xEC] ; line 3044
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 3045
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xF0] ; line 3046
	0xDC, 0x05, 0x18, 0xC1, 0x85, 0x00,                         // FADD QWORD PTR [0x85C118] ; line 3047
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 3048
	0xD9, 0xEE,                                                 // FLDZ ; line 3051
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 3052
	0x80, 0xBE, 0x13, 0x01, 0x00, 0x00, 0xFF,                   // CMP BYTE PTR [ESI+0x113],0xFF ; line 3054
	0x0F, 0x85, 0xF2, 0x01, 0x00, 0x00,                         // JNE LABELFALSE ; line 3055
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0xF5, 0x01,       // CMP WORD PTR [EAX+0x13C],0x01F5 ; line 3076
	0x0F, 0x84, 0xE7, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3077
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0209 ; line 3078
	0x0F, 0x84, 0xD8, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3079
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x31, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0231 ; line 3080
	0x0F, 0x84, 0xC9, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3081
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x33, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0233 ; line 3082
	0x0F, 0x84, 0xBA, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3083
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x1D, 0x02,       // CMP WORD PTR [EAX+0x13C],0x021D ; line 3084
	0x0F, 0x84, 0xAB, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3085
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0xFA, 0x01,       // CMP WORD PTR [EAX+0x13C],0x01FA ; line 3086
	0x0F, 0x84, 0x9C, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3087
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0xFF, 0x01,       // CMP WORD PTR [EAX+0x13C],0x01FF ; line 3088
	0x0F, 0x84, 0x8D, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3089
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x01, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0201 ; line 3090
	0x0F, 0x84, 0x7E, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3091
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x0E, 0x02,       // CMP WORD PTR [EAX+0x13C],0x020E ; line 3092
	0x0F, 0x84, 0x6F, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3093
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x10, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0210 ; line 3094
	0x0F, 0x84, 0x60, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3095
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x13, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0213 ; line 3096
	0x0F, 0x84, 0x51, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3097
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x36, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0236 ; line 3098
	0x0F, 0x84, 0x42, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3099
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x38, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0238 ; line 3100
	0x0F, 0x84, 0x33, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3101
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x3B, 0x02,       // CMP WORD PTR [EAX+0x13C],0x023B ; line 3102
	0x0F, 0x84, 0x24, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3103
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x3D, 0x02,       // CMP WORD PTR [EAX+0x13C],0x023D ; line 3104
	0x0F, 0x84, 0x15, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3105
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x27, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0227 ; line 3106
	0x0F, 0x84, 0x06, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3107
	0x0F, 0x85, 0xFC, 0x00, 0x00, 0x00,                         // JNE LABELFALSE ; line 3108
	0x66, 0x81, 0xB8, 0x9E, 0x04, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [EAX+0x49E],0x0000 ; line 3110
	0x0F, 0x85, 0xED, 0x00, 0x00, 0x00,                         // JNE LABELFALSE ; line 3111
	0x80, 0xBE, 0x12, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x112],0x00 ; line 3113
	0x0F, 0x85, 0x66, 0x00, 0x00, 0x00,                         // JNE LABELTRUEC ; line 3114
	0x66, 0xC7, 0x80, 0x9E, 0x04, 0x00, 0x00, 0x64, 0x00,       // MOV WORD PTR [EAX+0x49E],0x0064 ; line 3116
	0x80, 0xB8, 0xAA, 0x06, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [EAX+0x6AA],0x01 ; line 3117
	0x0F, 0x8C, 0xB1, 0x00, 0x00, 0x00,                         // JL LABELLV ; line 3118
	0x66, 0xC7, 0x80, 0x9E, 0x04, 0x00, 0x00, 0xC8, 0x00,       // MOV WORD PTR [EAX+0x49E],0x00C8 ; line 3119
	0x80, 0xB8, 0xAA, 0x06, 0x00, 0x00, 0x02,                   // CMP BYTE PTR [EAX+0x6AA],0x02 ; line 3120
	0x0F, 0x8C, 0x9B, 0x00, 0x00, 0x00,                         // JL LABELLV ; line 3121
	0x66, 0xC7, 0x80, 0x9E, 0x04, 0x00, 0x00, 0x2C, 0x01,       // MOV WORD PTR [EAX+0x49E],0x012C ; line 3122
	0x80, 0xB8, 0xAA, 0x06, 0x00, 0x00, 0x03,                   // CMP BYTE PTR [EAX+0x6AA],0x03 ; line 3123
	0x0F, 0x8C, 0x85, 0x00, 0x00, 0x00,                         // JL LABELLV ; line 3124
	0x66, 0xC7, 0x80, 0x9E, 0x04, 0x00, 0x00, 0x90, 0x01,       // MOV WORD PTR [EAX+0x49E],0x0190 ; line 3125
	0x80, 0xB8, 0xAA, 0x06, 0x00, 0x00, 0x04,                   // CMP BYTE PTR [EAX+0x6AA],0x04 ; line 3126
	0x0F, 0x8C, 0x6F, 0x00, 0x00, 0x00,                         // JL LABELLV ; line 3127
	0x66, 0xC7, 0x80, 0x9E, 0x04, 0x00, 0x00, 0xF4, 0x01,       // MOV WORD PTR [EAX+0x49E],0x01F4 ; line 3128
	0xE9, 0x61, 0x00, 0x00, 0x00,                               // JMP LABELLV ; line 3129
	0x66, 0xC7, 0x80, 0x9E, 0x04, 0x00, 0x00, 0xC8, 0x00,       // MOV WORD PTR [EAX+0x49E],0x00C8 ; line 3131
	0x80, 0xB8, 0xAA, 0x06, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [EAX+0x6AA],0x01 ; line 3132
	0x0F, 0x8C, 0x4B, 0x00, 0x00, 0x00,                         // JL LABELLV ; line 3133
	0x66, 0xC7, 0x80, 0x9E, 0x04, 0x00, 0x00, 0x90, 0x01,       // MOV WORD PTR [EAX+0x49E],0x0190 ; line 3134
	0x80, 0xB8, 0xAA, 0x06, 0x00, 0x00, 0x02,                   // CMP BYTE PTR [EAX+0x6AA],0x02 ; line 3135
	0x0F, 0x8C, 0x35, 0x00, 0x00, 0x00,                         // JL LABELLV ; line 3136
	0x66, 0xC7, 0x80, 0x9E, 0x04, 0x00, 0x00, 0x58, 0x02,       // MOV WORD PTR [EAX+0x49E],0x0258 ; line 3137
	0x80, 0xB8, 0xAA, 0x06, 0x00, 0x00, 0x03,                   // CMP BYTE PTR [EAX+0x6AA],0x03 ; line 3138
	0x0F, 0x8C, 0x1F, 0x00, 0x00, 0x00,                         // JL LABELLV ; line 3139
	0x66, 0xC7, 0x80, 0x9E, 0x04, 0x00, 0x00, 0x20, 0x03,       // MOV WORD PTR [EAX+0x49E],0x0320 ; line 3140
	0x80, 0xB8, 0xAA, 0x06, 0x00, 0x00, 0x04,                   // CMP BYTE PTR [EAX+0x6AA],0x04 ; line 3141
	0x0F, 0x8C, 0x09, 0x00, 0x00, 0x00,                         // JL LABELLV ; line 3142
	0x66, 0xC7, 0x80, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // MOV WORD PTR [EAX+0x49E],0x03E8 ; line 3143
	0xC6, 0x86, 0x13, 0x01, 0x00, 0x00, 0xF7,                   // MOV BYTE PTR [ESI+0x113],0xF7 ; line 3145
	0xD9, 0x05, 0xE4, 0xAB, 0x85, 0x00,                         // FLD DWORD PTR [0x85ABE4] ; line 3146
	0xD9, 0x96, 0x1C, 0x01, 0x00, 0x00,                         // FST DWORD PTR [ESI+0x11C] ; line 3147
	0xD9, 0x9E, 0x20, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x120] ; line 3148
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x32, 0x00,       // CMP WORD PTR [EAX+0x13C],0x0032 ; line 3153
	0x0F, 0x8C, 0x14, 0x00, 0x00, 0x00,                         // JL LABELNOHIT ; line 3154
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x96, 0x00,       // CMP WORD PTR [EAX+0x13C],0x0096 ; line 3155
	0x0F, 0x8D, 0x05, 0x00, 0x00, 0x00,                         // JGE LABELNOHIT ; line 3156
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x69EBDB ; line 3157
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x21, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0221 ; line 3161
	0x0F, 0x84, 0x23, 0x00, 0x00, 0x00,                         // JE LABELNEXT ; line 3162
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x22, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0222 ; line 3163
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                         // JE LABELNEXT ; line 3164
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x60, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0260 ; line 3165
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE LABELNEXT ; line 3166
	0xE9, 0x59, 0x00, 0x00, 0x00,                               // JMP LABEL2 ; line 3167
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 3169
	0x0F, 0x85, 0x16, 0x00, 0x00, 0x00,                         // JNE LABELNOTFIRSTFRAME ; line 3170
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x21, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0221 ; line 3171
	0x0F, 0x85, 0x07, 0x00, 0x00, 0x00,                         // JNE LABELNOTFIRSTFRAME ; line 3172
	0xC6, 0x86, 0x12, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x112],0x00 ; line 3174
	0x66, 0x81, 0xB8, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [EAX+0x140],0x0000 ; line 3176
	0x0F, 0x85, 0x24, 0x00, 0x00, 0x00,                         // JNE LABEL2 ; line 3177
	0x66, 0x81, 0xB8, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [EAX+0x142],0x0000 ; line 3178
	0x0F, 0x85, 0x15, 0x00, 0x00, 0x00,                         // JNE LABEL2 ; line 3179
	0x81, 0xB8, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x144],0x0000 ; line 3180
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                         // JNE LABEL2 ; line 3181
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x69EBDB ; line 3182
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6A16C9 ; line 3184
};
static JumpTarget mimaA22STOCK_jumpData[] = {
	{ 0x043, 0x69EBDB },
	{ 0x291, 0x69EBDB },
	{ 0x31C, 0x69EBDB },
	{ 0x321, 0x6A16C9 },
};
static PatchByteCode mimaA22STOCK_patchByteCode = { mimaA22STOCK_byteCode, 805, mimaA22STOCK_jumpData, 4 };
// mimaA22STOCKSTART declared in mima.asm line 3188
static unsigned char mimaA22STOCKSTART_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 3189
};
static PatchByteCode mimaA22STOCKSTART_patchByteCode = { mimaA22STOCKSTART_byteCode, 10, nullptr, 0 };
// mimaSEQJUMP declared in mima.asm line 3198
static unsigned char mimaSEQJUMP_byteCode[] = {
	0x81, 0xF8, 0xD3, 0x00, 0x00, 0x00,       // CMP EAX,0x000000D3 ; line 3199
	0x0F, 0x84, 0x17, 0x00, 0x00, 0x00,       // JE LABELJA236B ; line 3200
	0x81, 0xF8, 0xD4, 0x00, 0x00, 0x00,       // CMP EAX,0x000000D4 ; line 3201
	0x0F, 0x84, 0x1D, 0x00, 0x00, 0x00,       // JE LABELJA236C ; line 3202
	0x81, 0xF8, 0xD2, 0x00, 0x00, 0x00,       // CMP EAX,0x000000D2 ; line 3203
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,             // JMP 0x68AC1F ; line 3204
	0x0F, 0xB6, 0x80, 0x4C, 0xA0, 0x69, 0x00, // MOVZX EAX,BYTE PTR [EAX+0x69A04C] ; line 3207
	0x81, 0xF8, 0xD2, 0x00, 0x00, 0x00,       // CMP EAX,0x000000D2 ; line 3208
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,             // JMP 0x68FABB ; line 3209
	0x0F, 0xB6, 0x80, 0x4C, 0xA0, 0x69, 0x00, // MOVZX EAX,BYTE PTR [EAX+0x69A04C] ; line 3211
	0x81, 0xF8, 0xD2, 0x00, 0x00, 0x00,       // CMP EAX,0x000000D2 ; line 3212
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,             // JMP 0x68FDC2 ; line 3213
};
static JumpTarget mimaSEQJUMP_jumpData[] = {
	{ 0x01F, 0x68AC1F },
	{ 0x031, 0x68FABB },
	{ 0x043, 0x68FDC2 },
};
static PatchByteCode mimaSEQJUMP_patchByteCode = { mimaSEQJUMP_byteCode, 71, mimaSEQJUMP_jumpData, 3 };
// mimaSEQJUMP0 declared in mima.asm line 3217
static unsigned char mimaSEQJUMP0_byteCode[] = {
	0x81, 0xF8, 0xEF, 0x00, 0x00, 0x00,       // CMP EAX,0x000000EF ; line 3218
	0x0F, 0x87, 0xDE, 0xAD, 0xBE, 0xEF,       // JA 0x69B91E ; line 3219
	0x81, 0xF8, 0x0B, 0x00, 0x00, 0x00,       // CMP EAX,0x0000000B ; line 3221
	0x0F, 0x84, 0x11, 0x00, 0x00, 0x00,       // JE LABELJA236B ; line 3222
	0x81, 0xF8, 0x0C, 0x00, 0x00, 0x00,       // CMP EAX,0x0000000C ; line 3223
	0x0F, 0x84, 0x17, 0x00, 0x00, 0x00,       // JE LABELJA236C ; line 3224
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,             // JMP 0x69B327 ; line 3225
	0x0F, 0xB6, 0x88, 0xF0, 0xBA, 0x69, 0x00, // MOVZX ECX,BYTE PTR [EAX+0x69BAF0] ; line 3228
	0x81, 0xF8, 0xEF, 0x00, 0x00, 0x00,       // CMP EAX,0x000000EF ; line 3229
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,             // JMP 0x69B39E ; line 3230
	0x0F, 0xB6, 0x88, 0xF0, 0xBA, 0x69, 0x00, // MOVZX ECX,BYTE PTR [EAX+0x69BAF0] ; line 3232
	0x81, 0xF8, 0xEF, 0x00, 0x00, 0x00,       // CMP EAX,0x000000EF ; line 3233
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,             // JMP 0x69B39E ; line 3234
};
static JumpTarget mimaSEQJUMP0_jumpData[] = {
	{ 0x008, 0x69B91E },
	{ 0x025, 0x69B327 },
	{ 0x037, 0x69B39E },
	{ 0x049, 0x69B39E },
};
static PatchByteCode mimaSEQJUMP0_patchByteCode = { mimaSEQJUMP0_byteCode, 77, mimaSEQJUMP0_jumpData, 4 };
// mimaCARDLEARNAIR declared in mima.asm line 3243
static unsigned char mimaCARDLEARNAIR_byteCode[] = {
	0x81, 0xF8, 0x6C, 0x00, 0x00, 0x00,       // CMP EAX,0x6C ; line 3244
	0x0F, 0x84, 0x11, 0x00, 0x00, 0x00,       // JE LABELA236BAIR ; line 3246
	0x81, 0xC0, 0x99, 0xFF, 0xFF, 0xFF,       // ADD EAX,-0x67 ; line 3247
	0x81, 0xF8, 0x08, 0x00, 0x00, 0x00,       // CMP EAX,0x08 ; line 3248
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,             // JMP 0x69D846 ; line 3249
	0x81, 0xC0, 0x99, 0xFF, 0xFF, 0xFF,       // ADD EAX,-0x67 ; line 3251
	0x81, 0xF8, 0x08, 0x00, 0x00, 0x00,       // CMP EAX,0x08 ; line 3252
	0x80, 0xBE, 0x03, 0x08, 0x00, 0x00, 0x00, // CMP BYTE PTR [ESI+0x803],0x00 ; line 3254
	0x0F, 0x85, 0x15, 0x00, 0x00, 0x00,       // JNE LABEL001 ; line 3255
	0xBB, 0x01, 0x00, 0x00, 0x00,             // MOV EBX,0x00000001 ; line 3256
	0x01, 0x9E, 0xC8, 0x04, 0x00, 0x00,       // ADD [ESI+0x4C8],EBX ; line 3257
	0x88, 0x9E, 0x03, 0x08, 0x00, 0x00,       // MOV [ESI+0x803],BL ; line 3258
	0x8B, 0x5C, 0x24, 0x10,                   // MOV EBX,[ESP+0x10] ; line 3259
	0x89, 0xF1,                               // MOV ECX,ESI ; line 3261
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,             // CALL 0x483CE0 ; line 3262
	0x89, 0xF1,                               // MOV ECX,ESI ; line 3263
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,             // CALL 0x489660 ; line 3264
	0x0F, 0xBF, 0xCB,                         // MOVSX ECX,BX ; line 3265
	0x51,                                     // PUSH ECX ; line 3266
	0x68, 0x00, 0x02, 0x00, 0x00,             // PUSH 0x00000200 ; line 3267
	0x89, 0xF1,                               // MOV ECX,ESI ; line 3268
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,             // CALL 0x487BA0 ; line 3269
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,             // JMP 0x69D88F ; line 3270
};
static JumpTarget mimaCARDLEARNAIR_jumpData[] = {
	{ 0x019, 0x69D846 },
	{ 0x04E, 0x483CE0 },
	{ 0x055, 0x489660 },
	{ 0x065, 0x487BA0 },
	{ 0x06A, 0x69D88F },
};
static PatchByteCode mimaCARDLEARNAIR_patchByteCode = { mimaCARDLEARNAIR_byteCode, 110, mimaCARDLEARNAIR_jumpData, 5 };
// mimaSKILLUSEAIR236 declared in mima.asm line 3278
static unsigned char mimaSKILLUSEAIR236_byteCode[] = {
	0xF7, 0x86, 0xC8, 0x07, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // TEST DWORD PTR [ESI+0x7C8],0x04 ; line 3279
	0x8B, 0x7C, 0x24, 0x10,                                     // MOV EDI,[ESP+0x10] ; line 3280
	0xBB, 0x01, 0x00, 0x00, 0x00,                               // MOV EBX,0x00000001 ; line 3281
	0x0F, 0x84, 0x80, 0x00, 0x00, 0x00,                         // JE LABELBVER ; line 3282
	0x38, 0x9E, 0xAC, 0x06, 0x00, 0x00,                         // CMP [ESI+0x6AC],BL ; line 3283
	0x0F, 0x8C, 0x74, 0x00, 0x00, 0x00,                         // JL LABELBVER ; line 3284
	0x68, 0x01, 0x02, 0x00, 0x00,                               // PUSH 0x00000201 ; line 3285
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3286
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x489610 ; line 3287
	0x66, 0x39, 0xC7,                                           // CMP DI,AX ; line 3288
	0x0F, 0x8E, 0x2A, 0x00, 0x00, 0x00,                         // JLE LABEL3 ; line 3289
	0x0F, 0xB7, 0x86, 0x3C, 0x01, 0x00, 0x00,                   // MOVZX EAX,WORD PTR [ESI+0x13C] ; line 3290
	0x66, 0x81, 0xF8, 0xF4, 0x01,                               // CMP AX,0x01F4 ; line 3291
	0x0F, 0x8C, 0x4D, 0x00, 0x00, 0x00,                         // JL LABELBVER ; line 3292
	0x66, 0x81, 0xF8, 0x57, 0x02,                               // CMP AX,0x0257 ; line 3293
	0x0F, 0x8F, 0x42, 0x00, 0x00, 0x00,                         // JG LABELBVER ; line 3294
	0x80, 0xBE, 0x03, 0x08, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x803],0x00 ; line 3295
	0x0F, 0x85, 0x35, 0x00, 0x00, 0x00,                         // JNE LABELBVER ; line 3296
	0x80, 0xBE, 0x03, 0x08, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x803],0x00 ; line 3299
	0x0F, 0x85, 0x0C, 0x00, 0x00, 0x00,                         // JNE LABEL5 ; line 3300
	0x01, 0x9E, 0xC8, 0x04, 0x00, 0x00,                         // ADD [ESI+0x4C8],EBX ; line 3301
	0x88, 0x9E, 0x03, 0x08, 0x00, 0x00,                         // MOV [ESI+0x803],BL ; line 3302
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3305
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x483CE0 ; line 3306
	0x0F, 0xBF, 0xCF,                                           // MOVSX ECX,DI ; line 3307
	0x51,                                                       // PUSH ECX ; line 3308
	0x68, 0x01, 0x02, 0x00, 0x00,                               // PUSH 0x00000201 ; line 3309
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3310
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x487BA0 ; line 3311
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x69DBA3 ; line 3312
	0xF7, 0x86, 0xC8, 0x07, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // TEST DWORD PTR [ESI+0x7C8],0x02 ; line 3318
	0x0F, 0x84, 0x80, 0x00, 0x00, 0x00,                         // JE LABELEND ; line 3319
	0x38, 0x9E, 0xAC, 0x06, 0x00, 0x00,                         // CMP [ESI+0x6AC],BL ; line 3320
	0x0F, 0x8C, 0x74, 0x00, 0x00, 0x00,                         // JL LABELEND ; line 3321
	0x68, 0x00, 0x02, 0x00, 0x00,                               // PUSH 0x00000200 ; line 3322
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3323
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x489610 ; line 3324
	0x66, 0x39, 0xC7,                                           // CMP DI,AX ; line 3325
	0x0F, 0x8E, 0x2A, 0x00, 0x00, 0x00,                         // JLE LABEL32 ; line 3326
	0x0F, 0xB7, 0x86, 0x3C, 0x01, 0x00, 0x00,                   // MOVZX EAX,WORD PTR [ESI+0x13C] ; line 3327
	0x66, 0x81, 0xF8, 0xF4, 0x01,                               // CMP AX,0x01F4 ; line 3328
	0x0F, 0x8C, 0x4D, 0x00, 0x00, 0x00,                         // JL LABELEND ; line 3329
	0x66, 0x81, 0xF8, 0x57, 0x02,                               // CMP AX,0x0257 ; line 3330
	0x0F, 0x8F, 0x42, 0x00, 0x00, 0x00,                         // JG LABELEND ; line 3331
	0x80, 0xBE, 0x03, 0x08, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x803],0x00 ; line 3332
	0x0F, 0x85, 0x35, 0x00, 0x00, 0x00,                         // JNE LABELEND ; line 3333
	0x80, 0xBE, 0x03, 0x08, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x803],0x00 ; line 3336
	0x0F, 0x85, 0x0C, 0x00, 0x00, 0x00,                         // JNE LABEL52 ; line 3337
	0x01, 0x9E, 0xC8, 0x04, 0x00, 0x00,                         // ADD [ESI+0x4C8],EBX ; line 3338
	0x88, 0x9E, 0x03, 0x08, 0x00, 0x00,                         // MOV [ESI+0x803],BL ; line 3339
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3342
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x483CE0 ; line 3343
	0x0F, 0xBF, 0xCF,                                           // MOVSX ECX,DI ; line 3344
	0x51,                                                       // PUSH ECX ; line 3345
	0x68, 0x00, 0x02, 0x00, 0x00,                               // PUSH 0x00000200 ; line 3346
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3347
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x487BA0 ; line 3348
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x69DBA3 ; line 3349
	0xF7, 0x86, 0xC8, 0x07, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, // TEST DWORD PTR [ESI+0x7C8],0x400 ; line 3352
};
static JumpTarget mimaSKILLUSEAIR236_jumpData[] = {
	{ 0x02D, 0x489610 },
	{ 0x080, 0x483CE0 },
	{ 0x090, 0x487BA0 },
	{ 0x095, 0x69DBA3 },
	{ 0x0BD, 0x489610 },
	{ 0x110, 0x483CE0 },
	{ 0x120, 0x487BA0 },
	{ 0x125, 0x69DBA3 },
};
static PatchByteCode mimaSKILLUSEAIR236_patchByteCode = { mimaSKILLUSEAIR236_byteCode, 307, mimaSKILLUSEAIR236_jumpData, 8 };
// mima1SC_REFLECTNONE declared in mima.asm line 3366
static unsigned char mima1SC_REFLECTNONE_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x69C7BF ; line 3367
};
static JumpTarget mima1SC_REFLECTNONE_jumpData[] = {
	{ 0x001, 0x69C7BF },
};
static PatchByteCode mima1SC_REFLECTNONE_patchByteCode = { mima1SC_REFLECTNONE_byteCode, 5, mima1SC_REFLECTNONE_jumpData, 1 };
// mima1SC_REFLECTNONE2 declared in mima.asm line 3369
static unsigned char mima1SC_REFLECTNONE2_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x69D797 ; line 3370
};
static JumpTarget mima1SC_REFLECTNONE2_jumpData[] = {
	{ 0x001, 0x69D797 },
};
static PatchByteCode mima1SC_REFLECTNONE2_patchByteCode = { mima1SC_REFLECTNONE2_byteCode, 5, mima1SC_REFLECTNONE2_jumpData, 1 };
// mima1SC_REFLECT_SPIN declared in mima.asm line 3375
static PatchByteCode mima1SC_REFLECT_SPIN_patchByteCode = { nullptr, 0, nullptr, 0 };
// mima1SC_REFLECTBUFFDUR declared in mima.asm line 3380
static unsigned char mima1SC_REFLECTBUFFDUR_byteCode[] = {
	0x66, 0xC7, 0x86, 0x9E, 0x08, 0x00, 0x00, 0x00, 0x00, // MOV WORD PTR [ESI+0x89E],0x0000 ; line 3381
};
static PatchByteCode mima1SC_REFLECTBUFFDUR_patchByteCode = { mima1SC_REFLECTBUFFDUR_byteCode, 9, nullptr, 0 };
// mima1SC_REFLECTEFF declared in mima.asm line 3385
static unsigned char mima1SC_REFLECTEFF_byteCode[] = {
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 3386
	0xD9, 0xE8,                                                 // FLD1 ; line 3387
	0xD9, 0x96, 0x1C, 0x01, 0x00, 0x00,                         // FST DWORD PTR [ESI+0x11C] ; line 3388
	0xD9, 0x9E, 0x20, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x120] ; line 3389
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x0258 ; line 3391
	0x0F, 0x8D, 0x0E, 0x01, 0x00, 0x00,                         // JGE LABELFALSE ; line 3392
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0xF5, 0x01,       // CMP WORD PTR [EAX+0x13C],0x01F5 ; line 3413
	0x0F, 0x84, 0xE7, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3414
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0209 ; line 3415
	0x0F, 0x84, 0xD8, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3416
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x31, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0231 ; line 3417
	0x0F, 0x84, 0xC9, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3418
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x33, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0233 ; line 3419
	0x0F, 0x84, 0xBA, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3420
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x1D, 0x02,       // CMP WORD PTR [EAX+0x13C],0x021D ; line 3421
	0x0F, 0x84, 0xAB, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3422
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0xFA, 0x01,       // CMP WORD PTR [EAX+0x13C],0x01FA ; line 3423
	0x0F, 0x84, 0x9C, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3424
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0xFF, 0x01,       // CMP WORD PTR [EAX+0x13C],0x01FF ; line 3425
	0x0F, 0x84, 0x8D, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3426
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x01, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0201 ; line 3427
	0x0F, 0x84, 0x7E, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3428
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x0E, 0x02,       // CMP WORD PTR [EAX+0x13C],0x020E ; line 3429
	0x0F, 0x84, 0x6F, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3430
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x10, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0210 ; line 3431
	0x0F, 0x84, 0x60, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3432
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x13, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0213 ; line 3433
	0x0F, 0x84, 0x51, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3434
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x36, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0236 ; line 3435
	0x0F, 0x84, 0x42, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3436
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x38, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0238 ; line 3437
	0x0F, 0x84, 0x33, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3438
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x3B, 0x02,       // CMP WORD PTR [EAX+0x13C],0x023B ; line 3439
	0x0F, 0x84, 0x24, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3440
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x3D, 0x02,       // CMP WORD PTR [EAX+0x13C],0x023D ; line 3441
	0x0F, 0x84, 0x15, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3442
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x27, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0227 ; line 3443
	0x0F, 0x84, 0x06, 0x00, 0x00, 0x00,                         // JE LABELTRUE ; line 3444
	0x0F, 0x85, 0x18, 0x00, 0x00, 0x00,                         // JNE LABELFALSE ; line 3445
	0x66, 0x81, 0xB8, 0x9E, 0x04, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [EAX+0x49E],0x0000 ; line 3447
	0x0F, 0x85, 0x09, 0x00, 0x00, 0x00,                         // JNE LABELFALSE ; line 3448
	0x66, 0xC7, 0x80, 0x9E, 0x04, 0x00, 0x00, 0xE8, 0x03,       // MOV WORD PTR [EAX+0x49E],0x03E8 ; line 3450
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x21, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0221 ; line 3467
	0x0F, 0x84, 0x23, 0x00, 0x00, 0x00,                         // JE LABELNEXT ; line 3468
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x22, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0222 ; line 3469
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                         // JE LABELNEXT ; line 3470
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x60, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0260 ; line 3471
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE LABELNEXT ; line 3472
	0xE9, 0x33, 0x00, 0x00, 0x00,                               // JMP LABEL2 ; line 3473
	0x66, 0x81, 0xB8, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [EAX+0x140],0x0000 ; line 3476
	0x0F, 0x85, 0x24, 0x00, 0x00, 0x00,                         // JNE LABEL2 ; line 3477
	0x66, 0x81, 0xB8, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [EAX+0x142],0x0000 ; line 3478
	0x0F, 0x85, 0x15, 0x00, 0x00, 0x00,                         // JNE LABEL2 ; line 3479
	0x81, 0xB8, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x144],0x0000 ; line 3480
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                         // JNE LABEL2 ; line 3481
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x69FA96 ; line 3482
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x6A4BD1 ; line 3484
};
static JumpTarget mima1SC_REFLECTEFF_jumpData[] = {
	{ 0x193, 0x69FA96 },
	{ 0x198, 0x6A4BD1 },
};
static PatchByteCode mima1SC_REFLECTEFF_patchByteCode = { mima1SC_REFLECTEFF_byteCode, 412, mima1SC_REFLECTEFF_jumpData, 2 };
// mima1SC_REFLECTDUR declared in mima.asm line 3492
static unsigned char mima1SC_REFLECTDUR_byteCode[] = {
	0x8A, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV AL,[ESI+0x113] ; line 3493
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x0258 ; line 3494
	0x0F, 0x8C, 0xDE, 0xAD, 0xBE, 0xEF,                         // JL 0x6A4C37 ; line 3495
};
static JumpTarget mima1SC_REFLECTDUR_jumpData[] = {
	{ 0x012, 0x6A4C37 },
};
static PatchByteCode mima1SC_REFLECTDUR_patchByteCode = { mima1SC_REFLECTDUR_byteCode, 22, mima1SC_REFLECTDUR_jumpData, 1 };
// mimaDIAL1 declared in mima.asm line 3499
static unsigned char mimaDIAL1_byteCode[] = {
	0x66, 0x9C,                                           // PUSHF ; line 3500
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x00 ; line 3501
	0x0F, 0x85, 0x1A, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 3502
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x04, 0x00, // CMP WORD PTR [ESI+0x140],0x04 ; line 3503
	0x0F, 0x85, 0x0B, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 3504
	0xD9, 0x05, 0x70, 0xB8, 0x85, 0x00,                   // FLD DWORD PTR [0x85B870] ; line 3505
	0xE9, 0x06, 0x00, 0x00, 0x00,                         // JMP SHORT LABEL2 ; line 3506
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0xF4] ; line 3508
	0x66, 0x9D,                                           // POPF ; line 3510
};
static PatchByteCode mimaDIAL1_patchByteCode = { mimaDIAL1_byteCode, 51, nullptr, 0 };
// mimaDIAL2 declared in mima.asm line 3513
static unsigned char mimaDIAL2_byteCode[] = {
	0x66, 0x9C,                                           // PUSHF ; line 3514
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x00 ; line 3515
	0x0F, 0x85, 0x1A, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 3516
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x01, 0x00, // CMP WORD PTR [ESI+0x140],0x01 ; line 3517
	0x0F, 0x85, 0x0B, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 3518
	0xD9, 0x05, 0x30, 0xBC, 0x85, 0x00,                   // FLD DWORD PTR [0x85BC30] ; line 3520
	0xE9, 0x06, 0x00, 0x00, 0x00,                         // JMP SHORT LABEL2 ; line 3521
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0xF4] ; line 3523
	0x66, 0x9D,                                           // POPF ; line 3525
};
static PatchByteCode mimaDIAL2_patchByteCode = { mimaDIAL2_byteCode, 51, nullptr, 0 };
// mima5B_0A declared in mima.asm line 3530
static unsigned char mima5B_0A_byteCode[] = {
	0xD8, 0x25, 0x2C, 0x78, 0x86, 0x00, // FSUB DWORD PTR [0x86782C] ; line 3531
};
static PatchByteCode mima5B_0A_patchByteCode = { mima5B_0A_byteCode, 6, nullptr, 0 };
// mima5B_0B declared in mima.asm line 3533
static unsigned char mima5B_0B_byteCode[] = {
	0xDC, 0x25, 0x20, 0xBC, 0x85, 0x00, // FSUB QWORD PTR [0x85BC20] ; line 3534
};
static PatchByteCode mima5B_0B_patchByteCode = { mima5B_0B_byteCode, 6, nullptr, 0 };
// mima5B_0C declared in mima.asm line 3536
static unsigned char mima5B_0C_byteCode[] = {
	0xDC, 0x2D, 0x90, 0x89, 0x85, 0x00, // FSUBR QWORD PTR [0x858990] ; line 3537
};
static PatchByteCode mima5B_0C_patchByteCode = { mima5B_0C_byteCode, 6, nullptr, 0 };
// mima5B_1A declared in mima.asm line 3539
static unsigned char mima5B_1A_byteCode[] = {
	0xD9, 0x05, 0x00, 0x9F, 0x85, 0x00, // FLD DWORD PTR [0x859F00] ; line 3541
};
static PatchByteCode mima5B_1A_patchByteCode = { mima5B_1A_byteCode, 6, nullptr, 0 };
// mima5B_1B declared in mima.asm line 3543
static unsigned char mima5B_1B_byteCode[] = {
	0xDD, 0x05, 0xF8, 0x9E, 0x85, 0x00, // FLD QWORD PTR [0x859EF8] ; line 3545
};
static PatchByteCode mima5B_1B_patchByteCode = { mima5B_1B_byteCode, 6, nullptr, 0 };
// mima5B_2A declared in mima.asm line 3547
static unsigned char mima5B_2A_byteCode[] = {
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,       // CALL 0x46EB30 ; line 3548
	0x81, 0xC7, 0x08, 0x00, 0x00, 0x00, // ADD EDI,0x08 ; line 3549
};
static JumpTarget mima5B_2A_jumpData[] = {
	{ 0x001, 0x46EB30 },
};
static PatchByteCode mima5B_2A_patchByteCode = { mima5B_2A_byteCode, 11, mima5B_2A_jumpData, 1 };
// mima5B_2B declared in mima.asm line 3551
static unsigned char mima5B_2B_byteCode[] = {
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,       // CALL 0x46EB30 ; line 3552
	0x81, 0xC7, 0x08, 0x00, 0x00, 0x00, // ADD EDI,0x08 ; line 3553
};
static JumpTarget mima5B_2B_jumpData[] = {
	{ 0x001, 0x46EB30 },
};
static PatchByteCode mima5B_2B_patchByteCode = { mima5B_2B_byteCode, 11, mima5B_2B_jumpData, 1 };
// mima5B_3A declared in mima.asm line 3555
static unsigned char mima5B_3A_byteCode[] = {
	0x81, 0xFF, 0x18, 0x00, 0x00, 0x00, // CMP EDI,0x18 ; line 3556
	0x89, 0x7C, 0x24, 0x18,             // MOV [ESP+0x18],EDI ; line 3557
};
static PatchByteCode mima5B_3A_patchByteCode = { mima5B_3A_byteCode, 10, nullptr, 0 };
// mima5B_3B declared in mima.asm line 3559
static unsigned char mima5B_3B_byteCode[] = {
	0x81, 0xFF, 0x18, 0x00, 0x00, 0x00, // CMP EDI,0x00000018 ; line 3560
};
static PatchByteCode mima5B_3B_patchByteCode = { mima5B_3B_byteCode, 6, nullptr, 0 };
// mima5C_CHARGE declared in mima.asm line 3639
static unsigned char mima5C_CHARGE_byteCode[] = {
	0xD9, 0xEE, // FLDZ ; line 3640
};
static PatchByteCode mima5C_CHARGE_patchByteCode = { mima5C_CHARGE_byteCode, 2, nullptr, 0 };
// mima5C_CLEARABLE declared in mima.asm line 3656
static unsigned char mima5C_CLEARABLE_byteCode[] = {
	0x6A, 0x03,                                                 // PUSH 0x03 ; line 3658
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3659
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE30 ; line 3660
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x04 ; line 3662
	0x0F, 0x84, 0x15, 0x00, 0x00, 0x00,                         // JE LABEL2 ; line 3663
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x08 ; line 3664
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE LABEL2 ; line 3665
	0xE9, 0x05, 0x00, 0x00, 0x00,                               // JMP LABEL1 ; line 3666
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x69EDDF ; line 3669
	0x8B, 0x86, 0x90, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x190] ; line 3673
};
static JumpTarget mima5C_CLEARABLE_jumpData[] = {
	{ 0x005, 0x48CE30 },
	{ 0x02F, 0x69EDDF },
};
static PatchByteCode mima5C_CLEARABLE_patchByteCode = { mima5C_CLEARABLE_byteCode, 57, mima5C_CLEARABLE_jumpData, 2 };
// mima5C_SPLITSPD declared in mima.asm line 3678
static unsigned char mima5C_SPLITSPD_byteCode[] = {
	0x81, 0xFF, 0x5A, 0x00, 0x00, 0x00, // CMP EDI,0x005A ; line 3679
	0x0F, 0x84, 0x11, 0x00, 0x00, 0x00, // JE LABEL2 ; line 3680
	0x81, 0xFF, 0x0E, 0x01, 0x00, 0x00, // CMP EDI,0x010E ; line 3681
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00, // JE LABEL2 ; line 3682
	0xE9, 0x09, 0x00, 0x00, 0x00,       // JMP LABEL1 ; line 3683
	0xDD, 0xD8,                         // FSTP ST0 ; line 3686
	0xD9, 0xEE,                         // FLDZ ; line 3687
	0xE9, 0x06, 0x00, 0x00, 0x00,       // JMP LABELEND ; line 3688
	0xDC, 0x05, 0x38, 0xBA, 0x85, 0x00, // FADD QWORD PTR [0x85BA38] ; line 3691
};
static PatchByteCode mima5C_SPLITSPD_patchByteCode = { mima5C_SPLITSPD_byteCode, 44, nullptr, 0 };
// mima5C_SPLITSPDEND declared in mima.asm line 3696
static unsigned char mima5C_SPLITSPDEND_byteCode[] = {
	0xD9, 0x51, 0x04, // FST DWORD PTR [ECX+0x04] ; line 3697
	0xD9, 0xEE,       // FLDZ ; line 3698
};
static PatchByteCode mima5C_SPLITSPDEND_patchByteCode = { mima5C_SPLITSPDEND_byteCode, 5, nullptr, 0 };
// mima5C_SPLIT2ND declared in mima.asm line 3702
static unsigned char mima5C_SPLIT2ND_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x01 ; line 3703
	0x0F, 0x85, 0x2C, 0x00, 0x00, 0x00,                         // JNE LABELG ; line 3704
	0xD9, 0x86, 0x2C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x12C] ; line 3705
	0xD9, 0xE8,                                                 // FLD1 ; line 3706
	0xDE, 0xD9,                                                 // FCOMPP ; line 3707
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 3708
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 3709
	0x0F, 0x85, 0x17, 0x00, 0x00, 0x00,                         // JNE LABELG ; line 3710
	0x66, 0xC7, 0x86, 0x40, 0x01, 0x00, 0x00, 0x46, 0x00,       // MOV WORD PTR [ESI+0x140],0x0046 ; line 3712
	0x66, 0xC7, 0x86, 0x42, 0x01, 0x00, 0x00, 0x60, 0x00,       // MOV WORD PTR [ESI+0x142],0x0060 ; line 3713
	0xD9, 0xEE,                                                 // FLDZ ; line 3714
	0xD9, 0x59, 0x04,                                           // FSTP DWORD PTR [ECX+0x04] ; line 3715
	0xD9, 0x41, 0x04,                                           // FLD DWORD PTR [ECX+0x04] ; line 3717
	0xDC, 0x25, 0x88, 0xA2, 0x85, 0x00,                         // FSUB QWORD PTR [0x85A288] ; line 3718
};
static PatchByteCode mima5C_SPLIT2ND_patchByteCode = { mima5C_SPLIT2ND_byteCode, 69, nullptr, 0 };
// mima6C declared in mima.asm line 3723
static unsigned char mima6C_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x68D85A ; line 3724
};
static JumpTarget mima6C_jumpData[] = {
	{ 0x001, 0x68D85A },
};
static PatchByteCode mima6C_patchByteCode = { mima6C_byteCode, 5, mima6C_jumpData, 1 };
// mimaJ6C declared in mima.asm line 3728
static unsigned char mimaJ6C_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x68E34B ; line 3729
};
static JumpTarget mimaJ6C_jumpData[] = {
	{ 0x001, 0x68E34B },
};
static PatchByteCode mimaJ6C_patchByteCode = { mimaJ6C_byteCode, 5, mimaJ6C_jumpData, 1 };
// mima3SCSPARK_DUR declared in mima.asm line 3737
static unsigned char mima3SCSPARK_DUR_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x81, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00000081 ; line 3738
};
static PatchByteCode mima3SCSPARK_DUR_patchByteCode = { mima3SCSPARK_DUR_byteCode, 10, nullptr, 0 };


// mima.asm
std::array<PatchSkeleton, 242> patchList = {
	PatchSkeleton{ mimaID_FIX_patchByteCode,                       (void *)0x687C14,  7}, // Declared line 15. Patch on CMP [ESI+0x196], BX
	PatchSkeleton{ mimaSYS_COST_patchByteCode,                     (void *)0x68F13A, 14}, // Declared line 88. Patch on PUSH 0x78
	PatchSkeleton{ mimaSYS_COST_patchByteCode,                     (void *)0x690742, 14}, // Declared line 90. Patch on PUSH 0x78
	PatchSkeleton{ mimaSYS_COST_patchByteCode,                     (void *)0x690936, 14}, // Declared line 91. Patch on PUSH 0x78
	PatchSkeleton{ mimaSYS_COST_patchByteCode,                     (void *)0x69292F, 14}, // Declared line 97. Patch on PUSH 0x78
	PatchSkeleton{ mimaSYS_COST_patchByteCode,                     (void *)0x68F4F1, 14}, // Declared line 99. Patch on PUSH 0x78
	PatchSkeleton{ mimaSYS_COST_patchByteCode,                     (void *)0x690DA1, 14}, // Declared line 113. Patch on PUSH 0x78
	PatchSkeleton{ mimaSYS_COST_patchByteCode,                     (void *)0x690F7F, 14}, // Declared line 115. Patch on PUSH 0x78
	PatchSkeleton{ mimaSYS_COST_patchByteCode,                     (void *)0x691F2B, 14}, // Declared line 117. Patch on PUSH 0x78
	PatchSkeleton{ mimaSYS_COST_patchByteCode,                     (void *)0x692D5E, 14}, // Declared line 119. Patch on PUSH 0x78
	PatchSkeleton{ mimaSYS_COST_patchByteCode,                     (void *)0x69323B, 14}, // Declared line 121. Patch on PUSH 0x78
	PatchSkeleton{ mimaSYS_COST_A236FLASHFIX_patchByteCode,        (void *)0x694C02, 21}, // Declared line 153. Patch on PUSH 0x78
	PatchSkeleton{ mimaSYS_COST_A236FLASHFIX_patchByteCode,        (void *)0x695CAE, 21}, // Declared line 154. Patch on PUSH 0x78
	PatchSkeleton{ mimaD236_SYS_patchByteCode,                     (void *)0x68EFD0,  7}, // Declared line 176. Patch on MOV ECX, ESI
	PatchSkeleton{ mimaD623_SYS_patchByteCode,                     (void *)0x6906F6,  7}, // Declared line 202. Patch on MOV ECX, ESI
	PatchSkeleton{ mimaD214_SYS_patchByteCode,                     (void *)0x69360D,  7}, // Declared line 246. Patch on MOV ECX, ESI
	PatchSkeleton{ mimaD214_SYSAIR_patchByteCode,                  (void *)0x693A95,  5}, // Declared line 247. Patch on MOV EBX, 2
	PatchSkeleton{ mimaA236_LASER_SYS_patchByteCode,               (void *)0x68F620,  7}, // Declared line 269. Patch on MOV ECX, ESI
	PatchSkeleton{ mimaA236STEP_COSTB_patchByteCode,               (void *)0x68FBE1,  6}, // Declared line 281. Patch on CMP AL, 4
	PatchSkeleton{ mimaA236STEP_COSTC_patchByteCode,               (void *)0x68FEDA,  6}, // Declared line 292. Patch on CMP AL, 4
	PatchSkeleton{ mimaA236STEP_SYS_patchByteCode,                 (void *)0x68FDC2,  7}, // Declared line 325. Patch on MOV ECX, ESI
	PatchSkeleton{ mimaA214_FLASH_SYS_patchByteCode,               (void *)0x694497,  7}, // Declared line 366. Patch on MOV ECX, ESI
	PatchSkeleton{ mimaA214_FLASH_SYSAIR_patchByteCode,            (void *)0x6954E7,  5}, // Declared line 367. Patch on MOV EBX, 2
	PatchSkeleton{ mimaA214EYE_COST_patchByteCode,                 (void *)0x695E24,  7}, // Declared line 386. Patch on PUSH 0x78
	PatchSkeleton{ mimaA214EYE_COSTAIR_patchByteCode,              (void *)0x69604A,  7}, // Declared line 404. Patch on PUSH 0x78
	PatchSkeleton{ mimaA214_EYE_SYS_patchByteCode,                 (void *)0x695E3A,  7}, // Declared line 445. Patch on MOV ECX, ESI
	PatchSkeleton{ mimaA214_EYE_SYSAIR_patchByteCode,              (void *)0x696072,  7}, // Declared line 446. Patch on CMP [ESI+0x13E], DI
	PatchSkeleton{ mimaA623_AST_SYS_patchByteCode,                 (void *)0x690DC6,  7}, // Declared line 468. Patch on MOV ECX, ESI
	PatchSkeleton{ mimaA623_AST_AIR_SYS_patchByteCode,             (void *)0x690FFA,  7}, // Declared line 489. Patch on CMP [ESI+0x13E], DI
	PatchSkeleton{ mimaA623_GRAB_SYS_patchByteCode,                (void *)0x691B1C,  7}, // Declared line 510. Patch on CMP [ESI+0x13E], BX
	PatchSkeleton{ mimaA22STOCK_SYS_patchByteCode,                 (void *)0x692CC6,  7}, // Declared line 532. Patch on MOV ECX, ESI
	PatchSkeleton{ mimaA22ZONE_SYS_patchByteCode,                  (void *)0x6931CE,  7}, // Declared line 554. Patch on MOV ECX, ESI
	PatchSkeleton{ mimaD214_MULTICAST_patchByteCode,               (void *)0x6935C7,  7}, // Declared line 613. Patch on PUSH 0x78
	PatchSkeleton{ mimaD214_MULTICAST_AIR_patchByteCode,           (void *)0x693A38,  7}, // Declared line 614. Patch on PUSH 0x78
	PatchSkeleton{ mimaD214_MULTICAST2_patchByteCode,              (void *)0x6936A2,  8}, // Declared line 668. Patch on CMP WORD PTR [ESI+0x140], 7
	PatchSkeleton{ mimaD214_MULTICAST2_AIR_patchByteCode,          (void *)0x693B8B,  8}, // Declared line 669. Patch on CMP WORD PTR [ESI+0x140], 7
	PatchSkeleton{ mimaD214_NOCHARGE_patchByteCode,                (void *)0x6933FC,  8}, // Declared line 674. Patch on JNE SHORT 0x00693404
	PatchSkeleton{ mimaD214_NOCHARGE_patchByteCode,                (void *)0x693621,  8}, // Declared line 675. Patch on JNE SHORT 0x00693629
	PatchSkeleton{ mimaD214_NOCHARGE_patchByteCode,                (void *)0x6937FA,  9}, // Declared line 676. Patch on JNE SHORT 0x00693803
	PatchSkeleton{ mimaD214_NOCHARGE_patchByteCode,                (void *)0x693AB8,  9}, // Declared line 677. Patch on JNE SHORT 0x00693AC1
	PatchSkeleton{ mimaD214_SOUND_ANDHIT_patchByteCode,            (void *)0x6A0249,  6}, // Declared line 852. Patch on FLD ST, DWORD PTR [ESI+0x11C]
	PatchSkeleton{ mimaA236JGRAVITY_patchByteCode,                 (void *)0x68FAD9,  6}, // Declared line 872. Patch on FLD ST, DWORD PTR [ESI+0xF4]
	PatchSkeleton{ mimaA236JGRAVITY_patchByteCode,                 (void *)0x68FDE0,  6}, // Declared line 874. Patch on FLD ST, DWORD PTR [ESI+0xF4]
	PatchSkeleton{ mimaA236JGRAVITYEND1_patchByteCode,             (void *)0x68FB93,  7}, // Declared line 895. Patch on JE SHORT 0x0068FB9F
	PatchSkeleton{ mimaA236JGRAVITYEND2_patchByteCode,             (void *)0x68FE8C,  7}, // Declared line 896. Patch on JE SHORT 0x0068FE98
	PatchSkeleton{ mimaA236EFFECTS_patchByteCode,                  (void *)0x6A2559,  6}, // Declared line 917. Patch on CMP AX, 0x1FE
	PatchSkeleton{ mimaA236EFFECTS2_patchByteCode,                 (void *)0x6A2576,  6}, // Declared line 925. Patch on FSTP DWORD PTR [ESI+0xF0], ST
	PatchSkeleton{ mimaA236STEPFLOORLESS_patchByteCode,            (void *)0x68FABD,  5}, // Declared line 929. Patch on CALL 0x00487CA0
	PatchSkeleton{ mimaA236STEP_NOSELFCANCEL1_patchByteCode,       (void *)0x68FB06,  9}, // Declared line 936. Patch on CMP WORD PTR [ESI+0x49E], 0xC8
	PatchSkeleton{ mimaA236STEP_NOSELFCANCEL2_patchByteCode,       (void *)0x68FE0D,  9}, // Declared line 941. Patch on CMP WORD PTR [ESI+0x49E], 0xC8
	PatchSkeleton{ mimaA236STEPC_MMNTM_patchByteCode,              (void *)0x68FEF8,  6}, // Declared line 946. Patch on FLD ST, DWORD PTR [0x85B9E0]
	PatchSkeleton{ mimaA236STEPC_DECEL_patchByteCode,              (void *)0x6900A7,  6}, // Declared line 952. Patch on FLD ST, DWORD PTR [0x85B908]
	PatchSkeleton{ mimaA236STEP_HITS_patchByteCode,                (void *)0x69B3AE,  6}, // Declared line 960. Patch on MOV [ESI+0x194], BL
	PatchSkeleton{ mimaD22_BULLETCHECK0_patchByteCode,             (void *)0x69FD5B,  9}, // Declared line 987. Patch on CMP WORD PTR [ECX+0x13C], 0x21C
	PatchSkeleton{ mimaD22_BULLETCHECK2_patchByteCode,             (void *)0x69FEE8,  9}, // Declared line 988. Patch on CMP WORD PTR [EAX+0x13C], 0x21C
	PatchSkeleton{ mimaD22_BULLETCHECK1_patchByteCode,             (void *)0x69FE50,  9}, // Declared line 990. Patch on CMP WORD PTR [EAX+0x13C], 0x21C
	PatchSkeleton{ mimaD22_CVER1_patchByteCode,                    (void *)0x69D58F,  6}, // Declared line 1030. Patch on JLE 0x0069D6DC
	PatchSkeleton{ mimaA623_AST_ALLDUR_patchByteCode,              (void *)0x6A1035,  6}, // Declared line 1040. Patch on FLD ST, DWORD PTR [0x85B984]
	PatchSkeleton{ mimaA623_AST_ALLDUR_patchByteCode,              (void *)0x6A1041,  6}, // Declared line 1041. Patch on FLD ST, DWORD PTR [0x857DD4]
	PatchSkeleton{ mimaA623_AST_ALLDUR_patchByteCode,              (void *)0x6A104F,  6}, // Declared line 1042. Patch on FLD ST, DWORD PTR [0x85BA6C]
	PatchSkeleton{ mimaA623_AST_ALLDUR_patchByteCode,              (void *)0x6A105D,  6}, // Declared line 1043. Patch on FLD ST, DWORD PTR [0x87153C]
	PatchSkeleton{ mimaA623_AST_ALLDUR_patchByteCode,              (void *)0x6A1067,  6}, // Declared line 1044. Patch on FLD ST, DWORD PTR [0x85B98C]
	PatchSkeleton{ mimaA623_AST_ALLDUR_patchByteCode,              (void *)0x6A1073,  6}, // Declared line 1045. Patch on FLD ST, DWORD PTR [0x871540]
	PatchSkeleton{ mimaA623_AST_ALLDUR_patchByteCode,              (void *)0x6A1081,  6}, // Declared line 1046. Patch on FLD ST, DWORD PTR [0x85BAE0]
	PatchSkeleton{ mimaA623_AST_ALLDUR_patchByteCode,              (void *)0x6A108F,  6}, // Declared line 1047. Patch on FLD ST, DWORD PTR [0x85B984]
	PatchSkeleton{ mimaA623_AST_HITC_patchByteCode,                (void *)0x6A0FEB,  6}, // Declared line 1139. Patch on FLD ST, DWORD PTR [ESI+0xF0]
	PatchSkeleton{ mimaD623_LVA_patchByteCode,                     (void *)0x69B3E1,  7}, // Declared line 1151. Patch on CMP BYTE PTR [ESI+0x6A5], 1
	PatchSkeleton{ mimaD623_LVB_patchByteCode,                     (void *)0x69B415,  7}, // Declared line 1159. Patch on CMP BYTE PTR [ESI+0x6A5], 3
	PatchSkeleton{ mimaA236LASERB_patchByteCode,                   (void *)0x6A0BEE,  7}, // Declared line 1317. Patch on MOVZX EAX, WORD PTR [ECX+0x13E]
	PatchSkeleton{ mimaA236LASERC_patchByteCode,                   (void *)0x6A0CA8,  7}, // Declared line 1318. Patch on MOVZX ECX, WORD PTR [EAX+0x13E]
	PatchSkeleton{ mimaA236LASERC_FIX_patchByteCode,               (void *)0x6A0CB7, 10}, // Declared line 1323. Patch on JNE SHORT 0x006A0CE5
	PatchSkeleton{ mimaA236LASER_LVDIF1_patchByteCode,             (void *)0x6A0C75,  7}, // Declared line 1331. Patch on CMP BYTE PTR [EDX+0x6A8], 3
	PatchSkeleton{ mimaA236LASER_LVDIF2_patchByteCode,             (void *)0x6A0D2F,  7}, // Declared line 1332. Patch on CMP BYTE PTR [EAX+0x6A8], 3
	PatchSkeleton{ mimaA236LASER_CTOBCH_patchByteCode,             (void *)0x68F726,  7}, // Declared line 1343. Patch on FST DWORD PTR [ESP+0xD8], ST
	PatchSkeleton{ mimaA236LASER_UNLOCK1_patchByteCode,            (void *)0x6A0BDF,  9}, // Declared line 1360. Patch on CMP WORD PTR [ECX+0x13C], 0x1F9
	PatchSkeleton{ mimaA236LASER_UNLOCK2_patchByteCode,            (void *)0x6A0C99,  9}, // Declared line 1361. Patch on CMP WORD PTR [EAX+0x13C], 0x1F9
	PatchSkeleton{ mimaA214FLASH_SPD_patchByteCode,                (void *)0x6A1FC7,  6}, // Declared line 1366. Patch on FLD ST, DWORD PTR [0x85B830]
	PatchSkeleton{ mimaA214FLASH_SPDLV_patchByteCode,              (void *)0x6A1FD0,  7}, // Declared line 1371. Patch on CMP BYTE PTR [EDX+0x6AB], 2
	PatchSkeleton{ mimaA214FLASH_B1B_patchByteCode,                (void *)0x693D9F,  6}, // Declared line 1386. Patch on FLD ST, DWORD PTR [0x85B9E8]
	PatchSkeleton{ mimaA214FLASH_BCH1B_patchByteCode,              (void *)0x694064,  6}, // Declared line 1387. Patch on FLD ST, DWORD PTR [0x85B9E8]
	PatchSkeleton{ mimaA214FLASH_JB1B_patchByteCode,               (void *)0x694D9E,  6}, // Declared line 1388. Patch on FLD ST, DWORD PTR [0x85B9E8]
	PatchSkeleton{ mimaA214FLASH_JBCH1B_patchByteCode,             (void *)0x69506C,  6}, // Declared line 1389. Patch on FLD ST, DWORD PTR [0x85B9E8]
	PatchSkeleton{ mimaA214FLASH_BONCE_patchByteCode,              (void *)0x693D10,  6}, // Declared line 1402. Patch on JNE 0x00693FAF
	PatchSkeleton{ mimaA214FLASH_BCHGONCE_patchByteCode,           (void *)0x693FD4,  6}, // Declared line 1415. Patch on JNE 0x00694349
	PatchSkeleton{ mimaA214FLASH_JBONCE_patchByteCode,             (void *)0x694D07,  6}, // Declared line 1428. Patch on JNE 0x00694FB9
	PatchSkeleton{ mimaA214FLASH_JBCHGONCE_patchByteCode,          (void *)0x694FDB,  6}, // Declared line 1441. Patch on JNE 0x00695359
	PatchSkeleton{ mimaA214FLASH_CCHGONCE_patchByteCode,           (void *)0x6947D8,  6}, // Declared line 1454. Patch on JNE 0x00694B4D
	PatchSkeleton{ mimaA214FLASH_JCCHGONCE_patchByteCode,          (void *)0x69585A,  6}, // Declared line 1467. Patch on JNE 0x00695BD8
	PatchSkeleton{ mimaA214FLASH_OFFSCREEN1_patchByteCode,         (void *)0x6A2146,  6}, // Declared line 1473. Patch on FLD ST, DWORD PTR [0x85C040]
	PatchSkeleton{ mimaA214FLASH_OFFSCREEN2_patchByteCode,         (void *)0x6A2163,  6}, // Declared line 1478. Patch on FCOMP ST, QWORD PTR [0x85B970]
	PatchSkeleton{ mimaA214FLASH_SKIPHITFUNCS_patchByteCode,       (void *)0x6A2067,  6}, // Declared line 1483. Patch on MOV ECX, [ESI+0x398]
	PatchSkeleton{ mimaA214FLASH_RISE_patchByteCode,               (void *)0x6A1EF8,  6}, // Declared line 1696. Patch on CMP [ESI+0x144], EDI
	PatchSkeleton{ mimaNOP_patchByteCode,                          (void *)0x6A1694,  6}, // Declared line 1703. Patch on FMUL ST, QWORD PTR [0x85B818]
	PatchSkeleton{ mimaNOP_patchByteCode,                          (void *)0x6A16CB,  6}, // Declared line 1705. Patch on MOV [ESI+0x113], AL
	PatchSkeleton{ mimaNOP_patchByteCode,                          (void *)0x6A16D3,  6}, // Declared line 1707. Patch on ADD [ESI+0x111], AL
	PatchSkeleton{ mimaNOP_patchByteCode,                          (void *)0x6A16D9,  6}, // Declared line 1709. Patch on ADD [ESI+0x112], AL
	PatchSkeleton{ mimaA214FLASHB_1X_patchByteCode,                (void *)0x693D36,  6}, // Declared line 1717. Patch on FLD ST, DWORD PTR [0x85BB84]
	PatchSkeleton{ mimaA214FLASHB_1Y_patchByteCode,                (void *)0x693D45,  6}, // Declared line 1718. Patch on FLD ST, DWORD PTR [0x86782C]
	PatchSkeleton{ mimaA214FLASHB_1X_patchByteCode,                (void *)0x693FFB,  6}, // Declared line 1721. Patch on FLD ST, DWORD PTR [0x85BB84]
	PatchSkeleton{ mimaA214FLASHB_1Y_patchByteCode,                (void *)0x69400A,  6}, // Declared line 1722. Patch on FLD ST, DWORD PTR [0x86782C]
	PatchSkeleton{ mimaA214FLASHB_1X_patchByteCode,                (void *)0x694D31,  6}, // Declared line 1725. Patch on FLD ST, DWORD PTR [0x85BB84]
	PatchSkeleton{ mimaA214FLASHB_1Y_patchByteCode,                (void *)0x694D41,  6}, // Declared line 1726. Patch on FLD ST, DWORD PTR [0x86782C]
	PatchSkeleton{ mimaA214FLASHB_1X_patchByteCode,                (void *)0x695002,  6}, // Declared line 1728. Patch on FLD ST, DWORD PTR [0x85BB84]
	PatchSkeleton{ mimaA214FLASHB_1Y_patchByteCode,                (void *)0x695012,  6}, // Declared line 1729. Patch on FLD ST, DWORD PTR [0x86782C]
	PatchSkeleton{ mimaA214FLASHC_1A_patchByteCode,                (void *)0x69450D,  6}, // Declared line 1762. Patch on FLD ST, DWORD PTR [0x85BB84]
	PatchSkeleton{ mimaA214FLASHC_1B_patchByteCode,                (void *)0x69457F,  6}, // Declared line 1763. Patch on FLD ST, DWORD PTR [0x85B9E8]
	PatchSkeleton{ mimaA214FLASHC_2A_patchByteCode,                (void *)0x6945F1,  6}, // Declared line 1764. Patch on FLD ST, DWORD PTR [0x85B9E0]
	PatchSkeleton{ mimaA214FLASHC_2B_patchByteCode,                (void *)0x694663,  6}, // Declared line 1765. Patch on FLD ST, DWORD PTR [0x85B908]
	PatchSkeleton{ mimaA214FLASHC_3A_patchByteCode,                (void *)0x6946D5,  6}, // Declared line 1766. Patch on FLD ST, DWORD PTR [0x85B908]
	PatchSkeleton{ mimaA214FLASHC_3B_patchByteCode,                (void *)0x694747,  6}, // Declared line 1767. Patch on FLD ST, DWORD PTR [0x85B858]
	PatchSkeleton{ mimaA214FLASHC_1A_patchByteCode,                (void *)0x6947FF,  6}, // Declared line 1770. Patch on FLD ST, DWORD PTR [0x85BB84]
	PatchSkeleton{ mimaA214FLASHC_1B_patchByteCode,                (void *)0x694868,  6}, // Declared line 1771. Patch on FLD ST, DWORD PTR [0x85B9E8]
	PatchSkeleton{ mimaA214FLASHC_2A_patchByteCode,                (void *)0x6948D4,  6}, // Declared line 1772. Patch on FLD ST, DWORD PTR [0x85B9E0]
	PatchSkeleton{ mimaA214FLASHC_2B_patchByteCode,                (void *)0x69493D,  6}, // Declared line 1773. Patch on FLD ST, DWORD PTR [0x85B908]
	PatchSkeleton{ mimaA214FLASHC_3A_patchByteCode,                (void *)0x6949A9,  6}, // Declared line 1774. Patch on FLD ST, DWORD PTR [0x85B908]
	PatchSkeleton{ mimaA214FLASHC_3B_patchByteCode,                (void *)0x694A12,  6}, // Declared line 1775. Patch on FLD ST, DWORD PTR [0x85B858]
	PatchSkeleton{ mimaA214FLASHC_1A_patchByteCode,                (void *)0x69558C,  6}, // Declared line 1778. Patch on FLD ST, DWORD PTR [0x85BB84]
	PatchSkeleton{ mimaA214FLASHC_1B_patchByteCode,                (void *)0x6955FF,  6}, // Declared line 1779. Patch on FLD ST, DWORD PTR [0x85B9E8]
	PatchSkeleton{ mimaA214FLASHC_2A_patchByteCode,                (void *)0x695672,  6}, // Declared line 1780. Patch on FLD ST, DWORD PTR [0x85B9E0]
	PatchSkeleton{ mimaA214FLASHC_2B_patchByteCode,                (void *)0x6956E5,  6}, // Declared line 1781. Patch on FLD ST, DWORD PTR [0x85B908]
	PatchSkeleton{ mimaA214FLASHC_3A_patchByteCode,                (void *)0x695758,  6}, // Declared line 1782. Patch on FLD ST, DWORD PTR [0x85B908]
	PatchSkeleton{ mimaA214FLASHC_3B_patchByteCode,                (void *)0x6957CB,  6}, // Declared line 1783. Patch on FLD ST, DWORD PTR [0x85B858]
	PatchSkeleton{ mimaA214FLASHC_1A_patchByteCode,                (void *)0x695881,  6}, // Declared line 1786. Patch on FLD ST, DWORD PTR [0x85BB84]
	PatchSkeleton{ mimaA214FLASHC_1B_patchByteCode,                (void *)0x6958EB,  6}, // Declared line 1787. Patch on FLD ST, DWORD PTR [0x85B9E8]
	PatchSkeleton{ mimaA214FLASHC_2A_patchByteCode,                (void *)0x695958,  6}, // Declared line 1788. Patch on FLD ST, DWORD PTR [0x85B9E0]
	PatchSkeleton{ mimaA214FLASHC_2B_patchByteCode,                (void *)0x6959C2,  6}, // Declared line 1789. Patch on FLD ST, DWORD PTR [0x85B908]
	PatchSkeleton{ mimaA214FLASHC_3A_patchByteCode,                (void *)0x695A2F,  6}, // Declared line 1790. Patch on FLD ST, DWORD PTR [0x85B908]
	PatchSkeleton{ mimaA214FLASHC_3B_patchByteCode,                (void *)0x695A99,  6}, // Declared line 1791. Patch on FLD ST, DWORD PTR [0x85B858]
	PatchSkeleton{ mimaA214FLASHC_4A_patchByteCode,                (void *)0x695B07,  6}, // Declared line 1793. Patch on FLD ST, DWORD PTR [0x85B858]
	PatchSkeleton{ mimaA214FLASHC_4B_patchByteCode,                (void *)0x695B71,  6}, // Declared line 1794. Patch on FLD ST, DWORD PTR [0x85BAC8]
	PatchSkeleton{ mimaA623GRAB_ALLOWCANCELB_patchByteCode,        (void *)0x69B4CB,  7}, // Declared line 1806. Patch on MOV BYTE PTR [ESI+0x194], 1
	PatchSkeleton{ mimaA623GRAB_ALLOWCANCELC_patchByteCode,        (void *)0x69B56F,  7}, // Declared line 1807. Patch on MOV BYTE PTR [ESI+0x194], 1
	PatchSkeleton{ mimaA623GRABB_SPREADC2_patchByteCode,           (void *)0x691E24,  6}, // Declared line 1832. Patch on FILD ST, DWORD PTR [ESP+0x14]
	PatchSkeleton{ mimaA623GRABB_SPREADC1_patchByteCode,           (void *)0x691E72,  6}, // Declared line 1833. Patch on FILD ST, DWORD PTR [ESP+0x10]
	PatchSkeleton{ mimaA623GRAB_LENGTHB_patchByteCode,             (void *)0x6913D4,  8}, // Declared line 1904. Patch on CMP WORD PTR [ESI+0x7D2], 6
	PatchSkeleton{ mimaA623GRAB_LENGTHC_patchByteCode,             (void *)0x691DEE,  8}, // Declared line 1906. Patch on CMP WORD PTR [ESI+0x7D2], 6
	PatchSkeleton{ mimaNOP_patchByteCode,                          (void *)0x6A2602,  6}, // Declared line 1908. Patch on FADD ST, QWORD PTR [0x867840]
	PatchSkeleton{ mimaA623GRAB_NOREANGLE_patchByteCode,           (void *)0x6A2650,  6}, // Declared line 1913. Patch on FSTP DWORD PTR [ESI+0x12C], ST
	PatchSkeleton{ mimaA623GRAB_FIRSTSUB_patchByteCode,            (void *)0x6A2656,  6}, // Declared line 1937. Patch on MOV AL, [ESI+0x113]
	PatchSkeleton{ mimaA623GRAB_FIX1_patchByteCode,                (void *)0x6A26A1,  6}, // Declared line 1945. Patch on FADD ST, DWORD PTR [ESI+0xF0]
	PatchSkeleton{ mimaA623GRAB_EFFECT2_patchByteCode,             (void *)0x6A25FC,  6}, // Declared line 1980. Patch on FLD ST, DWORD PTR [ESI+0x11C]
	PatchSkeleton{ mimaA623GRAB_EFFECT_patchByteCode,              (void *)0x6A27CC,  6}, // Declared line 2185. Patch on FLD ST, DWORD PTR [ESI+0x11C]
	PatchSkeleton{ mimaA623GRAB_LV4NEVER_patchByteCode,            (void *)0x691653,  7}, // Declared line 2190. Patch on CMP BYTE PTR [ESI+0x6AD], 4
	PatchSkeleton{ mimaA623GRAB_LV4NEVER_patchByteCode,            (void *)0x6919D0,  7}, // Declared line 2191. Patch on CMP BYTE PTR [ESI+0x6AD], 4
	PatchSkeleton{ mimaA623GRAB_LV4NEVER_patchByteCode,            (void *)0x69206D,  7}, // Declared line 2192. Patch on CMP BYTE PTR [ESI+0x6AD], 4
	PatchSkeleton{ mimaA623GRAB_LV4NEVER_patchByteCode,            (void *)0x6923EA,  7}, // Declared line 2193. Patch on CMP BYTE PTR [ESI+0x6AD], 4
	PatchSkeleton{ mimaA623GRAB_LV4NEVER_patchByteCode,            (void *)0x69B4C4,  7}, // Declared line 2194. Patch on CMP BYTE PTR [ESI+0x6AD], 3
	PatchSkeleton{ mimaA623GRAB_LV4NEVER_patchByteCode,            (void *)0x69B568,  7}, // Declared line 2195. Patch on CMP BYTE PTR [ESI+0x6AD], 3
	PatchSkeleton{ mimaNOP_patchByteCode,                          (void *)0x6A27D2,  6}, // Declared line 2202. Patch on FMUL ST, QWORD PTR [0x85A298]
	PatchSkeleton{ mimaA623GRAB_EFFDUR_patchByteCode,              (void *)0x6A27EC,  7}, // Declared line 2211. Patch on CMP DWORD PTR [ESI+0x144], 6
	PatchSkeleton{ mimaA623GRAB_NEVERB1_patchByteCode,             (void *)0x691130,  6}, // Declared line 2221. Patch on JNE 0x0069126F
	PatchSkeleton{ mimaA623GRAB_NEVERC1_patchByteCode,             (void *)0x691B49,  6}, // Declared line 2230. Patch on JNE 0x00691C88
	PatchSkeleton{ mimaA214EYEC_ADDON1_patchByteCode,              (void *)0x6A323D,  7}, // Declared line 2235. Patch on CMP DWORD PTR [ESI+0x144], 0x19
	PatchSkeleton{ mimaNOP_patchByteCode,                          (void *)0x6A31FB,  6}, // Declared line 2236. Patch on FMUL ST, QWORD PTR [0x85B818]
	PatchSkeleton{ mimaNOP_patchByteCode,                          (void *)0x6A3223,  6}, // Declared line 2237. Patch on FMUL ST, QWORD PTR [0x85B818]
	PatchSkeleton{ mimaA214EYE_SHRINKBOX_patchByteCode,            (void *)0x6A318E,  6}, // Declared line 2242. Patch on FLD ST, DWORD PTR [ESI+0x12C]
	PatchSkeleton{ mimaA214EYE_BALLDONTPOPIFRODGONE_patchByteCode, (void *)0x6A2EB7,  6}, // Declared line 2246. Patch on JLE 0x006A2F69
	PatchSkeleton{ mimaA214EYE_HITCOUNT_patchByteCode,             (void *)0x6A2D9B,  6}, // Declared line 2277. Patch on FLD ST, DWORD PTR [ESI+0x11C]
	PatchSkeleton{ mimaNOP_patchByteCode,                          (void *)0x6A2DA1,  6}, // Declared line 2281. Patch on FADD ST, QWORD PTR [0x85AAF8]
	PatchSkeleton{ mimaA214EYE_CORESPD_patchByteCode,              (void *)0x6A31CB,  7}, // Declared line 2295. Patch on MOVSX EAX, BYTE PTR [ESI+0x104]
	PatchSkeleton{ mimaA214EYE_CORESPIN_patchByteCode,             (void *)0x6A314D,  6}, // Declared line 2301. Patch on FADD ST, DWORD PTR [ESI+0x12C]
	PatchSkeleton{ mimaA214EYE_COREMAXSTRETCH_patchByteCode,       (void *)0x6A3173,  6}, // Declared line 2312. Patch on FLD ST, DWORD PTR [0x85B870]
	PatchSkeleton{ mimaA214EYE_CORECOLOR_patchByteCode,            (void *)0x6A2E70,  6}, // Declared line 2373. Patch on FSTP DWORD PTR [ESI+0xEC], ST
	PatchSkeleton{ mimaA214EYE_CDIFF_patchByteCode,                (void *)0x6A2ECD,  6}, // Declared line 2380. Patch on JNE 0x0069FA87
	PatchSkeleton{ mimaA214EYE_CEFFSPD_patchByteCode,              (void *)0x6A2F06,  6}, // Declared line 2387. Patch on FILD ST, DWORD PTR [ESP+0x18]
	PatchSkeleton{ mimaA214EYE_CONHIT_patchByteCode,               (void *)0x6A31EF,  6}, // Declared line 2409. Patch on MOV EAX, [ESI+0x35C]
	PatchSkeleton{ mimaA214EYE_CHITCOUNT_patchByteCode,            (void *)0x6A98EB,  7}, // Declared line 2419. Patch on CMP [ESI+0x13E], BX
	PatchSkeleton{ mima4SCSTAR_ORBEFF_patchByteCode,               (void *)0x6A5BE2,  6}, // Declared line 2502. Patch on MOV EAX, [ESI+0x144]
	PatchSkeleton{ mima4SCSTAR_DUR_patchByteCode,                  (void *)0x6A605D, 10}, // Declared line 2508. Patch on CMP DWORD PTR [ESI+0x144], 0xF0
	PatchSkeleton{ mima4SCSTAR_patchByteCode,                      (void *)0x6A5EE0,  6}, // Declared line 2521. Patch on FLD ST, DWORD PTR [ESI+0x120]
	PatchSkeleton{ mima4SCSTAR_COLOR_patchByteCode,                (void *)0x6A5BA7,  6}, // Declared line 2614. Patch on FLD ST, DWORD PTR [ESI+0x11C]
	PatchSkeleton{ mimaNOP_patchByteCode,                          (void *)0x6A5BAD,  6}, // Declared line 2616. Patch on FADD ST, QWORD PTR [0x85AAF8]
	PatchSkeleton{ mima4SCSTAR_CORESPIN_patchByteCode,             (void *)0x6A5CD3,  6}, // Declared line 2622. Patch on FADD ST, QWORD PTR [0x859910]
	PatchSkeleton{ mima4SCSTAR_COREDIST2_patchByteCode,            (void *)0x6A5CED,  6}, // Declared line 2627. Patch on FMUL ST, QWORD PTR [0x85B920]
	PatchSkeleton{ mima4SCSTAR_COREDIST_patchByteCode,             (void *)0x6A5D01,  6}, // Declared line 2632. Patch on FLD ST, DWORD PTR [0x8589F0]
	PatchSkeleton{ mima4SCSTAR_PROJSPD_patchByteCode,              (void *)0x697C75,  6}, // Declared line 2639. Patch on FLD ST, DWORD PTR [0x871538]
	PatchSkeleton{ mima4SCSTAR_PROJSPD_patchByteCode,              (void *)0x6983D3,  6}, // Declared line 2640. Patch on FLD ST, DWORD PTR [0x871538]
	PatchSkeleton{ mima4SCSTAR_PROJSPDLOCK_patchByteCode,          (void *)0x6A6081,  5}, // Declared line 2689. Patch on JMP 0x006A3279
	PatchSkeleton{ mima4SCSTAR_HIJACKSUBSEQ1_patchByteCode,        (void *)0x6A5B9A,  6}, // Declared line 2939. Patch on JA 0x0069FA87
	PatchSkeleton{ mima4SCSTAR_SECONDARYBULLET_patchByteCode,      (void *)0x6A5BF0,  5}, // Declared line 3016. Patch on LEA EBX, [ECX-0x3B]
	PatchSkeleton{ mimaA22STOCK_NOEFF_patchByteCode,               (void *)0x6A18AD,  6}, // Declared line 3021. Patch on FLD ST, DWORD PTR [0x85BCA4]
	PatchSkeleton{ mimaA22STOCK_patchByteCode,                     (void *)0x6A16BB,  6}, // Declared line 3186. Patch on MOV AL, [ESI+0x113]
	PatchSkeleton{ mimaA22STOCKSTART_patchByteCode,                (void *)0x6A16AE,  7}, // Declared line 3191. Patch on CMP DWORD PTR [ESI+0x144], 0xA
	PatchSkeleton{ mimaSEQJUMP_patchByteCode,                      (void *)0x68AC1A,  5}, // Declared line 3215. Patch on CMP EAX, 0xD2
	PatchSkeleton{ mimaSEQJUMP0_patchByteCode,                     (void *)0x69B31C,  5}, // Declared line 3236. Patch on CMP EAX, 0xEF
	PatchSkeleton{ mimaCARDLEARNAIR_patchByteCode,                 (void *)0x69D840,  6}, // Declared line 3272. Patch on ADD EAX, 0xFFFFFF99
	PatchSkeleton{ mimaSKILLUSEAIR236_patchByteCode,               (void *)0x69DA3E, 10}, // Declared line 3356. Patch on TEST DWORD PTR [ESI+0x7C8], 0x400
	PatchSkeleton{ mima1SC_REFLECTNONE_patchByteCode,              (void *)0x69C740,  8}, // Declared line 3372. Patch on JLE SHORT 0x0069C7BF
	PatchSkeleton{ mima1SC_REFLECTNONE2_patchByteCode,             (void *)0x69D718,  8}, // Declared line 3373. Patch on JLE SHORT 0x0069D797
	PatchSkeleton{ mima1SC_REFLECT_SPIN_patchByteCode,             (void *)0x6A4BF5,  6}, // Declared line 3378. Patch on FADD ST, QWORD PTR [0x8579B0]
	PatchSkeleton{ mima1SC_REFLECTBUFFDUR_patchByteCode,           (void *)0x6970EC,  9}, // Declared line 3383. Patch on MOV WORD PTR [ESI+0x89E], 0x258
	PatchSkeleton{ mima1SC_REFLECTEFF_patchByteCode,               (void *)0x6A4BCB,  6}, // Declared line 3486. Patch on MOV EAX, [ESI+0x398]
	PatchSkeleton{ mima1SC_REFLECTDUR_patchByteCode,               (void *)0x6A4C21,  6}, // Declared line 3497. Patch on MOV AL, [ESI+0x113]
	PatchSkeleton{ mimaDIAL1_patchByteCode,                        (void *)0x68C111,  6}, // Declared line 3527. Patch on FLD ST, DWORD PTR [ESI+0xF4]
	PatchSkeleton{ mimaDIAL2_patchByteCode,                        (void *)0x68C1C0,  6}, // Declared line 3528. Patch on FLD ST, DWORD PTR [ESI+0xF4]
	PatchSkeleton{ mima5B_0A_patchByteCode,                        (void *)0x68C4CD,  6}, // Declared line 3562. Patch on FSUBR ST, QWORD PTR [0x858990]
	PatchSkeleton{ mima5B_2A_patchByteCode,                        (void *)0x68C52D,  8}, // Declared line 3563. Patch on CALL 0x0046EB30
	PatchSkeleton{ mima5B_3A_patchByteCode,                        (void *)0x68C535,  7}, // Declared line 3564. Patch on CMP EDI, 0x64
	PatchSkeleton{ mima5B_1A_patchByteCode,                        (void *)0x68C49D,  6}, // Declared line 3565. Patch on FLD ST, DWORD PTR [0x867810]
	PatchSkeleton{ mima5B_0A_patchByteCode,                        (void *)0x68C5BB,  6}, // Declared line 3568. Patch on FSUBR ST, QWORD PTR [0x858EF0]
	PatchSkeleton{ mima5B_2A_patchByteCode,                        (void *)0x68C61B,  8}, // Declared line 3569. Patch on CALL 0x0046EB30
	PatchSkeleton{ mima5B_3B_patchByteCode,                        (void *)0x68C623,  6}, // Declared line 3570. Patch on CMP EDI, 0x87
	PatchSkeleton{ mima5B_1B_patchByteCode,                        (void *)0x68C591,  6}, // Declared line 3571. Patch on FLD ST, DWORD PTR [0x867810]
	PatchSkeleton{ mima5B_0A_patchByteCode,                        (void *)0x68CA41,  6}, // Declared line 3574. Patch on FSUBR ST, QWORD PTR [0x858010]
	PatchSkeleton{ mima5B_3A_patchByteCode,                        (void *)0x68CAA1,  7}, // Declared line 3576. Patch on CMP EDI, 0x24
	PatchSkeleton{ mima5B_1A_patchByteCode,                        (void *)0x68CA17,  6}, // Declared line 3577. Patch on FLD ST, DWORD PTR [0x867810]
	PatchSkeleton{ mima5B_0A_patchByteCode,                        (void *)0x68CB2A,  6}, // Declared line 3580. Patch on FSUBR ST, QWORD PTR [0x871520]
	PatchSkeleton{ mima5B_3A_patchByteCode,                        (void *)0x68CB89,  7}, // Declared line 3582. Patch on CMP EDI, 0x32
	PatchSkeleton{ mima5B_1B_patchByteCode,                        (void *)0x68CAFD,  6}, // Declared line 3583. Patch on FLD ST, DWORD PTR [0x867810]
	PatchSkeleton{ mima5B_0A_patchByteCode,                        (void *)0x68CD4D,  6}, // Declared line 3586. Patch on FSUBR ST, QWORD PTR [0x858990]
	PatchSkeleton{ mima5B_2A_patchByteCode,                        (void *)0x68CDA5,  8}, // Declared line 3587. Patch on CALL 0x0046EB30
	PatchSkeleton{ mima5B_3A_patchByteCode,                        (void *)0x68CDAD,  7}, // Declared line 3588. Patch on CMP EDI, 0x64
	PatchSkeleton{ mima5B_1A_patchByteCode,                        (void *)0x68CD23,  6}, // Declared line 3589. Patch on FLD ST, DWORD PTR [0x867810]
	PatchSkeleton{ mima5B_0A_patchByteCode,                        (void *)0x68CE54,  6}, // Declared line 3592. Patch on FSUBR ST, QWORD PTR [0x858EF0]
	PatchSkeleton{ mima5B_2B_patchByteCode,                        (void *)0x68CEAC,  8}, // Declared line 3593. Patch on CALL 0x0046EB30
	PatchSkeleton{ mima5B_3B_patchByteCode,                        (void *)0x68CEB4,  6}, // Declared line 3594. Patch on CMP EDI, 0x87
	PatchSkeleton{ mima5B_1B_patchByteCode,                        (void *)0x68CE2A,  6}, // Declared line 3595. Patch on FLD ST, DWORD PTR [0x867810]
	PatchSkeleton{ mima5B_0B_patchByteCode,                        (void *)0x68C77F,  6}, // Declared line 3598. Patch on FSUBR ST, QWORD PTR [0x858990]
	PatchSkeleton{ mima5B_2A_patchByteCode,                        (void *)0x68C7DF,  8}, // Declared line 3600. Patch on CALL 0x0046EB30
	PatchSkeleton{ mima5B_3A_patchByteCode,                        (void *)0x68C7E7,  7}, // Declared line 3602. Patch on CMP EDI, 0x64
	PatchSkeleton{ mima5B_1A_patchByteCode,                        (void *)0x68C755,  6}, // Declared line 3604. Patch on FLD ST, DWORD PTR [0x867810]
	PatchSkeleton{ mima5B_0B_patchByteCode,                        (void *)0x68C86D,  6}, // Declared line 3607. Patch on FSUBR ST, QWORD PTR [0x858EF0]
	PatchSkeleton{ mima5B_2A_patchByteCode,                        (void *)0x68C8CD,  8}, // Declared line 3609. Patch on CALL 0x0046EB30
	PatchSkeleton{ mima5B_3B_patchByteCode,                        (void *)0x68C8D5,  6}, // Declared line 3611. Patch on CMP EDI, 0x87
	PatchSkeleton{ mima5B_1B_patchByteCode,                        (void *)0x68C843,  6}, // Declared line 3613. Patch on FLD ST, DWORD PTR [0x867810]
	PatchSkeleton{ mima5B_2A_patchByteCode,                        (void *)0x68D0F0,  8}, // Declared line 3618. Patch on CALL 0x0046EB30
	PatchSkeleton{ mima5B_3A_patchByteCode,                        (void *)0x68D0F8,  7}, // Declared line 3620. Patch on CMP EDI, 0x64
	PatchSkeleton{ mima5B_1A_patchByteCode,                        (void *)0x68D068,  6}, // Declared line 3622. Patch on FLD ST, DWORD PTR [0x867810]
	PatchSkeleton{ mima5B_0C_patchByteCode,                        (void *)0x68D19F,  6}, // Declared line 3625. Patch on FSUBR ST, QWORD PTR [0x858EF0]
	PatchSkeleton{ mima5B_2A_patchByteCode,                        (void *)0x68D1F7,  8}, // Declared line 3627. Patch on CALL 0x0046EB30
	PatchSkeleton{ mima5B_3B_patchByteCode,                        (void *)0x68D1FF,  6}, // Declared line 3629. Patch on CMP EDI, 0x87
	PatchSkeleton{ mima5B_1B_patchByteCode,                        (void *)0x68D16B,  6}, // Declared line 3631. Patch on FLD ST, DWORD PTR [0x867810]
	PatchSkeleton{ mima5C_CHARGE_patchByteCode,                    (void *)0x68D53A,  6}, // Declared line 3642. Patch on FLD ST, DWORD PTR [0x85BB30]
	PatchSkeleton{ mima5C_CHARGE_patchByteCode,                    (void *)0x68DFA4,  6}, // Declared line 3644. Patch on FLD ST, DWORD PTR [0x85BB30]
	PatchSkeleton{ mima5C_CLEARABLE_patchByteCode,                 (void *)0x69ECB6,  6}, // Declared line 3676. Patch on MOV EAX, [ESI+0x190]
	PatchSkeleton{ mima5C_SPLITSPD_patchByteCode,                  (void *)0x69ED95,  6}, // Declared line 3694. Patch on FADD ST, QWORD PTR [0x85BA38]
	PatchSkeleton{ mima5C_SPLITSPDEND_patchByteCode,               (void *)0x69EE16,  5}, // Declared line 3700. Patch on FST DWORD PTR [ECX+4], ST
	PatchSkeleton{ mima5C_SPLIT2ND_patchByteCode,                  (void *)0x69EE05,  9}, // Declared line 3720. Patch on FLD ST, DWORD PTR [ECX+4]
	PatchSkeleton{ mima6C_patchByteCode,                           (void *)0x68D7F5,  6}, // Declared line 3726. Patch on FLD ST, DWORD PTR [0x85B9E0]
	PatchSkeleton{ mimaJ6C_patchByteCode,                          (void *)0x68E2E5,  6}, // Declared line 3731. Patch on FLD ST, DWORD PTR [0x85B9E0]
	PatchSkeleton{ mimaFLDZ_patchByteCode,                         (void *)0x6966DD,  6}, // Declared line 3734. Patch on FLD ST, DWORD PTR [0x85AE94]
	PatchSkeleton{ mima3SCSPARK_DUR_patchByteCode,                 (void *)0x6A3DE7, 10}, // Declared line 3740. Patch on CMP DWORD PTR [ESI+0x144], 0x12C
};


static std::array<unsigned, 152> skeletonsForUpdate = {
	   0,   1,   2,   3,   4,   5,   6,   7,   8,   9,  10,  11,  12,  13,  14,  15,
	  16,  17,  18,  19,  20,  21,  22,  23,  24,  25,  26,  27,  28,  29,  30,  31,
	  32,  33,  34,  35,  36,  37,  38,  39,  41,  42,  43,  44,  47,  48,  49,  50,
	  51,  73,  78,  79,  80,  81,  82,  83,  84,  85,  86,  87,  96,  97,  98,  99,
	 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115,
	 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 133,
	 134, 135, 142, 143, 144, 145, 150, 151, 175, 176, 183, 190, 193, 194, 195, 196,
	 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	 229, 230, 231, 232, 233, 238, 239, 240,
};
static std::array<unsigned, 8> skeletonsForInitializeAction = { 52, 66, 67, 130, 131, 146, 147, 184 };
static std::vector<unsigned> skeletonsForInitialize;
static std::array<unsigned, 5> skeletonsForHandleInputs = { 56, 185, 186, 187, 188 };
static std::vector<unsigned> skeletonsForVUnknown58;
static std::vector<unsigned> skeletonsForVUnknown5C;
static std::vector<unsigned> skeletonsForVUnknown60;
static std::array<unsigned, 76> skeletonsForObjectUpdate = {
	  40,  45,  46,  53,  54,  55,  57,  58,  59,  60,  61,  62,  63,  64,  65,  68,
	  69,  70,  71,  72,  74,  75,  76,  77,  88,  89,  90,  91,  92,  93,  94,  95,
	 136, 137, 138, 139, 140, 141, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159,
	 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178,
	 179, 180, 181, 182, 189, 191, 192, 234, 235, 236, 237, 241,
};
static std::array<unsigned, 1> skeletonsForObjectInitializeAction = { 166 };



std::vector<Patch, TrampolineAllocator> compiledPatches{trampolineAllocator};
std::vector<Patch *, PatchListAllocator> objectUpdate_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> objectInitializeAction_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> update_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> initializeAction_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> initialize_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> handleInputs_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> VUnknown58_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> VUnknown5C_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> VUnknown60_patches{patchListAllocator};

static Patch compilePatch(const PatchSkeleton &skeleton)
{
	Patch result{skeleton};

	result.trampoline = internalMemory.alloc(skeleton.byteCode.byteCodeLength + 5);
	memcpy(result.trampoline, skeleton.byteCode.byteCode, skeleton.byteCode.byteCodeLength);
	for (int i = 0; i < skeleton.byteCode.jumpsSize; i++) {
		JumpTarget &jump = skeleton.byteCode.jumps[i];
		auto location = (unsigned *)&result.trampoline[jump.patchOffset];
		unsigned relative = jump.targetAddress - ((unsigned)location + 4);

		*location = relative;
	}
	SokuLib::TamperNearJmp((DWORD)&result.trampoline[skeleton.byteCode.byteCodeLength], (DWORD)result.location + result.patchSize);
	return result;
}

static void allocateTrampolines(std::vector<Patch, TrampolineAllocator> &result)
{
	result.reserve(std::size(patchList));
	for (auto &patch : patchList)
		result.push_back(compilePatch(patch));
}

template<typename T>
static void getPatchList(const T &skeletons, std::vector<Patch *, PatchListAllocator> &result)
{
	result.reserve(std::size(skeletons));
	for (auto &skeleton : skeletons)
		result.push_back(&compiledPatches[skeleton]);
}

void initPatches()
{
	assert(trampolineAllocator.getIndex() == 0);
	allocateTrampolines(compiledPatches);
	getPatchList(skeletonsForObjectUpdate, objectUpdate_patches);
	getPatchList(skeletonsForObjectInitializeAction, objectInitializeAction_patches);
	getPatchList(skeletonsForUpdate, update_patches);
	getPatchList(skeletonsForInitializeAction, initializeAction_patches);
	getPatchList(skeletonsForInitialize, initialize_patches);
	getPatchList(skeletonsForHandleInputs, handleInputs_patches);
	getPatchList(skeletonsForVUnknown58, VUnknown58_patches);
	getPatchList(skeletonsForVUnknown5C, VUnknown5C_patches);
	getPatchList(skeletonsForVUnknown60, VUnknown60_patches);
	printf("Internal memory used %zu/20048\n", internalMemory.getIndex());
	assert(internalMemory.getIndex() == 20048);
}

void clearPatches()
{
	compiledPatches.clear();
	objectUpdate_patches.clear();
	objectInitializeAction_patches.clear();
	update_patches.clear();
	initializeAction_patches.clear();
	initialize_patches.clear();
	handleInputs_patches.clear();
	VUnknown58_patches.clear();
	VUnknown5C_patches.clear();
	VUnknown60_patches.clear();
}
