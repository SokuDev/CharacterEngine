#include <windows.h>
#include <SokuLib.hpp>
#include "code_patches.hpp"

StackedMemory<12216> applyMemory;
StackedMemory<16755> internalMemory;
Allocator applyAllocator{applyMemory};
PatchListAllocator patchListAllocator{internalMemory};
TrampolineAllocator trampolineAllocator{internalMemory};

Patch::Patch(const PatchSkeleton &skeleton) :
	location(skeleton.location),
	patchSize(skeleton.patchSize),
	trampoline(nullptr)
{}

Patch::Patch(Patch &o)
{
	std::swap(this->location, o.location);
	std::swap(this->patchSize, o.patchSize);
	std::swap(this->trampoline, o.trampoline);
}
Patch::Patch(Patch &&o) noexcept
{
	std::swap(this->location, o.location);
	std::swap(this->patchSize, o.patchSize);
	std::swap(this->trampoline, o.trampoline);
}
Patch &Patch::operator=(Patch &&o) noexcept
{
	std::swap(this->location, o.location);
	std::swap(this->patchSize, o.patchSize);
	std::swap(this->trampoline, o.trampoline);
	return *this;
}

AppliedPatch::AppliedPatch(const Patch *patch) :
	_patch(patch),
	_oldData(applyMemory.alloc(patch->patchSize))
{
	DWORD old;

	memcpy(this->_oldData, patch->location, patch->patchSize);
	VirtualProtect(patch->location, patch->patchSize, PAGE_EXECUTE_WRITECOPY, &old);
	memset(patch->location, 0x90, patch->patchSize);
	SokuLib::TamperNearJmp((DWORD)patch->location, patch->trampoline);
	VirtualProtect(patch->location, patch->patchSize, old, &old);
}

AppliedPatch::~AppliedPatch()
{
	DWORD old;

	VirtualProtect(this->_patch->location, this->_patch->patchSize, PAGE_EXECUTE_WRITECOPY, &old);
	memcpy(this->_patch->location, this->_oldData, this->_patch->patchSize);
	VirtualProtect(this->_patch->location, this->_patch->patchSize, old, &old);
	applyMemory.dealloc(this->_oldData);
}

AppliedPatch::AppliedPatch(AppliedPatch &o)
{
	std::swap(this->_patch, o._patch);
	std::swap(this->_oldData, o._oldData);
}
AppliedPatch::AppliedPatch(AppliedPatch &&o) noexcept
{
	std::swap(this->_patch, o._patch);
	std::swap(this->_oldData, o._oldData);
}
AppliedPatch &AppliedPatch::operator=(AppliedPatch &&o) noexcept
{
	std::swap(this->_patch, o._patch);
	std::swap(this->_oldData, o._oldData);
	return *this;
}


// murasaNOP declared in murasa.asm line 1
static unsigned char murasaNOP_byteCode[] = {
	0x90, // NOP ; line 2
};
static PatchByteCode murasaNOP_patchByteCode = { murasaNOP_byteCode, 1, nullptr, 0 };
// murasaFLDZ declared in murasa.asm line 5
static unsigned char murasaFLDZ_byteCode[] = {
	0xD9, 0xEE, // FLDZ ; line 6
};
static PatchByteCode murasaFLDZ_patchByteCode = { murasaFLDZ_byteCode, 2, nullptr, 0 };
// murasaID_FIX declared in murasa.asm line 15
static unsigned char murasaID_FIX_byteCode[] = {
	0xC7, 0x86, 0x4C, 0x03, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x34C],0x0000001F ; line 16
	0x66, 0x81, 0xBE, 0x96, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD [ESI+0x196],0x0000 ; line 18
};
static PatchByteCode murasaID_FIX_patchByteCode = { murasaID_FIX_byteCode, 19, nullptr, 0 };
// murasaATLAS_1 declared in murasa.asm line 28
static unsigned char murasaATLAS_1_byteCode[] = {
	0xD9, 0xE8, // FLD1 ; line 29
};
static PatchByteCode murasaATLAS_1_patchByteCode = { murasaATLAS_1_byteCode, 2, nullptr, 0 };
// murasaBERMUDAD22_EFF declared in murasa.asm line 33
static unsigned char murasaBERMUDAD22_EFF_byteCode[] = {
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 34
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 37
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                         // JE LABELSEQ0 ; line 38
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x03, 0x00,       // CMP WORD PTR [ESI+0x13E],0x03 ; line 39
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE LABELSEQ0 ; line 40
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x60C3B5 ; line 41
	0x60,                                                       // PUSHAD ; line 44
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 45
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 48
	0x0F, 0x85, 0x30, 0x01, 0x00, 0x00,                         // JNE LABELJ ; line 49
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 50
	0x0F, 0x85, 0x87, 0x00, 0x00, 0x00,                         // JNE LABELJ1 ; line 51
	0x8B, 0x9E, 0x98, 0x03, 0x00, 0x00,                         // MOV EBX,[ESI+0x398] ; line 53
	0x80, 0xBB, 0xA7, 0x06, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [EBX+0x6A7],0x00 ; line 54
	0x0F, 0x84, 0x2C, 0x00, 0x00, 0x00,                         // JE LABELH0 ; line 55
	0x80, 0xBB, 0xA7, 0x06, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [EBX+0x6A7],0x01 ; line 56
	0x0F, 0x84, 0x2A, 0x00, 0x00, 0x00,                         // JE LABELH1 ; line 57
	0x80, 0xBB, 0xA7, 0x06, 0x00, 0x00, 0x02,                   // CMP BYTE PTR [EBX+0x6A7],0x02 ; line 58
	0x0F, 0x84, 0x28, 0x00, 0x00, 0x00,                         // JE LABELH2 ; line 59
	0x80, 0xBB, 0xA7, 0x06, 0x00, 0x00, 0x03,                   // CMP BYTE PTR [EBX+0x6A7],0x03 ; line 60
	0x0F, 0x84, 0x26, 0x00, 0x00, 0x00,                         // JE LABELH3 ; line 61
	0xE9, 0x2C, 0x00, 0x00, 0x00,                               // JMP LABELH4 ; line 62
	0xD9, 0x05, 0x60, 0x78, 0x86, 0x00,                         // FLD DWORD PTR [0x867860] ; line 65
	0xE9, 0x2C, 0x00, 0x00, 0x00,                               // JMP SHORT LABELH ; line 66
	0xD9, 0x05, 0x70, 0xB8, 0x85, 0x00,                         // FLD DWORD PTR [0x85B870] ; line 68
	0xE9, 0x21, 0x00, 0x00, 0x00,                               // JMP SHORT LABELH ; line 69
	0xD9, 0x05, 0xA4, 0xBC, 0x85, 0x00,                         // FLD DWORD PTR [0x85BCA4] ; line 71
	0xE9, 0x16, 0x00, 0x00, 0x00,                               // JMP SHORT LABELH ; line 72
	0xD9, 0x05, 0x2C, 0x88, 0x85, 0x00,                         // FLD DWORD PTR [0x85882C] ; line 74
	0xE9, 0x0B, 0x00, 0x00, 0x00,                               // JMP SHORT LABELH ; line 75
	0xD9, 0x05, 0x10, 0x78, 0x86, 0x00,                         // FLD DWORD PTR [0x867810] ; line 77
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP SHORT LABELH ; line 78
	0xD8, 0x35, 0x2C, 0x78, 0x86, 0x00,                         // FDIV DWORD PTR [0x86782C] ; line 81
	0xD9, 0x9E, 0x1C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x11C] ; line 82
	0xE9, 0x9A, 0x00, 0x00, 0x00,                               // JMP LABELJ ; line 83
	0xD9, 0x05, 0xE8, 0xBC, 0x85, 0x00,                         // FLD DWORD PTR [0x85BCE8] ; line 86
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 87
	0xD9, 0x05, 0xA4, 0x75, 0x85, 0x00,                         // FLD DWORD PTR [0x8575A4] ; line 88
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 89
	0x8B, 0x9E, 0x98, 0x03, 0x00, 0x00,                         // MOV EBX,[ESI+0x398] ; line 91
	0x80, 0xBB, 0xA7, 0x06, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [EBX+0x6A7],0x00 ; line 92
	0x0F, 0x84, 0x2C, 0x00, 0x00, 0x00,                         // JE LABELHB0 ; line 93
	0x80, 0xBB, 0xA7, 0x06, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [EBX+0x6A7],0x01 ; line 94
	0x0F, 0x84, 0x2A, 0x00, 0x00, 0x00,                         // JE LABELHB1 ; line 95
	0x80, 0xBB, 0xA7, 0x06, 0x00, 0x00, 0x02,                   // CMP BYTE PTR [EBX+0x6A7],0x02 ; line 96
	0x0F, 0x84, 0x28, 0x00, 0x00, 0x00,                         // JE LABELHB2 ; line 97
	0x80, 0xBB, 0xA7, 0x06, 0x00, 0x00, 0x03,                   // CMP BYTE PTR [EBX+0x6A7],0x03 ; line 98
	0x0F, 0x84, 0x26, 0x00, 0x00, 0x00,                         // JE LABELHB3 ; line 99
	0xE9, 0x2C, 0x00, 0x00, 0x00,                               // JMP LABELHB4 ; line 100
	0xD9, 0x05, 0x38, 0x15, 0x87, 0x00,                         // FLD DWORD PTR [0x871538] ; line 103
	0xE9, 0x2C, 0x00, 0x00, 0x00,                               // JMP SHORT LABELHB ; line 104
	0xD9, 0x05, 0x60, 0x78, 0x86, 0x00,                         // FLD DWORD PTR [0x867860] ; line 106
	0xE9, 0x21, 0x00, 0x00, 0x00,                               // JMP SHORT LABELHB ; line 107
	0xD9, 0x05, 0x60, 0x78, 0x86, 0x00,                         // FLD DWORD PTR [0x867860] ; line 109
	0xE9, 0x16, 0x00, 0x00, 0x00,                               // JMP SHORT LABELHB ; line 110
	0xD9, 0x05, 0x60, 0x78, 0x86, 0x00,                         // FLD DWORD PTR [0x867860] ; line 112
	0xE9, 0x0B, 0x00, 0x00, 0x00,                               // JMP SHORT LABELHB ; line 113
	0xD9, 0x05, 0x70, 0xB8, 0x85, 0x00,                         // FLD DWORD PTR [0x85B870] ; line 115
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP SHORT LABELHB ; line 116
	0xD8, 0x35, 0x2C, 0x78, 0x86, 0x00,                         // FDIV DWORD PTR [0x86782C] ; line 119
	0xD9, 0x9E, 0x20, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x120] ; line 120
	0x8B, 0x89, 0x70, 0x01, 0x00, 0x00,                         // MOV ECX,[ECX+0x170] ; line 123
	0x66, 0x81, 0xB9, 0x96, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ECX+0x196],0x00 ; line 128
	0x0F, 0x85, 0x54, 0x02, 0x00, 0x00,                         // JNE LABELX ; line 129
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x06, 0x00,       // CMP WORD PTR [ECX+0x13C],0x06 ; line 132
	0x0F, 0x84, 0x27, 0x01, 0x00, 0x00,                         // JE LABELY ; line 133
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x07, 0x00,       // CMP WORD PTR [ECX+0x13C],0x07 ; line 134
	0x0F, 0x84, 0x18, 0x01, 0x00, 0x00,                         // JE LABELY ; line 135
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x08, 0x00,       // CMP WORD PTR [ECX+0x13C],0x08 ; line 136
	0x0F, 0x84, 0x09, 0x01, 0x00, 0x00,                         // JE LABELY ; line 137
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x00,       // CMP WORD PTR [ECX+0x13C],0x09 ; line 140
	0x0F, 0x84, 0xFA, 0x00, 0x00, 0x00,                         // JE LABELY ; line 141
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xCA, 0x00,       // CMP WORD PTR [ECX+0x13C],0xCA ; line 144
	0x0F, 0x84, 0xEB, 0x00, 0x00, 0x00,                         // JE LABELY ; line 145
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xCB, 0x00,       // CMP WORD PTR [ECX+0x13C],0xCB ; line 148
	0x0F, 0x84, 0xDC, 0x00, 0x00, 0x00,                         // JE LABELY ; line 149
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD0, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD0 ; line 152
	0x0F, 0x84, 0xCD, 0x00, 0x00, 0x00,                         // JE LABELY ; line 153
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD1, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD1 ; line 154
	0x0F, 0x84, 0xBE, 0x00, 0x00, 0x00,                         // JE LABELY ; line 155
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD2, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD2 ; line 156
	0x0F, 0x84, 0xAF, 0x00, 0x00, 0x00,                         // JE LABELY ; line 157
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD3, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD3 ; line 158
	0x0F, 0x84, 0xA0, 0x00, 0x00, 0x00,                         // JE LABELY ; line 159
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD4, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD4 ; line 160
	0x0F, 0x84, 0x91, 0x00, 0x00, 0x00,                         // JE LABELY ; line 161
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD6, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD6 ; line 164
	0x0F, 0x84, 0x82, 0x00, 0x00, 0x00,                         // JE LABELY ; line 165
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD9, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD9 ; line 166
	0x0F, 0x84, 0x73, 0x00, 0x00, 0x00,                         // JE LABELY ; line 167
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xDC, 0x00,       // CMP WORD PTR [ECX+0x13C],0xDC ; line 170
	0x0F, 0x84, 0x64, 0x00, 0x00, 0x00,                         // JE LABELY ; line 171
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xDD, 0x00,       // CMP WORD PTR [ECX+0x13C],0xDD ; line 172
	0x0F, 0x84, 0x55, 0x00, 0x00, 0x00,                         // JE LABELY ; line 173
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xDE, 0x00,       // CMP WORD PTR [ECX+0x13C],0xDE ; line 174
	0x0F, 0x84, 0x46, 0x00, 0x00, 0x00,                         // JE LABELY ; line 175
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xE1, 0x00,       // CMP WORD PTR [ECX+0x13C],0xE1 ; line 178
	0x0F, 0x84, 0x37, 0x00, 0x00, 0x00,                         // JE LABELY ; line 179
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xE2, 0x00,       // CMP WORD PTR [ECX+0x13C],0xE2 ; line 180
	0x0F, 0x84, 0x28, 0x00, 0x00, 0x00,                         // JE LABELY ; line 181
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x2C, 0x01,       // CMP WORD PTR [ECX+0x13C],0x12C ; line 184
	0x0F, 0x8C, 0x14, 0x00, 0x00, 0x00,                         // JL SHORT LABELV ; line 185
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xF4, 0x01,       // CMP WORD PTR [ECX+0x13C],0x1F4 ; line 186
	0x0F, 0x8D, 0x05, 0x00, 0x00, 0x00,                         // JGE SHORT LABELV ; line 187
	0xE9, 0x05, 0x00, 0x00, 0x00,                               // JMP LABELY ; line 188
	0xE9, 0x1E, 0x01, 0x00, 0x00,                               // JMP LABELX ; line 191
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 196
	0x0F, 0x85, 0x84, 0x00, 0x00, 0x00,                         // JNE LABELG ; line 197
	0xD9, 0x05, 0x10, 0x78, 0x86, 0x00,                         // FLD DWORD PTR [0x867810] ; line 201
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 204
	0xDE, 0xD9,                                                 // FCOMPP ; line 206
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 207
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 208
	0x0F, 0x85, 0xF6, 0x00, 0x00, 0x00,                         // JNE LABELX ; line 210
	0xD9, 0x81, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xEC] ; line 214
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 216
	0xDD, 0x05, 0x60, 0xD6, 0x85, 0x00,                         // FLD QWORD PTR [0x85D660] ; line 217
	0xD8, 0x8E, 0x1C, 0x01, 0x00, 0x00,                         // FMUL DWORD PTR [ESI+0x11C] ; line 218
	0xDE, 0xC1,                                                 // FADDP ; line 219
	0xDE, 0xD9,                                                 // FCOMPP ; line 221
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 222
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 223
	0x0F, 0x85, 0xCF, 0x00, 0x00, 0x00,                         // JNE LABELX ; line 225
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 228
	0xDD, 0x05, 0x60, 0xD6, 0x85, 0x00,                         // FLD QWORD PTR [0x85D660] ; line 229
	0xD8, 0x8E, 0x1C, 0x01, 0x00, 0x00,                         // FMUL DWORD PTR [ESI+0x11C] ; line 230
	0xDE, 0xE9,                                                 // FSUBP ; line 231
	0xD9, 0x81, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xEC] ; line 233
	0xDE, 0xD9,                                                 // FCOMPP ; line 235
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 236
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 237
	0x0F, 0x85, 0xA8, 0x00, 0x00, 0x00,                         // JNE LABELX ; line 239
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 242
	0xDC, 0x0D, 0x78, 0xB9, 0x85, 0x00,                         // FMUL QWORD PTR [0x85B978] ; line 243
	0xD8, 0x25, 0x38, 0x15, 0x87, 0x00,                         // FSUB DWORD PTR [0x871538] ; line 244
	0xD9, 0x99, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ECX+0xF0] ; line 245
	0xE9, 0x8B, 0x00, 0x00, 0x00,                               // JMP LABELX ; line 246
	0xD9, 0x05, 0x10, 0x78, 0x86, 0x00,                         // FLD DWORD PTR [0x867810] ; line 253
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 256
	0xDE, 0xD9,                                                 // FCOMPP ; line 258
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 259
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 260
	0x0F, 0x85, 0x72, 0x00, 0x00, 0x00,                         // JNE LABELX ; line 262
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 266
	0xD8, 0x05, 0x44, 0x15, 0x87, 0x00,                         // FADD DWORD PTR [0x871544] ; line 267
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 269
	0xDD, 0x05, 0x60, 0xD6, 0x85, 0x00,                         // FLD QWORD PTR [0x85D660] ; line 270
	0xD8, 0x8E, 0x20, 0x01, 0x00, 0x00,                         // FMUL DWORD PTR [ESI+0x120] ; line 271
	0xDE, 0xC1,                                                 // FADDP ; line 272
	0xDE, 0xD9,                                                 // FCOMPP ; line 274
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 275
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 276
	0x0F, 0x85, 0x45, 0x00, 0x00, 0x00,                         // JNE LABELX ; line 278
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 281
	0xDD, 0x05, 0x60, 0xD6, 0x85, 0x00,                         // FLD QWORD PTR [0x85D660] ; line 282
	0xD8, 0x8E, 0x20, 0x01, 0x00, 0x00,                         // FMUL DWORD PTR [ESI+0x120] ; line 283
	0xDE, 0xE9,                                                 // FSUBP ; line 284
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 286
	0xD8, 0x05, 0x44, 0x15, 0x87, 0x00,                         // FADD DWORD PTR [0x871544] ; line 287
	0xDE, 0xD9,                                                 // FCOMPP ; line 289
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 290
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 291
	0x0F, 0x85, 0x18, 0x00, 0x00, 0x00,                         // JNE LABELX ; line 293
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 296
	0xDC, 0x0D, 0x78, 0xB9, 0x85, 0x00,                         // FMUL QWORD PTR [0x85B978] ; line 297
	0xD8, 0x25, 0x38, 0x15, 0x87, 0x00,                         // FSUB DWORD PTR [0x871538] ; line 298
	0xD9, 0x99, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ECX+0xF0] ; line 299
	0x61,                                                       // POPAD ; line 302
	0x60,                                                       // PUSHAD ; line 326
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x0A ; line 327
	0x0F, 0x8D, 0x26, 0x00, 0x00, 0x00,                         // JGE SHORT LABELM1 ; line 328
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x144] ; line 329
	0x6B, 0xC0, 0x19,                                           // IMUL EAX,0x19 ; line 330
	0x88, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],AL ; line 331
	0x88, 0x86, 0x12, 0x01, 0x00, 0x00,                         // MOV [ESI+0x112],AL ; line 332
	0x88, 0x86, 0x11, 0x01, 0x00, 0x00,                         // MOV [ESI+0x111],AL ; line 333
	0x88, 0x86, 0x10, 0x01, 0x00, 0x00,                         // MOV [ESI+0x110],AL ; line 334
	0xE9, 0x7D, 0x00, 0x00, 0x00,                               // JMP SHORT LABELT ; line 335
	0xC6, 0x86, 0x13, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x113],0xFF ; line 337
	0xC6, 0x86, 0x12, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x112],0xFF ; line 338
	0xC6, 0x86, 0x11, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x111],0xFF ; line 339
	0xC6, 0x86, 0x10, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x110],0xFF ; line 340
	0x61,                                                       // POPAD ; line 342
	0x60,                                                       // PUSHAD ; line 346
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0xE6, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0xE6 ; line 347
	0x0F, 0x8C, 0x33, 0x00, 0x00, 0x00,                         // JL SHORT LABELM ; line 348
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x144] ; line 349
	0x81, 0xE8, 0xE6, 0x00, 0x00, 0x00,                         // SUB EAX,0xE6 ; line 350
	0xB9, 0x0A, 0x00, 0x00, 0x00,                               // MOV ECX,0xA ; line 351
	0x29, 0xC1,                                                 // SUB ECX,EAX ; line 352
	0x6B, 0xC9, 0x19,                                           // IMUL ECX,0x19 ; line 353
	0x88, 0x8E, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],CL ; line 354
	0x88, 0x8E, 0x12, 0x01, 0x00, 0x00,                         // MOV [ESI+0x112],CL ; line 355
	0x88, 0x8E, 0x11, 0x01, 0x00, 0x00,                         // MOV [ESI+0x111],CL ; line 356
	0x88, 0x8E, 0x10, 0x01, 0x00, 0x00,                         // MOV [ESI+0x110],CL ; line 357
	0xE9, 0x1C, 0x00, 0x00, 0x00,                               // JMP SHORT LABELT ; line 358
	0xC6, 0x86, 0x13, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x113],0xFF ; line 360
	0xC6, 0x86, 0x12, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x112],0xFF ; line 361
	0xC6, 0x86, 0x11, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x111],0xFF ; line 362
	0xC6, 0x86, 0x10, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x110],0xFF ; line 363
	0x61,                                                       // POPAD ; line 365
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0xF0, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0xF0 ; line 367
	0x0F, 0x8D, 0xDE, 0xAD, 0xBE, 0xEF,                         // JGE 0x60C3B5 ; line 368
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 369
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                         // JE SHORT LABELSEQ ; line 370
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x03, 0x00,       // CMP WORD PTR [ESI+0x13E],0x03 ; line 371
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE SHORT LABELSEQ ; line 372
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x60C3B5 ; line 373
	0x60,                                                       // PUSHAD ; line 375
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 376
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x30, 0x02,       // CMP WORD PTR[ECX+0x13C],0x230 ; line 377
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                         // JE SHORT LABEL1 ; line 378
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x31, 0x02,       // CMP WORD PTR[ECX+0x13C],0x231 ; line 379
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE SHORT LABEL1 ; line 380
	0xE9, 0x43, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL2 ; line 381
	0x66, 0x81, 0xB9, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ECX+0x13E],0x00 ; line 383
	0x0F, 0x85, 0x34, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 384
	0x66, 0x81, 0xB9, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ECX+0x140],0x00 ; line 385
	0x0F, 0x85, 0x25, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 386
	0x66, 0x81, 0xB9, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ECX+0x142],0x00 ; line 387
	0x0F, 0x85, 0x16, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 388
	0x81, 0xB9, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x144],0x00 ; line 389
	0x0F, 0x85, 0x06, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 390
	0x61,                                                       // POPAD ; line 391
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x60C3B5 ; line 392
	0x61,                                                       // POPAD ; line 394
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x612841 ; line 395
};
static JumpTarget murasaBERMUDAD22_EFF_jumpData[] = {
	{ 0x021, 0x60C3B5 },
	{ 0x497, 0x60C3B5 },
	{ 0x4BA, 0x60C3B5 },
	{ 0x527, 0x60C3B5 },
	{ 0x52D, 0x612841 },
};
static PatchByteCode murasaBERMUDAD22_EFF_patchByteCode = { murasaBERMUDAD22_EFF_byteCode, 1329, murasaBERMUDAD22_EFF_jumpData, 5 };
// murasaBERMUDAD22B declared in murasa.asm line 399
static unsigned char murasaBERMUDAD22B_byteCode[] = {
	0x6A, 0x01, // PUSH 0x01 ; line 402
	0xD9, 0xEE, // FLDZ ; line 403
	0x89, 0xF1, // MOV ECX,ESI ; line 404
};
static PatchByteCode murasaBERMUDAD22B_patchByteCode = { murasaBERMUDAD22B_byteCode, 6, nullptr, 0 };
// murasaBERMUDAD22C declared in murasa.asm line 406
static unsigned char murasaBERMUDAD22C_byteCode[] = {
	0x6A, 0x01,                         // PUSH 0x01 ; line 409
	0xD9, 0x05, 0x38, 0x15, 0x87, 0x00, // FLD DWORD PTR [0x871538] ; line 410
	0x89, 0xF1,                         // MOV ECX,ESI ; line 411
};
static PatchByteCode murasaBERMUDAD22C_patchByteCode = { murasaBERMUDAD22C_byteCode, 10, nullptr, 0 };
// murasaBERMUDAD22_SOUND declared in murasa.asm line 416
static unsigned char murasaBERMUDAD22_SOUND_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x13E],0x00 ; line 417
	0x0F, 0x85, 0x27, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 418
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x04, 0x00, // CMP WORD PTR [ESI+0x140],0x04 ; line 419
	0x0F, 0x85, 0x18, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 420
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x00 ; line 421
	0x0F, 0x85, 0x09, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 422
	0x6A, 0x0E,                                           // PUSH 0x0E ; line 424
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 425
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x464980 ; line 426
	0xC6, 0x86, 0x8C, 0x01, 0x00, 0x00, 0x03,             // MOV BYTE PTR [ESI+0x18C],0x03 ; line 429
};
static JumpTarget murasaBERMUDAD22_SOUND_jumpData[] = {
	{ 0x032, 0x464980 },
};
static PatchByteCode murasaBERMUDAD22_SOUND_patchByteCode = { murasaBERMUDAD22_SOUND_byteCode, 61, murasaBERMUDAD22_SOUND_jumpData, 1 };
// murasaBERMUDA3_EFF declared in murasa.asm line 434
static unsigned char murasaBERMUDA3_EFF_byteCode[] = {
	0x60,                                                       // PUSHAD ; line 436
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 437
	0x8B, 0x89, 0x70, 0x01, 0x00, 0x00,                         // MOV ECX,[ECX+0x170] ; line 438
	0x66, 0x81, 0xB9, 0x96, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ECX+0x196],0x00 ; line 440
	0x0F, 0x85, 0xA5, 0x01, 0x00, 0x00,                         // JNE LABELX ; line 441
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x06, 0x00,       // CMP WORD PTR [ECX+0x13C],0x06 ; line 444
	0x0F, 0x84, 0x27, 0x01, 0x00, 0x00,                         // JE LABELY ; line 445
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x07, 0x00,       // CMP WORD PTR [ECX+0x13C],0x07 ; line 446
	0x0F, 0x84, 0x18, 0x01, 0x00, 0x00,                         // JE LABELY ; line 447
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x08, 0x00,       // CMP WORD PTR [ECX+0x13C],0x08 ; line 448
	0x0F, 0x84, 0x09, 0x01, 0x00, 0x00,                         // JE LABELY ; line 449
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x00,       // CMP WORD PTR [ECX+0x13C],0x09 ; line 452
	0x0F, 0x84, 0xFA, 0x00, 0x00, 0x00,                         // JE LABELY ; line 453
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xCA, 0x00,       // CMP WORD PTR [ECX+0x13C],0xCA ; line 456
	0x0F, 0x84, 0xEB, 0x00, 0x00, 0x00,                         // JE LABELY ; line 457
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xCB, 0x00,       // CMP WORD PTR [ECX+0x13C],0xCB ; line 460
	0x0F, 0x84, 0xDC, 0x00, 0x00, 0x00,                         // JE LABELY ; line 461
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD0, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD0 ; line 464
	0x0F, 0x84, 0xCD, 0x00, 0x00, 0x00,                         // JE LABELY ; line 465
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD1, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD1 ; line 466
	0x0F, 0x84, 0xBE, 0x00, 0x00, 0x00,                         // JE LABELY ; line 467
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD2, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD2 ; line 468
	0x0F, 0x84, 0xAF, 0x00, 0x00, 0x00,                         // JE LABELY ; line 469
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD3, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD3 ; line 470
	0x0F, 0x84, 0xA0, 0x00, 0x00, 0x00,                         // JE LABELY ; line 471
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD4, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD4 ; line 472
	0x0F, 0x84, 0x91, 0x00, 0x00, 0x00,                         // JE LABELY ; line 473
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD6, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD6 ; line 476
	0x0F, 0x84, 0x82, 0x00, 0x00, 0x00,                         // JE LABELY ; line 477
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD9, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD9 ; line 478
	0x0F, 0x84, 0x73, 0x00, 0x00, 0x00,                         // JE LABELY ; line 479
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xDC, 0x00,       // CMP WORD PTR [ECX+0x13C],0xDC ; line 482
	0x0F, 0x84, 0x64, 0x00, 0x00, 0x00,                         // JE LABELY ; line 483
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xDD, 0x00,       // CMP WORD PTR [ECX+0x13C],0xDD ; line 484
	0x0F, 0x84, 0x55, 0x00, 0x00, 0x00,                         // JE LABELY ; line 485
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xDE, 0x00,       // CMP WORD PTR [ECX+0x13C],0xDE ; line 486
	0x0F, 0x84, 0x46, 0x00, 0x00, 0x00,                         // JE LABELY ; line 487
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xE1, 0x00,       // CMP WORD PTR [ECX+0x13C],0xE1 ; line 490
	0x0F, 0x84, 0x37, 0x00, 0x00, 0x00,                         // JE LABELY ; line 491
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xE2, 0x00,       // CMP WORD PTR [ECX+0x13C],0xE2 ; line 492
	0x0F, 0x84, 0x28, 0x00, 0x00, 0x00,                         // JE LABELY ; line 493
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x2C, 0x01,       // CMP WORD PTR [ECX+0x13C],0x12C ; line 496
	0x0F, 0x8C, 0x14, 0x00, 0x00, 0x00,                         // JL SHORT LABELV ; line 497
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xF4, 0x01,       // CMP WORD PTR [ECX+0x13C],0x1F4 ; line 498
	0x0F, 0x8D, 0x05, 0x00, 0x00, 0x00,                         // JGE SHORT LABELV ; line 499
	0xE9, 0x05, 0x00, 0x00, 0x00,                               // JMP LABELY ; line 500
	0xE9, 0x6F, 0x00, 0x00, 0x00,                               // JMP LABELX ; line 503
	0xD9, 0x05, 0x10, 0x78, 0x86, 0x00,                         // FLD DWORD PTR [0x867810] ; line 510
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 513
	0xDE, 0xD9,                                                 // FCOMPP ; line 515
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 516
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 517
	0x0F, 0x85, 0x56, 0x00, 0x00, 0x00,                         // JNE LABELX ; line 519
	0xD9, 0x81, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xEC] ; line 523
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 525
	0xDC, 0x05, 0x60, 0xD6, 0x85, 0x00,                         // FADD QWORD PTR [0x85D660] ; line 526
	0xDE, 0xD9,                                                 // FCOMPP ; line 528
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 529
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 530
	0x0F, 0x85, 0x37, 0x00, 0x00, 0x00,                         // JNE LABELX ; line 532
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 535
	0xDC, 0x25, 0x60, 0xD6, 0x85, 0x00,                         // FSUB QWORD PTR [0x85D660] ; line 536
	0xD9, 0x81, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xEC] ; line 538
	0xDE, 0xD9,                                                 // FCOMPP ; line 540
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 541
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 542
	0x0F, 0x85, 0x18, 0x00, 0x00, 0x00,                         // JNE LABELX ; line 544
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 547
	0xDC, 0x0D, 0x78, 0xB9, 0x85, 0x00,                         // FMUL QWORD PTR [0x85B978] ; line 548
	0xD8, 0x25, 0x38, 0x15, 0x87, 0x00,                         // FSUB DWORD PTR [0x871538] ; line 549
	0xD9, 0x99, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ECX+0xF0] ; line 550
	0x61,                                                       // POPAD ; line 553
	0x60,                                                       // PUSHAD ; line 556
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 557
	0x0F, 0x85, 0x08, 0x00, 0x00, 0x00,                         // JNE SIZE3 ; line 558
	0xD9, 0xEE,                                                 // FLDZ ; line 559
	0xD9, 0x9E, 0x1C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x11C] ; line 560
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0xA ; line 562
	0x0F, 0x8D, 0x17, 0x00, 0x00, 0x00,                         // JGE SIZE1 ; line 563
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x11C] ; line 565
	0xD8, 0x05, 0x14, 0xAD, 0x85, 0x00,                         // FADD DWORD PTR [0x85AD14] ; line 566
	0xD9, 0x9E, 0x1C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x11C] ; line 567
	0xE9, 0x08, 0x00, 0x00, 0x00,                               // JMP SIZE2 ; line 568
	0xD9, 0xE8,                                                 // FLD1 ; line 571
	0xD9, 0x9E, 0x1C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x11C] ; line 572
	0x61,                                                       // POPAD ; line 574
	0x60,                                                       // PUSHAD ; line 577
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x4E, 0x02, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x24E ; line 578
	0x0F, 0x8C, 0x33, 0x00, 0x00, 0x00,                         // JL SHORT LABELM ; line 579
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x144] ; line 580
	0x81, 0xE8, 0x4E, 0x02, 0x00, 0x00,                         // SUB EAX,0x24E ; line 581
	0xB9, 0x0A, 0x00, 0x00, 0x00,                               // MOV ECX,0xA ; line 582
	0x29, 0xC1,                                                 // SUB ECX,EAX ; line 583
	0x6B, 0xC9, 0x19,                                           // IMUL ECX,0x19 ; line 584
	0x88, 0x8E, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],CL ; line 585
	0x88, 0x8E, 0x12, 0x01, 0x00, 0x00,                         // MOV [ESI+0x112],CL ; line 586
	0x88, 0x8E, 0x11, 0x01, 0x00, 0x00,                         // MOV [ESI+0x111],CL ; line 587
	0x88, 0x8E, 0x10, 0x01, 0x00, 0x00,                         // MOV [ESI+0x110],CL ; line 588
	0xE9, 0x1C, 0x00, 0x00, 0x00,                               // JMP SHORT LABELT ; line 589
	0xC6, 0x86, 0x13, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x113],0xFF ; line 591
	0xC6, 0x86, 0x12, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x112],0xFF ; line 592
	0xC6, 0x86, 0x11, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x111],0xFF ; line 593
	0xC6, 0x86, 0x10, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x110],0xFF ; line 594
	0x61,                                                       // POPAD ; line 596
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x258 ; line 598
	0x0F, 0x8D, 0xDE, 0xAD, 0xBE, 0xEF,                         // JGE 0x60C3B5 ; line 599
	0x60,                                                       // PUSHAD ; line 600
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 601
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x59, 0x02,       // CMP WORD PTR[ECX+0x13C],0x259 ; line 602
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                         // JE SHORT LABEL1 ; line 603
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x5C, 0x02,       // CMP WORD PTR[ECX+0x13C],0x25C ; line 604
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE SHORT LABEL1 ; line 605
	0xE9, 0x43, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL2 ; line 606
	0x66, 0x81, 0xB9, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ECX+0x13E],0x00 ; line 608
	0x0F, 0x85, 0x34, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 609
	0x66, 0x81, 0xB9, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ECX+0x140],0x00 ; line 610
	0x0F, 0x85, 0x25, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 611
	0x66, 0x81, 0xB9, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ECX+0x142],0x00 ; line 612
	0x0F, 0x85, 0x16, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 613
	0x81, 0xB9, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x144],0x00 ; line 614
	0x0F, 0x85, 0x06, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 615
	0x61,                                                       // POPAD ; line 616
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x60C3B5 ; line 617
	0x61,                                                       // POPAD ; line 619
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x612841 ; line 620
};
static JumpTarget murasaBERMUDA3_EFF_jumpData[] = {
	{ 0x278, 0x60C3B5 },
	{ 0x2E5, 0x60C3B5 },
	{ 0x2EB, 0x612841 },
};
static PatchByteCode murasaBERMUDA3_EFF_patchByteCode = { murasaBERMUDA3_EFF_byteCode, 751, murasaBERMUDA3_EFF_jumpData, 3 };
// murasaBERMUDA5_EFF declared in murasa.asm line 624
static unsigned char murasaBERMUDA5_EFF_byteCode[] = {
	0x60,                                                       // PUSHAD ; line 626
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 627
	0x8B, 0x89, 0x70, 0x01, 0x00, 0x00,                         // MOV ECX,[ECX+0x170] ; line 628
	0x66, 0x81, 0xB9, 0x96, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ECX+0x196],0x00 ; line 630
	0x0F, 0x85, 0x67, 0x01, 0x00, 0x00,                         // JNE LABELX ; line 631
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x06, 0x00,       // CMP WORD PTR [ECX+0x13C],0x06 ; line 634
	0x0F, 0x84, 0x27, 0x01, 0x00, 0x00,                         // JE LABELY ; line 635
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x07, 0x00,       // CMP WORD PTR [ECX+0x13C],0x07 ; line 636
	0x0F, 0x84, 0x18, 0x01, 0x00, 0x00,                         // JE LABELY ; line 637
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x08, 0x00,       // CMP WORD PTR [ECX+0x13C],0x08 ; line 638
	0x0F, 0x84, 0x09, 0x01, 0x00, 0x00,                         // JE LABELY ; line 639
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x00,       // CMP WORD PTR [ECX+0x13C],0x09 ; line 642
	0x0F, 0x84, 0xFA, 0x00, 0x00, 0x00,                         // JE LABELY ; line 643
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xCA, 0x00,       // CMP WORD PTR [ECX+0x13C],0xCA ; line 646
	0x0F, 0x84, 0xEB, 0x00, 0x00, 0x00,                         // JE LABELY ; line 647
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xCB, 0x00,       // CMP WORD PTR [ECX+0x13C],0xCB ; line 650
	0x0F, 0x84, 0xDC, 0x00, 0x00, 0x00,                         // JE LABELY ; line 651
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD0, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD0 ; line 654
	0x0F, 0x84, 0xCD, 0x00, 0x00, 0x00,                         // JE LABELY ; line 655
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD1, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD1 ; line 656
	0x0F, 0x84, 0xBE, 0x00, 0x00, 0x00,                         // JE LABELY ; line 657
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD2, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD2 ; line 658
	0x0F, 0x84, 0xAF, 0x00, 0x00, 0x00,                         // JE LABELY ; line 659
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD3, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD3 ; line 660
	0x0F, 0x84, 0xA0, 0x00, 0x00, 0x00,                         // JE LABELY ; line 661
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD4, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD4 ; line 662
	0x0F, 0x84, 0x91, 0x00, 0x00, 0x00,                         // JE LABELY ; line 663
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD6, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD6 ; line 666
	0x0F, 0x84, 0x82, 0x00, 0x00, 0x00,                         // JE LABELY ; line 667
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xD9, 0x00,       // CMP WORD PTR [ECX+0x13C],0xD9 ; line 668
	0x0F, 0x84, 0x73, 0x00, 0x00, 0x00,                         // JE LABELY ; line 669
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xDC, 0x00,       // CMP WORD PTR [ECX+0x13C],0xDC ; line 672
	0x0F, 0x84, 0x64, 0x00, 0x00, 0x00,                         // JE LABELY ; line 673
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xDD, 0x00,       // CMP WORD PTR [ECX+0x13C],0xDD ; line 674
	0x0F, 0x84, 0x55, 0x00, 0x00, 0x00,                         // JE LABELY ; line 675
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xDE, 0x00,       // CMP WORD PTR [ECX+0x13C],0xDE ; line 676
	0x0F, 0x84, 0x46, 0x00, 0x00, 0x00,                         // JE LABELY ; line 677
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xE1, 0x00,       // CMP WORD PTR [ECX+0x13C],0xE1 ; line 680
	0x0F, 0x84, 0x37, 0x00, 0x00, 0x00,                         // JE LABELY ; line 681
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xE2, 0x00,       // CMP WORD PTR [ECX+0x13C],0xE2 ; line 682
	0x0F, 0x84, 0x28, 0x00, 0x00, 0x00,                         // JE LABELY ; line 683
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x2C, 0x01,       // CMP WORD PTR [ECX+0x13C],0x12C ; line 686
	0x0F, 0x8C, 0x14, 0x00, 0x00, 0x00,                         // JL SHORT LABELV ; line 687
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0xF4, 0x01,       // CMP WORD PTR [ECX+0x13C],0x1F4 ; line 688
	0x0F, 0x8D, 0x05, 0x00, 0x00, 0x00,                         // JGE SHORT LABELV ; line 689
	0xE9, 0x05, 0x00, 0x00, 0x00,                               // JMP LABELY ; line 690
	0xE9, 0x31, 0x00, 0x00, 0x00,                               // JMP LABELX ; line 693
	0xD9, 0x05, 0x10, 0x78, 0x86, 0x00,                         // FLD DWORD PTR [0x867810] ; line 699
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 701
	0xDE, 0xD9,                                                 // FCOMPP ; line 703
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 704
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 705
	0x0F, 0x85, 0x18, 0x00, 0x00, 0x00,                         // JNE LABELX ; line 707
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 710
	0xDC, 0x0D, 0x78, 0xB9, 0x85, 0x00,                         // FMUL QWORD PTR [0x85B978] ; line 711
	0xD8, 0x25, 0x38, 0x15, 0x87, 0x00,                         // FSUB DWORD PTR [0x871538] ; line 712
	0xD9, 0x99, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ECX+0xF0] ; line 713
	0x61,                                                       // POPAD ; line 716
	0x60,                                                       // PUSHAD ; line 719
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 720
	0x0F, 0x85, 0x08, 0x00, 0x00, 0x00,                         // JNE SIZE3 ; line 721
	0xD9, 0xEE,                                                 // FLDZ ; line 722
	0xD9, 0x9E, 0x1C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x11C] ; line 723
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0xA ; line 725
	0x0F, 0x8D, 0x17, 0x00, 0x00, 0x00,                         // JGE SIZE1 ; line 726
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x11C] ; line 728
	0xD8, 0x05, 0x14, 0xAD, 0x85, 0x00,                         // FADD DWORD PTR [0x85AD14] ; line 729
	0xD9, 0x9E, 0x1C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x11C] ; line 730
	0xE9, 0x08, 0x00, 0x00, 0x00,                               // JMP SIZE2 ; line 731
	0xD9, 0xE8,                                                 // FLD1 ; line 734
	0xD9, 0x9E, 0x1C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x11C] ; line 735
	0x61,                                                       // POPAD ; line 737
	0x60,                                                       // PUSHAD ; line 740
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x4E, 0x02, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x24E ; line 741
	0x0F, 0x8C, 0x33, 0x00, 0x00, 0x00,                         // JL SHORT LABELM ; line 742
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x144] ; line 743
	0x81, 0xE8, 0x4E, 0x02, 0x00, 0x00,                         // SUB EAX,0x24E ; line 744
	0xB9, 0x0A, 0x00, 0x00, 0x00,                               // MOV ECX,0xA ; line 745
	0x29, 0xC1,                                                 // SUB ECX,EAX ; line 746
	0x6B, 0xC9, 0x19,                                           // IMUL ECX,0x19 ; line 747
	0x88, 0x8E, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],CL ; line 748
	0x88, 0x8E, 0x12, 0x01, 0x00, 0x00,                         // MOV [ESI+0x112],CL ; line 749
	0x88, 0x8E, 0x11, 0x01, 0x00, 0x00,                         // MOV [ESI+0x111],CL ; line 750
	0x88, 0x8E, 0x10, 0x01, 0x00, 0x00,                         // MOV [ESI+0x110],CL ; line 751
	0xE9, 0x1C, 0x00, 0x00, 0x00,                               // JMP SHORT LABELT ; line 752
	0xC6, 0x86, 0x13, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x113],0xFF ; line 754
	0xC6, 0x86, 0x12, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x112],0xFF ; line 755
	0xC6, 0x86, 0x11, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x111],0xFF ; line 756
	0xC6, 0x86, 0x10, 0x01, 0x00, 0x00, 0xFF,                   // MOV BYTE PTR [ESI+0x110],0xFF ; line 757
	0x61,                                                       // POPAD ; line 759
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x58, 0x02, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x258 ; line 761
	0x0F, 0x8D, 0xDE, 0xAD, 0xBE, 0xEF,                         // JGE 0x60C3B5 ; line 762
	0x60,                                                       // PUSHAD ; line 763
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 764
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x59, 0x02,       // CMP WORD PTR[ECX+0x13C],0x259 ; line 765
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                         // JE SHORT LABEL1 ; line 766
	0x66, 0x81, 0xB9, 0x3C, 0x01, 0x00, 0x00, 0x5C, 0x02,       // CMP WORD PTR[ECX+0x13C],0x25C ; line 767
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE SHORT LABEL1 ; line 768
	0xE9, 0x43, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL2 ; line 769
	0x66, 0x81, 0xB9, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ECX+0x13E],0x00 ; line 771
	0x0F, 0x85, 0x34, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 772
	0x66, 0x81, 0xB9, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ECX+0x140],0x00 ; line 773
	0x0F, 0x85, 0x25, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 774
	0x66, 0x81, 0xB9, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ECX+0x142],0x00 ; line 775
	0x0F, 0x85, 0x16, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 776
	0x81, 0xB9, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x144],0x00 ; line 777
	0x0F, 0x85, 0x06, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 778
	0x61,                                                       // POPAD ; line 779
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x60C3B5 ; line 780
	0x61,                                                       // POPAD ; line 782
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x612841 ; line 783
};
static JumpTarget murasaBERMUDA5_EFF_jumpData[] = {
	{ 0x23A, 0x60C3B5 },
	{ 0x2A7, 0x60C3B5 },
	{ 0x2AD, 0x612841 },
};
static PatchByteCode murasaBERMUDA5_EFF_patchByteCode = { murasaBERMUDA5_EFF_byteCode, 689, murasaBERMUDA5_EFF_jumpData, 3 };
// murasaBERMUDA5_1 declared in murasa.asm line 787
static unsigned char murasaBERMUDA5_1_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x5FE931 ; line 788
};
static JumpTarget murasaBERMUDA5_1_jumpData[] = {
	{ 0x001, 0x5FE931 },
};
static PatchByteCode murasaBERMUDA5_1_patchByteCode = { murasaBERMUDA5_1_byteCode, 5, murasaBERMUDA5_1_jumpData, 1 };
// murasaBERMUDA3_1 declared in murasa.asm line 791
static unsigned char murasaBERMUDA3_1_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x5FD870 ; line 792
};
static JumpTarget murasaBERMUDA3_1_jumpData[] = {
	{ 0x001, 0x5FD870 },
};
static PatchByteCode murasaBERMUDA3_1_patchByteCode = { murasaBERMUDA3_1_byteCode, 5, murasaBERMUDA3_1_jumpData, 1 };
// murasaBERMUDA5_2 declared in murasa.asm line 795
static unsigned char murasaBERMUDA5_2_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x5FECBF ; line 796
};
static JumpTarget murasaBERMUDA5_2_jumpData[] = {
	{ 0x001, 0x5FECBF },
};
static PatchByteCode murasaBERMUDA5_2_patchByteCode = { murasaBERMUDA5_2_byteCode, 5, murasaBERMUDA5_2_jumpData, 1 };
// murasaBERMUDA3_2 declared in murasa.asm line 799
static unsigned char murasaBERMUDA3_2_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x5FDB86 ; line 800
};
static JumpTarget murasaBERMUDA3_2_jumpData[] = {
	{ 0x001, 0x5FDB86 },
};
static PatchByteCode murasaBERMUDA3_2_patchByteCode = { murasaBERMUDA3_2_byteCode, 5, murasaBERMUDA3_2_jumpData, 1 };
// murasaBERMUDA5_3 declared in murasa.asm line 803
static unsigned char murasaBERMUDA5_3_byteCode[] = {
	0x66, 0xC7, 0x86, 0x90, 0x08, 0x00, 0x00, 0x00, 0x00, // MOV WORD PTR [ESI+0x890],0x0000 ; line 804
};
static PatchByteCode murasaBERMUDA5_3_patchByteCode = { murasaBERMUDA5_3_byteCode, 9, nullptr, 0 };
// murasaBERMUDA5_4 declared in murasa.asm line 807
static unsigned char murasaBERMUDA5_4_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x5FE8CD ; line 808
};
static JumpTarget murasaBERMUDA5_4_jumpData[] = {
	{ 0x001, 0x5FE8CD },
};
static PatchByteCode murasaBERMUDA5_4_patchByteCode = { murasaBERMUDA5_4_byteCode, 5, murasaBERMUDA5_4_jumpData, 1 };
// murasaBERMUDA3_4 declared in murasa.asm line 811
static unsigned char murasaBERMUDA3_4_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x5FD80C ; line 812
};
static JumpTarget murasaBERMUDA3_4_jumpData[] = {
	{ 0x001, 0x5FD80C },
};
static PatchByteCode murasaBERMUDA3_4_patchByteCode = { murasaBERMUDA3_4_byteCode, 5, murasaBERMUDA3_4_jumpData, 1 };
// murasaBERMUDA5_CENTER declared in murasa.asm line 815
static unsigned char murasaBERMUDA5_CENTER_byteCode[] = {
	0xD9, 0x05, 0xA4, 0x75, 0x85, 0x00, // FLD DWORD PTR [0x8575A4] ; line 817
};
static PatchByteCode murasaBERMUDA5_CENTER_patchByteCode = { murasaBERMUDA5_CENTER_byteCode, 6, nullptr, 0 };
// murasaBERMUDA5_SHAKE declared in murasa.asm line 836
static unsigned char murasaBERMUDA5_SHAKE_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x13E],0x00 ; line 837
	0x0F, 0x84, 0x18, 0x00, 0x00, 0x00,                   // JE SHORT LABEL2 ; line 838
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x00 ; line 839
	0x0F, 0x85, 0x09, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL2 ; line 840
	0x6A, 0x38,                                           // PUSH 0x38 ; line 841
	0x89, 0xF1,                                           // MOV ECX, ESI ; line 842
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x464980 ; line 843
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x13E],0x00 ; line 845
	0x0F, 0x84, 0x30, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 846
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x03, 0x00, // CMP WORD PTR [ESI+0x13E],0x03 ; line 847
	0x0F, 0x8D, 0x21, 0x00, 0x00, 0x00,                   // JGE SHORT LABEL1 ; line 848
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x00 ; line 849
	0x0F, 0x85, 0x12, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 850
	0xD9, 0x05, 0x10, 0xC6, 0x85, 0x00,                   // FLD DWORD PTR [0x85C610] ; line 852
	0x6A, 0x00,                                           // PUSH 0x00 ; line 853
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 854
	0xD9, 0x1C, 0x24,                                     // FSTP DWORD PTR [ESP] ; line 855
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x439470 ; line 856
	0x66, 0x39, 0xBE, 0x3E, 0x01, 0x00, 0x00,             // CMP [ESI+0x13E],DI ; line 859
};
static JumpTarget murasaBERMUDA5_SHAKE_jumpData[] = {
	{ 0x023, 0x464980 },
	{ 0x062, 0x439470 },
};
static PatchByteCode murasaBERMUDA5_SHAKE_patchByteCode = { murasaBERMUDA5_SHAKE_byteCode, 109, murasaBERMUDA5_SHAKE_jumpData, 2 };
// murasaFLIGHT declared in murasa.asm line 863
static unsigned char murasaFLIGHT_byteCode[] = {
	0xDD, 0x05, 0x20, 0x15, 0x87, 0x00, // FLD QWORD PTR [0x871520] ; line 864
};
static PatchByteCode murasaFLIGHT_patchByteCode = { murasaFLIGHT_byteCode, 6, nullptr, 0 };
// murasaA22_DUR declared in murasa.asm line 868
static unsigned char murasaA22_DUR_byteCode[] = {
	0xD9, 0xEE,                                                 // FLDZ ; line 869
	0xD9, 0x9E, 0xF8, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF8] ; line 870
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 871
	0x0F, 0x85, 0x12, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 872
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF4] ; line 873
	0xD8, 0x35, 0x60, 0x78, 0x86, 0x00,                         // FDIV DWORD PTR [0x867860] ; line 874
	0xD9, 0x9E, 0xF4, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF4] ; line 875
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x3C ; line 877
};
static PatchByteCode murasaA22_DUR_patchByteCode = { murasaA22_DUR_byteCode, 52, nullptr, 0 };
// murasaA623_DUR declared in murasa.asm line 881
static unsigned char murasaA623_DUR_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x78 ; line 882
};
static PatchByteCode murasaA623_DUR_patchByteCode = { murasaA623_DUR_byteCode, 10, nullptr, 0 };
// murasaA623_FLAG declared in murasa.asm line 886
static unsigned char murasaA623_FLAG_byteCode[] = {
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 887
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 888
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x487CA0 ; line 889
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x01 ; line 890
};
static JumpTarget murasaA623_FLAG_jumpData[] = {
	{ 0x005, 0x487CA0 },
};
static PatchByteCode murasaA623_FLAG_patchByteCode = { murasaA623_FLAG_byteCode, 19, murasaA623_FLAG_jumpData, 1 };
// murasaA236_POP declared in murasa.asm line 895
static unsigned char murasaA236_POP_byteCode[] = {
	0xD9, 0x05, 0xB0, 0xC8, 0x85, 0x00, // FLD DWORD PTR [0x85C8B0] ; line 896
};
static PatchByteCode murasaA236_POP_patchByteCode = { murasaA236_POP_byteCode, 6, nullptr, 0 };
// murasaD623_EFF declared in murasa.asm line 901
static unsigned char murasaD623_EFF_byteCode[] = {
	0x60,                                                       // PUSHAD ; line 902
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 903
	0x0F, 0x84, 0x23, 0x00, 0x00, 0x00,                         // JE LABEL0 ; line 904
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x03, 0x00,       // CMP WORD PTR [ESI+0x13E],0x03 ; line 905
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                         // JE LABEL0 ; line 906
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x04, 0x00,       // CMP WORD PTR [ESI+0x13E],0x04 ; line 907
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE LABEL0 ; line 908
	0xE9, 0xB0, 0x00, 0x00, 0x00,                               // JMP LABEL1 ; line 909
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 912
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x08, 0x02,       // CMP WORD PTR [EAX+0x13C],0x208 ; line 913
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                         // JE LABEL2 ; line 914
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x02,       // CMP WORD PTR [EAX+0x13C],0x209 ; line 915
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE LABEL2 ; line 916
	0xE9, 0x77, 0x00, 0x00, 0x00,                               // JMP LABEL3 ; line 917
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x03, 0x00,       // CMP WORD PTR [EAX+0x13E],0x03 ; line 920
	0x0F, 0x85, 0x68, 0x00, 0x00, 0x00,                         // JNE LABEL3 ; line 921
	0xD9, 0x05, 0x3C, 0x15, 0x87, 0x00,                         // FLD DWORD PTR [0x87153C] ; line 923
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 924
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xEC] ; line 926
	0x80, 0xB8, 0x04, 0x01, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [EAX+0x104],0x01 ; line 928
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE SHORT LABEL4 ; line 929
	0xE9, 0x19, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL5 ; line 930
	0xD9, 0xEE,                                                 // FLDZ ; line 932
	0xD8, 0x25, 0x10, 0xBC, 0x85, 0x00,                         // FSUB DWORD PTR [0x85BC10] ; line 933
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 934
	0xD8, 0x05, 0xD4, 0x7D, 0x85, 0x00,                         // FADD DWORD PTR [0x857DD4] ; line 935
	0xE9, 0x14, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL6 ; line 936
	0xD9, 0xEE,                                                 // FLDZ ; line 938
	0xD8, 0x25, 0x10, 0xBC, 0x85, 0x00,                         // FSUB DWORD PTR [0x85BC10] ; line 939
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 940
	0xD8, 0x25, 0xD4, 0x7D, 0x85, 0x00,                         // FSUB DWORD PTR [0x857DD4] ; line 941
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 943
	0xD9, 0x05, 0x10, 0xC1, 0x85, 0x00,                         // FLD DWORD PTR [0x85C110] ; line 945
	0xD9, 0x9E, 0x1C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x11C] ; line 946
	0xE9, 0x10, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL1 ; line 947
	0x61,                                                       // POPAD ; line 950
	0x81, 0x86, 0x4C, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, // ADD DWORD PTR [ESI+0x34C],0xFFFFFFFF ; line 951
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x60D320 ; line 952
	0x61,                                                       // POPAD ; line 954
	0x66, 0x39, 0xBE, 0x3E, 0x01, 0x00, 0x00,                   // CMP [ESI+0x13E],DI ; line 956
};
static JumpTarget murasaD623_EFF_jumpData[] = {
	{ 0x0DF, 0x60D320 },
};
static PatchByteCode murasaD623_EFF_patchByteCode = { murasaD623_EFF_byteCode, 235, murasaD623_EFF_jumpData, 1 };
// murasaD623B_HITS declared in murasa.asm line 960
static unsigned char murasaD623B_HITS_byteCode[] = {
	0x0F, 0xB7, 0x86, 0x3E, 0x01, 0x00, 0x00,                   // MOVZX EAX,WORD PTR [ESI+0x13E] ; line 961
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x08, 0x02,       // CMP WORD PTR [ESI+0x13C],0x208 ; line 962
	0x0F, 0x85, 0x62, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 963
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x03, 0x00,       // CMP WORD PTR [ESI+0x13E],0x03 ; line 964
	0x0F, 0x85, 0x53, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 965
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x01, 0x00,       // CMP WORD PTR [ESI+0x140],0x01 ; line 966
	0x0F, 0x84, 0x24, 0x00, 0x00, 0x00,                         // JE SHORT LABEL2 ; line 967
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x03, 0x00,       // CMP WORD PTR [ESI+0x140],0x03 ; line 968
	0x0F, 0x84, 0x15, 0x00, 0x00, 0x00,                         // JE SHORT LABEL2 ; line 969
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x05, 0x00,       // CMP WORD PTR [ESI+0x140],0x05 ; line 970
	0x0F, 0x84, 0x06, 0x00, 0x00, 0x00,                         // JE SHORT LABEL2 ; line 971
	0x0F, 0x85, 0x20, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 972
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x02, 0x00,       // CMP WORD PTR [ESI+0x142],0x02 ; line 974
	0x0F, 0x85, 0x11, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 975
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 976
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 977
};
static PatchByteCode murasaD623B_HITS_patchByteCode = { murasaD623B_HITS_byteCode, 120, nullptr, 0 };
// murasaD623C_HITS declared in murasa.asm line 982
static unsigned char murasaD623C_HITS_byteCode[] = {
	0x0F, 0xB7, 0x86, 0x3E, 0x01, 0x00, 0x00,                   // MOVZX EAX,WORD PTR [ESI+0x13E] ; line 983
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x02,       // CMP WORD PTR [ESI+0x13C],0x209 ; line 984
	0x0F, 0x85, 0x80, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 985
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x03, 0x00,       // CMP WORD PTR [ESI+0x13E],0x03 ; line 986
	0x0F, 0x85, 0x71, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 987
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x01, 0x00,       // CMP WORD PTR [ESI+0x140],0x01 ; line 988
	0x0F, 0x84, 0x42, 0x00, 0x00, 0x00,                         // JE SHORT LABEL2 ; line 989
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x03, 0x00,       // CMP WORD PTR [ESI+0x140],0x03 ; line 990
	0x0F, 0x84, 0x33, 0x00, 0x00, 0x00,                         // JE SHORT LABEL2 ; line 991
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x05, 0x00,       // CMP WORD PTR [ESI+0x140],0x05 ; line 992
	0x0F, 0x84, 0x24, 0x00, 0x00, 0x00,                         // JE SHORT LABEL2 ; line 993
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x07, 0x00,       // CMP WORD PTR [ESI+0x140],0x07 ; line 994
	0x0F, 0x84, 0x15, 0x00, 0x00, 0x00,                         // JE SHORT LABEL2 ; line 995
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x09, 0x00,       // CMP WORD PTR [ESI+0x140],0x09 ; line 996
	0x0F, 0x84, 0x06, 0x00, 0x00, 0x00,                         // JE SHORT LABEL2 ; line 997
	0x0F, 0x85, 0x20, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 998
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x02, 0x00,       // CMP WORD PTR [ESI+0x142],0x02 ; line 1000
	0x0F, 0x85, 0x11, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1001
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 1002
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 1003
};
static PatchByteCode murasaD623C_HITS_patchByteCode = { murasaD623C_HITS_byteCode, 150, nullptr, 0 };
// murasaD623_1B declared in murasa.asm line 1008
static unsigned char murasaD623_1B_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x02, 0x00, // CMP WORD PTR [ESI+0x13E],0x02 ; line 1010
	0x0F, 0x85, 0x23, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL3 ; line 1011
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x140],0x00 ; line 1012
	0x0F, 0x85, 0x14, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL3 ; line 1013
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x00 ; line 1014
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL3 ; line 1015
	0xE9, 0x05, 0x00, 0x00, 0x00,                         // JMP SHORT LABEL2 ; line 1016
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x5F81E3 ; line 1018
};
static JumpTarget murasaD623_1B_jumpData[] = {
	{ 0x033, 0x5F81E3 },
};
static PatchByteCode murasaD623_1B_patchByteCode = { murasaD623_1B_byteCode, 55, murasaD623_1B_jumpData, 1 };
// murasaD623_1C declared in murasa.asm line 1022
static unsigned char murasaD623_1C_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x02, 0x00, // CMP WORD PTR [ESI+0x13E],0x02 ; line 1024
	0x0F, 0x85, 0x23, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL3 ; line 1025
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x140],0x00 ; line 1026
	0x0F, 0x85, 0x14, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL3 ; line 1027
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x00 ; line 1028
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL3 ; line 1029
	0xE9, 0x05, 0x00, 0x00, 0x00,                         // JMP SHORT LABEL2 ; line 1030
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x5F8538 ; line 1032
};
static JumpTarget murasaD623_1C_jumpData[] = {
	{ 0x033, 0x5F8538 },
};
static PatchByteCode murasaD623_1C_patchByteCode = { murasaD623_1C_byteCode, 55, murasaD623_1C_jumpData, 1 };
// murasaD623_2B declared in murasa.asm line 1036
static unsigned char murasaD623_2B_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x5F7FCB ; line 1037
};
static JumpTarget murasaD623_2B_jumpData[] = {
	{ 0x001, 0x5F7FCB },
};
static PatchByteCode murasaD623_2B_patchByteCode = { murasaD623_2B_byteCode, 5, murasaD623_2B_jumpData, 1 };
// murasaD623_2C declared in murasa.asm line 1040
static unsigned char murasaD623_2C_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x5F8320 ; line 1041
};
static JumpTarget murasaD623_2C_jumpData[] = {
	{ 0x001, 0x5F8320 },
};
static PatchByteCode murasaD623_2C_patchByteCode = { murasaD623_2C_byteCode, 5, murasaD623_2C_jumpData, 1 };
// murasaD623_3B declared in murasa.asm line 1044
static unsigned char murasaD623_3B_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x5F81E3 ; line 1045
};
static JumpTarget murasaD623_3B_jumpData[] = {
	{ 0x001, 0x5F81E3 },
};
static PatchByteCode murasaD623_3B_patchByteCode = { murasaD623_3B_byteCode, 5, murasaD623_3B_jumpData, 1 };
// murasaD623_3C declared in murasa.asm line 1048
static unsigned char murasaD623_3C_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x5F81E3 ; line 1049
};
static JumpTarget murasaD623_3C_jumpData[] = {
	{ 0x001, 0x5F81E3 },
};
static PatchByteCode murasaD623_3C_patchByteCode = { murasaD623_3C_byteCode, 5, murasaD623_3C_jumpData, 1 };
// murasaD623_REMOVEAIR declared in murasa.asm line 1070
static unsigned char murasaD623_REMOVEAIR_byteCode[] = {
	0x80, 0xBE, 0xAD, 0x06, 0x00, 0x00, 0x08, // CMP BYTE PTR [ESI+0x6AD],0x08 ; line 1071
};
static PatchByteCode murasaD623_REMOVEAIR_patchByteCode = { murasaD623_REMOVEAIR_byteCode, 7, nullptr, 0 };
// murasaD623_REMOVEAIR_LV declared in murasa.asm line 1076
static unsigned char murasaD623_REMOVEAIR_LV_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x60B0AC ; line 1077
};
static JumpTarget murasaD623_REMOVEAIR_LV_jumpData[] = {
	{ 0x001, 0x60B0AC },
};
static PatchByteCode murasaD623_REMOVEAIR_LV_patchByteCode = { murasaD623_REMOVEAIR_LV_byteCode, 5, murasaD623_REMOVEAIR_LV_jumpData, 1 };
// murasaC2C_REMOVE declared in murasa.asm line 1095
static unsigned char murasaC2C_REMOVE_byteCode[] = {
	0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x140],0x25 ; line 1096
};
static PatchByteCode murasaC2C_REMOVE_patchByteCode = { murasaC2C_REMOVE_byteCode, 10, nullptr, 0 };
// murasa5B_ONHIT declared in murasa.asm line 1100
static unsigned char murasa5B_ONHIT_byteCode[] = {
	0x6A, 0x03,                         // PUSH 0x03 ; line 1101
	0x6A, 0x00,                         // PUSH 0x00 ; line 1102
	0x6A, 0x00,                         // PUSH 0x00 ; line 1103
	0x89, 0xF1,                         // MOV ECX,ESI ; line 1104
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,       // CALL 0x48CE90 ; line 1105
	0x84, 0xC0,                         // TEST AL,AL ; line 1106
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF, // JNE 0x60C5D2 ; line 1107
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00, // FLD DWORD PTR [ESI+0x11C] ; line 1108
};
static JumpTarget murasa5B_ONHIT_jumpData[] = {
	{ 0x009, 0x48CE90 },
	{ 0x011, 0x60C5D2 },
};
static PatchByteCode murasa5B_ONHIT_patchByteCode = { murasa5B_ONHIT_byteCode, 27, murasa5B_ONHIT_jumpData, 2 };
// murasa5B_NEW declared in murasa.asm line 1112
static unsigned char murasa5B_NEW_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x20, 0x03,       // CMP WORD PTR [ESI+0x13C],0x320 ; line 1113
	0x0F, 0x85, 0x75, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1114
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 1115
	0x0F, 0x85, 0x66, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1116
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x04 ; line 1117
	0x0F, 0x84, 0x56, 0x00, 0x00, 0x00,                         // JE SHORT LABEL1 ; line 1118
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x08 ; line 1119
	0x0F, 0x84, 0x46, 0x00, 0x00, 0x00,                         // JE SHORT LABEL1 ; line 1120
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x25 ; line 1121
	0x0F, 0x8F, 0x36, 0x00, 0x00, 0x00,                         // JG SHORT LABEL1 ; line 1122
	0x66, 0x9C,                                                 // PUSHF ; line 1123
	0x60,                                                       // PUSHAD ; line 1124
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 1125
	0x0F, 0xB7, 0x80, 0x3C, 0x01, 0x00, 0x00,                   // MOVZX EAX,WORD PTR [EAX+0x13C] ; line 1126
	0x66, 0x81, 0xF8, 0x32, 0x00,                               // CMP AX,0x32 ; line 1127
	0x0F, 0x8C, 0x13, 0x00, 0x00, 0x00,                         // JL SHORT LABEL2 ; line 1128
	0x66, 0x81, 0xF8, 0x96, 0x00,                               // CMP AX,0x96 ; line 1129
	0x0F, 0x8D, 0x08, 0x00, 0x00, 0x00,                         // JGE SHORT LABEL2 ; line 1130
	0x61,                                                       // POPAD ; line 1131
	0x66, 0x9D,                                                 // POPF ; line 1132
	0xE9, 0x08, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL1 ; line 1133
	0x61,                                                       // POPAD ; line 1136
	0x66, 0x9D,                                                 // POPF ; line 1137
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x60C3C4 ; line 1138
	0xC7, 0x86, 0x4C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x34C],0x00 ; line 1140
};
static JumpTarget murasa5B_NEW_jumpData[] = {
	{ 0x080, 0x60C3C4 },
};
static PatchByteCode murasa5B_NEW_patchByteCode = { murasa5B_NEW_byteCode, 142, murasa5B_NEW_jumpData, 1 };
// murasa5B_NEW1 declared in murasa.asm line 1144
static unsigned char murasa5B_NEW1_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x20, 0x03,       // CMP WORD PTR [ESI+0x13C],0x320 ; line 1145
	0x0F, 0x85, 0x34, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1146
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 1147
	0x0F, 0x85, 0x25, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1148
	0x60,                                                       // PUSHAD ; line 1150
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x144] ; line 1151
	0xBA, 0x00, 0x00, 0x00, 0x00,                               // MOV EDX,0x0 ; line 1152
	0xBB, 0x03, 0x00, 0x00, 0x00,                               // MOV EBX,0x3 ; line 1153
	0xF7, 0xF3,                                                 // DIV EBX ; line 1154
	0x81, 0xFA, 0x00, 0x00, 0x00, 0x00,                         // CMP EDX,0x0 ; line 1155
	0x61,                                                       // POPAD ; line 1156
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,                         // JNE 0x60C3B5 ; line 1158
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x60C31F ; line 1159
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00 ; line 1161
};
static JumpTarget murasa5B_NEW1_jumpData[] = {
	{ 0x03A, 0x60C3B5 },
	{ 0x03F, 0x60C31F },
};
static PatchByteCode murasa5B_NEW1_patchByteCode = { murasa5B_NEW1_byteCode, 77, murasa5B_NEW1_jumpData, 2 };
// murasa5B_NEW2 declared in murasa.asm line 1165
static unsigned char murasa5B_NEW2_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 1166
	0x0F, 0x85, 0x0B, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1167
	0xDD, 0x05, 0xF8, 0x81, 0x85, 0x00,                         // FLD QWORD PTR [0x8581F8] ; line 1168
	0xE9, 0x06, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL2 ; line 1169
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF4] ; line 1171
	0xD8, 0x35, 0x10, 0xC0, 0x85, 0x00,                         // FDIV DWORD PTR [0x85C010] ; line 1173
	0xD9, 0x9E, 0xF4, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF4] ; line 1174
	0xDC, 0x05, 0x68, 0xE0, 0x85, 0x00,                         // FADD QWORD PTR [0x85E068] ; line 1175
};
static PatchByteCode murasa5B_NEW2_patchByteCode = { murasa5B_NEW2_byteCode, 51, nullptr, 0 };
// murasa5B_KILLONHIT declared in murasa.asm line 1179
static unsigned char murasa5B_KILLONHIT_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x02, 0x00,       // CMP WORD PTR [ESI+0x13E],0x02 ; line 1180
	0x0F, 0x85, 0x71, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 1181
	0xD9, 0x86, 0xF8, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF8] ; line 1182
	0xDC, 0x05, 0x68, 0xE0, 0x85, 0x00,                         // FADD QWORD PTR [0x85E068] ; line 1183
	0xD9, 0x9E, 0xF8, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF8] ; line 1184
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00 ; line 1185
	0x0F, 0x85, 0x36, 0x00, 0x00, 0x00,                         // JNE SHORT LABELEND ; line 1186
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 1187
	0x0F, 0x84, 0x29, 0x00, 0x00, 0x00,                         // JE SHORT LABELEND ; line 1188
	0x66, 0x9C,                                                 // PUSHF ; line 1190
	0x60,                                                       // PUSHAD ; line 1191
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 1192
	0x0F, 0xB7, 0x80, 0x3C, 0x01, 0x00, 0x00,                   // MOVZX EAX, WORD PTR [EAX+0x13C] ; line 1193
	0x66, 0x81, 0xF8, 0x32, 0x00,                               // CMP AX,0x32 ; line 1194
	0x0F, 0x8C, 0x24, 0x00, 0x00, 0x00,                         // JL SHORT LABEL3 ; line 1195
	0x66, 0x81, 0xF8, 0x96, 0x00,                               // CMP AX,0x96 ; line 1196
	0x0F, 0x8D, 0x19, 0x00, 0x00, 0x00,                         // JGE SHORT LABEL3 ; line 1197
	0x61,                                                       // POPAD ; line 1198
	0x66, 0x9D,                                                 // POPF ; line 1199
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 1201
	0xC7, 0x86, 0x4C, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x34C],0x00 ; line 1202
	0xE9, 0x03, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL2 ; line 1203
	0x61,                                                       // POPAD ; line 1206
	0x66, 0x9D,                                                 // POPF ; line 1207
	0x39, 0xBE, 0x90, 0x01, 0x00, 0x00,                         // CMP [ESI+0x190],EDI ; line 1209
};
static PatchByteCode murasa5B_KILLONHIT_patchByteCode = { murasa5B_KILLONHIT_byteCode, 134, nullptr, 0 };
// murasa5B_COLOR declared in murasa.asm line 1213
static unsigned char murasa5B_COLOR_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x1A, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x1A ; line 1214
	0x0F, 0x8C, 0xDE, 0xAD, 0xBE, 0xEF,                         // JL 0x60C45C ; line 1215
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x11C] ; line 1216
};
static JumpTarget murasa5B_COLOR_jumpData[] = {
	{ 0x00C, 0x60C45C },
};
static PatchByteCode murasa5B_COLOR_patchByteCode = { murasa5B_COLOR_byteCode, 22, murasa5B_COLOR_jumpData, 1 };
// murasa5B_CHARGE declared in murasa.asm line 1220
static unsigned char murasa5B_CHARGE_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x05, 0x00, // CMP WORD PTR [ESI+0x140],0x05 ; line 1221
};
static PatchByteCode murasa5B_CHARGE_patchByteCode = { murasa5B_CHARGE_byteCode, 9, nullptr, 0 };
// murasaJ5B_FIX declared in murasa.asm line 1226
static unsigned char murasaJ5B_FIX_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x0A, 0x00, // CMP WORD PTR [ESI+0x140],0x0A ; line 1227
};
static PatchByteCode murasaJ5B_FIX_patchByteCode = { murasaJ5B_FIX_byteCode, 9, nullptr, 0 };
// murasaJ6A_0 declared in murasa.asm line 1233
static unsigned char murasaJ6A_0_byteCode[] = {
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00, // FLD DWORD PTR [ESI+0xF4] ; line 1234
};
static PatchByteCode murasaJ6A_0_patchByteCode = { murasaJ6A_0_byteCode, 6, nullptr, 0 };
// murasaJ6A_1 declared in murasa.asm line 1237
static unsigned char murasaJ6A_1_byteCode[] = {
	0xD9, 0x86, 0xF8, 0x00, 0x00, 0x00, // FLD DWORD PTR [ESI+0xF8] ; line 1238
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,       // JMP 0x606110 ; line 1239
};
static JumpTarget murasaJ6A_1_jumpData[] = {
	{ 0x007, 0x606110 },
};
static PatchByteCode murasaJ6A_1_patchByteCode = { murasaJ6A_1_byteCode, 11, murasaJ6A_1_jumpData, 1 };
// murasa5C_ONHIT declared in murasa.asm line 1243
static unsigned char murasa5C_ONHIT_byteCode[] = {
	0x6A, 0x05, // PUSH 0x05 ; line 1244
	0x6A, 0x03, // PUSH 0x03 ; line 1245
	0x6A, 0x00, // PUSH 0x00 ; line 1246
};
static PatchByteCode murasa5C_ONHIT_patchByteCode = { murasa5C_ONHIT_byteCode, 6, nullptr, 0 };
// murasa5C_SPLIT1 declared in murasa.asm line 1255
static unsigned char murasa5C_SPLIT1_byteCode[] = {
	0x66, 0x9C,                                                 // PUSHF ; line 1256
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x01, 0x00,       // CMP WORD PTR [ESI+0x13E],0x01 ; line 1259
	0x0F, 0x84, 0x06, 0x00, 0x00, 0x00,                         // JE SHORT LABEL0 ; line 1260
	0x0F, 0x85, 0xC5, 0x00, 0x00, 0x00,                         // JNE LABEL3 ; line 1261
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x140],0x00 ; line 1264
	0x0F, 0x85, 0xC3, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 1265
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x01, 0x00,       // CMP WORD PTR [ESI+0x142],0x01 ; line 1266
	0x0F, 0x85, 0xB4, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 1267
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x01 ; line 1268
	0x0F, 0x85, 0xA4, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 1269
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x01, 0x00,       // CMP WORD PTR [ESI+0x13E],0x01 ; line 1270
	0x0F, 0x85, 0x88, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL3 ; line 1271
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF4] ; line 1274
	0xD8, 0x8E, 0xF4, 0x00, 0x00, 0x00,                         // FMUL DWORD PTR [ESI+0xF4] ; line 1275
	0xD9, 0x86, 0xF8, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF8] ; line 1276
	0xD8, 0x8E, 0xF8, 0x00, 0x00, 0x00,                         // FMUL DWORD PTR [ESI+0xF8] ; line 1277
	0xDE, 0xC1,                                                 // FADDP ST1 ; line 1278
	0xD9, 0x05, 0x00, 0x9F, 0x85, 0x00,                         // FLD DWORD PTR [0x859F00] ; line 1279
	0xD8, 0x0D, 0x00, 0x9F, 0x85, 0x00,                         // FMUL DWORD PTR [0x859F00] ; line 1280
	0xDE, 0xD9,                                                 // FCOMPP ; line 1281
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 1282
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 1283
	0x0F, 0x84, 0x2A, 0x00, 0x00, 0x00,                         // JE SHORT LABELA1 ; line 1284
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP SHORT LABELA2 ; line 1285
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF4] ; line 1289
	0xD8, 0x0D, 0x04, 0xAD, 0x85, 0x00,                         // FMUL DWORD PTR [0x85AD04] ; line 1290
	0xD9, 0x9E, 0xF4, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF4] ; line 1291
	0xDD, 0x05, 0x28, 0xBA, 0x85, 0x00,                         // FLD QWORD PTR [0x85BA28] ; line 1293
	0xD9, 0x96, 0xF8, 0x00, 0x00, 0x00,                         // FST DWORD PTR [ESI+0xF8] ; line 1294
	0x66, 0x9D,                                                 // POPF ; line 1296
	0xE9, 0x4C, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL2 ; line 1297
	0xD9, 0x05, 0x78, 0xBC, 0x85, 0x00,                         // FLD DWORD PTR [0x85BC78] ; line 1301
	0xD9, 0x9E, 0xF4, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF4] ; line 1302
	0xD9, 0x86, 0xF8, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF8] ; line 1304
	0xD8, 0x0D, 0x04, 0xAD, 0x85, 0x00,                         // FMUL DWORD PTR [0x85AD04] ; line 1305
	0xD8, 0x05, 0x0C, 0xAD, 0x85, 0x00,                         // FADD DWORD PTR [0x85AD0C] ; line 1306
	0xD9, 0x96, 0xF8, 0x00, 0x00, 0x00,                         // FST DWORD PTR [ESI+0xF8] ; line 1307
	0x66, 0x9D,                                                 // POPF ; line 1309
	0xE9, 0x21, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL2 ; line 1310
	0x66, 0x9D,                                                 // POPF ; line 1314
	0xD9, 0x86, 0xF8, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF8] ; line 1315
	0xE9, 0x14, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL2 ; line 1316
	0x66, 0x9D,                                                 // POPF ; line 1318
	0xD9, 0x86, 0xF8, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF8] ; line 1319
	0xD8, 0x25, 0xA8, 0x77, 0x86, 0x00,                         // FSUB DWORD PTR [0x8677A8] ; line 1320
	0xD9, 0x96, 0xF8, 0x00, 0x00, 0x00,                         // FST DWORD PTR [ESI+0xF8] ; line 1321
	0x90,                                                       // NOP ; line 1323
};
static PatchByteCode murasa5C_SPLIT1_patchByteCode = { murasa5C_SPLIT1_byteCode, 254, nullptr, 0 };
// murasa5C_SPLIT2 declared in murasa.asm line 1327
static unsigned char murasa5C_SPLIT2_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x60CA33 ; line 1328
};
static JumpTarget murasa5C_SPLIT2_jumpData[] = {
	{ 0x001, 0x60CA33 },
};
static PatchByteCode murasa5C_SPLIT2_patchByteCode = { murasa5C_SPLIT2_byteCode, 5, murasa5C_SPLIT2_jumpData, 1 };
// murasa5C_TIMER declared in murasa.asm line 1333
static unsigned char murasa5C_TIMER_byteCode[] = {
	0x66, 0x9C,                                                 // PUSHF ; line 1334
	0x60,                                                       // PUSHAD ; line 1335
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x8B, 0x00,       // CMP WORD PTR [ESI+0x140],0x008B ; line 1336
	0x0F, 0x84, 0xBD, 0x00, 0x00, 0x00,                         // JE LABELEND ; line 1337
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x78, 0x00,       // CMP WORD PTR [ESI+0x140],0x0078 ; line 1338
	0x0F, 0x8F, 0xB6, 0x00, 0x00, 0x00,                         // JG LABEL1 ; line 1339
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 1340
	0xD9, 0xEE,                                                 // FLDZ ; line 1341
	0xDE, 0xD9,                                                 // FCOMPP ; line 1342
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 1343
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 1344
	0x0F, 0x84, 0x33, 0x00, 0x00, 0x00,                         // JE LABEL2 ; line 1345
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 1348
	0xD9, 0xEE,                                                 // FLDZ ; line 1349
	0xDE, 0xD9,                                                 // FCOMPP ; line 1350
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 1351
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 1352
	0x0F, 0x84, 0x38, 0x00, 0x00, 0x00,                         // JE LABEL3 ; line 1353
	0xD9, 0x05, 0xF4, 0xB8, 0x85, 0x00,                         // FLD DWORD PTR [0x85B8F4] ; line 1355
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 1356
	0xDE, 0xD9,                                                 // FCOMPP ; line 1357
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 1358
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 1359
	0x0F, 0x84, 0x45, 0x00, 0x00, 0x00,                         // JE LABEL4 ; line 1360
	0xE9, 0x6E, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL1 ; line 1362
	0x61,                                                       // POPAD ; line 1365
	0x66, 0x9D,                                                 // POPF ; line 1366
	0x66, 0xC7, 0x86, 0x40, 0x01, 0x00, 0x00, 0x79, 0x00,       // MOV WORD PTR [ESI+0x140],0x0079 ; line 1367
	0x66, 0xC7, 0x86, 0x42, 0x01, 0x00, 0x00, 0xFF, 0x00,       // MOV WORD PTR [ESI+0x142],0x00FF ; line 1368
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x60C908 ; line 1369
	0xDD, 0x05, 0x40, 0xC5, 0x85, 0x00,                         // FLD QWORD PTR [0x85C540] ; line 1373
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 1374
	0x61,                                                       // POPAD ; line 1375
	0x66, 0x9D,                                                 // POPF ; line 1376
	0x66, 0xC7, 0x86, 0x40, 0x01, 0x00, 0x00, 0x79, 0x00,       // MOV WORD PTR [ESI+0x140],0x0079 ; line 1377
	0x66, 0xC7, 0x86, 0x42, 0x01, 0x00, 0x00, 0xFF, 0x00,       // MOV WORD PTR [ESI+0x142],0x00FF ; line 1378
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x60C908 ; line 1379
	0xDD, 0x05, 0x40, 0xC5, 0x85, 0x00,                         // FLD QWORD PTR [0x85C540] ; line 1383
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 1384
	0x61,                                                       // POPAD ; line 1385
	0x66, 0x9D,                                                 // POPF ; line 1386
	0x66, 0xC7, 0x86, 0x40, 0x01, 0x00, 0x00, 0x79, 0x00,       // MOV WORD PTR [ESI+0x140],0x0079 ; line 1387
	0x66, 0xC7, 0x86, 0x42, 0x01, 0x00, 0x00, 0xFF, 0x00,       // MOV WORD PTR [ESI+0x142],0x00FF ; line 1388
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x60C908 ; line 1389
	0x61,                                                       // POPAD ; line 1392
	0x66, 0x9D,                                                 // POPF ; line 1393
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x60C9C8 ; line 1394
	0x61,                                                       // POPAD ; line 1397
	0x66, 0x9D,                                                 // POPF ; line 1398
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x00, // CMP DWORD PTR [ESI+0x144],0x00FFFFFF ; line 1399
};
static JumpTarget murasa5C_TIMER_jumpData[] = {
	{ 0x07F, 0x60C908 },
	{ 0x0A5, 0x60C908 },
	{ 0x0CB, 0x60C908 },
	{ 0x0D3, 0x60C9C8 },
};
static PatchByteCode murasa5C_TIMER_patchByteCode = { murasa5C_TIMER_byteCode, 228, murasa5C_TIMER_jumpData, 4 };
// murasa5C_GRAV2 declared in murasa.asm line 1403
static unsigned char murasa5C_GRAV2_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x60C9D7 ; line 1404
};
static JumpTarget murasa5C_GRAV2_jumpData[] = {
	{ 0x001, 0x60C9D7 },
};
static PatchByteCode murasa5C_GRAV2_patchByteCode = { murasa5C_GRAV2_byteCode, 5, murasa5C_GRAV2_jumpData, 1 };
// murasa5C_GRAV declared in murasa.asm line 1408
static unsigned char murasa5C_GRAV_byteCode[] = {
	0x66, 0x9C,                                                 // PUSHF ; line 1409
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x140],0x00 ; line 1410
	0x0F, 0x85, 0x32, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1411
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x142],0x00 ; line 1412
	0x0F, 0x85, 0x23, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1413
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 1414
	0x0F, 0x85, 0x13, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1415
	0xD9, 0x86, 0xF8, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF8] ; line 1417
	0xD8, 0x0D, 0xE4, 0xAB, 0x85, 0x00,                         // FMUL DWORD PTR [0x85ABE4] ; line 1418
	0x66, 0x9D,                                                 // POPF ; line 1419
	0xE9, 0x08, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL2 ; line 1420
	0x66, 0x9D,                                                 // POPF ; line 1423
	0xD9, 0x86, 0xF8, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF8] ; line 1424
	0x90,                                                       // NOP ; line 1427
};
static PatchByteCode murasa5C_GRAV_patchByteCode = { murasa5C_GRAV_byteCode, 76, nullptr, 0 };
// murasa5C_GRAV1 declared in murasa.asm line 1431
static unsigned char murasa5C_GRAV1_byteCode[] = {
	0x66, 0x9C,                                           // PUSHF ; line 1432
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x79, 0x00, // CMP WORD PTR [ESI+0x140],0x79 ; line 1433
	0x0F, 0x8C, 0x15, 0x00, 0x00, 0x00,                   // JL SHORT LABEL1 ; line 1434
	0x66, 0x9D,                                           // POPF ; line 1436
	0xDC, 0x0D, 0x2C, 0x81, 0x86, 0x00,                   // FMUL QWORD PTR [0x86812C] ; line 1437
	0xD9, 0xEE,                                           // FLDZ ; line 1438
	0xD9, 0x9E, 0xF4, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0xF4] ; line 1439
	0xE9, 0x08, 0x00, 0x00, 0x00,                         // JMP SHORT LABEL2 ; line 1440
	0x66, 0x9D,                                           // POPF ; line 1443
	0xD8, 0x25, 0xC0, 0xB9, 0x85, 0x00,                   // FSUB DWORD PTR [0x85B9C0] ; line 1444
	0x90,                                                 // NOP ; line 1446
};
static PatchByteCode murasa5C_GRAV1_patchByteCode = { murasa5C_GRAV1_byteCode, 47, nullptr, 0 };
// murasa5C_SWITCH1 declared in murasa.asm line 1476
static unsigned char murasa5C_SWITCH1_byteCode[] = {
	0x66, 0x9C,                         // PUSHF ; line 1477
	0x60,                               // PUSHAD ; line 1478
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00, // FLD DWORD PTR [ESI+0xF0] ; line 1479
	0xD9, 0xE8,                         // FLD1 ; line 1480
	0xDE, 0xD9,                         // FCOMPP ; line 1481
	0xDF, 0xE0,                         // FNSTSW AX ; line 1482
	0xF6, 0xC4, 0x41,                   // TEST AH,0x41 ; line 1483
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00, // JE SHORT LABEL2 ; line 1484
	0xE9, 0x0E, 0x00, 0x00, 0x00,       // JMP SHORT LABEL1 ; line 1485
	0x61,                               // POPAD ; line 1488
	0x66, 0x9D,                         // POPF ; line 1489
	0xD9, 0x05, 0x94, 0xC8, 0x85, 0x00, // FLD DWORD PTR [0x85C894] ; line 1490
	0xE9, 0x09, 0x00, 0x00, 0x00,       // JMP SHORT END ; line 1491
	0x61,                               // POPAD ; line 1494
	0x66, 0x9D,                         // POPF ; line 1495
	0xD9, 0x05, 0xD4, 0xB9, 0x85, 0x00, // FLD DWORD PTR [0x85B9D4] ; line 1496
	0x90,                               // NOP ; line 1499
};
static PatchByteCode murasa5C_SWITCH1_patchByteCode = { murasa5C_SWITCH1_byteCode, 53, nullptr, 0 };
// murasa5C_NEW declared in murasa.asm line 1517
static unsigned char murasa5C_NEW_byteCode[] = {
	0x66, 0x9C,                                                 // PUSHF ; line 1518
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x8B, 0x00,       // CMP WORD PTR [ESI+0x140],0x8B ; line 1519
	0x0F, 0x8C, 0x0A, 0x00, 0x00, 0x00,                         // JL SHORT LABEL1 ; line 1520
	0x81, 0x86, 0x4C, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, // ADD DWORD PTR [ESI+0x34C],0xFFFFFFFF ; line 1521
	0x66, 0x9D,                                                 // POPF ; line 1523
};
static PatchByteCode murasa5C_NEW_patchByteCode = { murasa5C_NEW_byteCode, 29, nullptr, 0 };
// murasa2C_Y declared in murasa.asm line 1537
static unsigned char murasa2C_Y_byteCode[] = {
	0xD9, 0x05, 0xB8, 0xBD, 0x85, 0x00, // FLD DWORD PTR [0x85BDB8] ; line 1539
};
static PatchByteCode murasa2C_Y_patchByteCode = { murasa2C_Y_byteCode, 6, nullptr, 0 };
// murasaJ5C_Y declared in murasa.asm line 1543
static unsigned char murasaJ5C_Y_byteCode[] = {
	0xD9, 0x05, 0x60, 0x78, 0x86, 0x00, // FLD DWORD PTR [0x867860] ; line 1544
};
static PatchByteCode murasaJ5C_Y_patchByteCode = { murasaJ5C_Y_byteCode, 6, nullptr, 0 };
// murasaJ6C_Y declared in murasa.asm line 1548
static unsigned char murasaJ6C_Y_byteCode[] = {
	0xD9, 0x05, 0x60, 0x78, 0x86, 0x00, // FLD DWORD PTR [0x867860] ; line 1549
};
static PatchByteCode murasaJ6C_Y_patchByteCode = { murasaJ6C_Y_byteCode, 6, nullptr, 0 };
// murasaD236_ARMOR declared in murasa.asm line 1557
static unsigned char murasaD236_ARMOR_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x5EE772 ; line 1558
};
static JumpTarget murasaD236_ARMOR_jumpData[] = {
	{ 0x001, 0x5EE772 },
};
static PatchByteCode murasaD236_ARMOR_patchByteCode = { murasaD236_ARMOR_byteCode, 5, murasaD236_ARMOR_jumpData, 1 };
// murasaD236_ARMOR1 declared in murasa.asm line 1562
static unsigned char murasaD236_ARMOR1_byteCode[] = {
	0x89, 0x9E, 0x90, 0x01, 0x00, 0x00, // MOV [ESI+0x190],EBX ; line 1563
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,       // JMP 0x608B1B ; line 1564
};
static JumpTarget murasaD236_ARMOR1_jumpData[] = {
	{ 0x007, 0x608B1B },
};
static PatchByteCode murasaD236_ARMOR1_patchByteCode = { murasaD236_ARMOR1_byteCode, 11, murasaD236_ARMOR1_jumpData, 1 };
// murasaMPP_0 declared in murasa.asm line 1569
static unsigned char murasaMPP_0_byteCode[] = {
	0x66, 0xC7, 0x86, 0x92, 0x08, 0x00, 0x00, 0xD0, 0x02, // MOV WORD PTR [ESI+0x892],0x02D0 ; line 1570
};
static PatchByteCode murasaMPP_0_patchByteCode = { murasaMPP_0_byteCode, 9, nullptr, 0 };
// murasaMPP_WALKX declared in murasa.asm line 1574
static unsigned char murasaMPP_WALKX_byteCode[] = {
	0xD9, 0x05, 0x2C, 0x78, 0x86, 0x00, // FLD DWORD PTR [0x86782C] ; line 1575
};
static PatchByteCode murasaMPP_WALKX_patchByteCode = { murasaMPP_WALKX_byteCode, 6, nullptr, 0 };
// murasaMPP_JY declared in murasa.asm line 1579
static unsigned char murasaMPP_JY_byteCode[] = {
	0xDD, 0x05, 0xF8, 0x81, 0x85, 0x00, // FLD QWORD PTR [0x8581F8] ; line 1580
};
static PatchByteCode murasaMPP_JY_patchByteCode = { murasaMPP_JY_byteCode, 6, nullptr, 0 };
// murasaMPP_GRAV declared in murasa.asm line 1584
static unsigned char murasaMPP_GRAV_byteCode[] = {
	0xD9, 0xE8, // FLD1 ; line 1585
};
static PatchByteCode murasaMPP_GRAV_patchByteCode = { murasaMPP_GRAV_byteCode, 2, nullptr, 0 };
// murasaMPP_JX declared in murasa.asm line 1589
static unsigned char murasaMPP_JX_byteCode[] = {
	0xD8, 0x0D, 0x2C, 0x78, 0x86, 0x00, // FMUL DWORD PTR [0x86782C] ; line 1590
};
static PatchByteCode murasaMPP_JX_patchByteCode = { murasaMPP_JX_byteCode, 6, nullptr, 0 };
// murasaCHAINS_0F declared in murasa.asm line 1598
static unsigned char murasaCHAINS_0F_byteCode[] = {
	0x31, 0xDB,                                                 // XOR EBX,EBX ; line 1599
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 1600
	0xC6, 0x86, 0x8C, 0x01, 0x00, 0x00, 0x02,                   // MOV BYTE PTR [ESI+0x00018C],0x02 ; line 1601
	0x66, 0x89, 0x9E, 0xD0, 0x07, 0x00, 0x00,                   // MOV [ESI+0x0007D0],BX ; line 1602
	0xC6, 0x86, 0xF4, 0x07, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x0007F4],0x01 ; line 1603
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4636B0 ; line 1604
	0x88, 0x9E, 0x9A, 0x04, 0x00, 0x00,                         // MOV [ESI+0x00049A],BL ; line 1605
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x000190],0x00000001 ; line 1606
	0x5E,                                                       // POP ESI ; line 1607
	0x5B,                                                       // POP EBX ; line 1608
	0x81, 0xC4, 0x14, 0x00, 0x00, 0x00,                         // ADD ESP,0x14 ; line 1609
	0xC3,                                                       // RET ; line 1610
};
static JumpTarget murasaCHAINS_0F_jumpData[] = {
	{ 0x01A, 0x4636B0 },
};
static PatchByteCode murasaCHAINS_0F_patchByteCode = { murasaCHAINS_0F_byteCode, 55, murasaCHAINS_0F_jumpData, 1 };
// murasaCHAINS_C declared in murasa.asm line 1614
static unsigned char murasaCHAINS_C_byteCode[] = {
	0xBB, 0x01, 0x00, 0x00, 0x00,                         // MOV EBX,0x01 ; line 1615
	0xBD, 0x00, 0x00, 0x00, 0x00,                         // MOV EBP,0x00 ; line 1616
	0xB8, 0x02, 0x00, 0x00, 0x00,                         // MOV EAX,0x02 ; line 1617
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1619
	0xDD, 0xD8,                                           // FSTP ST0 ; line 1620
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x13E],0x00 ; line 1622
	0x0F, 0x85, 0x31, 0x00, 0x00, 0x00,                   // JNE SHORT A1LABELC7 ; line 1623
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x02, 0x00, // CMP WORD PTR [ESI+0x140],0x02 ; line 1624
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                   // JNE SHORT A1LABELC7 ; line 1625
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x00 ; line 1626
	0x0F, 0x85, 0x13, 0x00, 0x00, 0x00,                   // JNE SHORT A1LABELC7 ; line 1627
	0x60,                                                 // PUSHAD ; line 1628
	0x0F, 0xB6, 0x86, 0xA6, 0x06, 0x00, 0x00,             // MOVZX EAX,BYTE PTR [ESI+0x6A6] ; line 1629
	0x6B, 0xC0, 0x02,                                     // IMUL EAX,EAX,0x02 ; line 1630
	0x66, 0x89, 0x86, 0x42, 0x01, 0x00, 0x00,             // MOV [ESI+0x142],AX ; line 1631
	0x61,                                                 // POPAD ; line 1632
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x1D, 0x02, // CMP WORD PTR [ESI+0x13C],0x021D ; line 1634
	0x0F, 0x8F, 0x0E, 0x00, 0x00, 0x00,                   // JG SHORT A1LABELC8 ; line 1635
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x03, 0x00, // CMP WORD PTR [ESI+0x13E],0x03 ; line 1636
	0xE9, 0x07, 0x00, 0x00, 0x00,                         // JMP SHORT A1LABELC9 ; line 1637
	0x0F, 0xB7, 0x86, 0x3E, 0x01, 0x00, 0x00,             // MOVZX EAX,WORD PTR [ESI+0x13E] ; line 1639
	0x90,                                                 // NOP ; line 1641
	0x90,                                                 // NOP ; line 1643
	0x90,                                                 // NOP ; line 1644
	0x90,                                                 // NOP ; line 1645
	0x0F, 0x8F, 0x07, 0x00, 0x00, 0x00,                   // JG LABEL1904F8 ; line 1646
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1648
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x487CA0 ; line 1649
	0xC6, 0x86, 0x8C, 0x01, 0x00, 0x00, 0x05,             // MOV BYTE PTR [ESI+0x18C],0x05 ; line 1651
	0x39, 0xAE, 0x64, 0x07, 0x00, 0x00,                   // CMP [ESI+0x764],EBP ; line 1652
	0x0F, 0x85, 0x07, 0x00, 0x00, 0x00,                   // JNE LABEL19050E ; line 1653
	0xC6, 0x86, 0xF4, 0x07, 0x00, 0x00, 0x00,             // MOV BYTE PTR [ESI+0x7F4],0x00 ; line 1655
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x02, 0x00, // CMP WORD PTR [ESI+0x13E],0x02 ; line 1657
	0x0F, 0x85, 0x0D, 0x00, 0x00, 0x00,                   // JNE LABEL190525 ; line 1658
	0x66, 0x39, 0x9E, 0xD0, 0x07, 0x00, 0x00,             // CMP [ESI+0x7D0],BX ; line 1660
	0x0F, 0x84, 0xAA, 0x03, 0x00, 0x00,                   // JE LABEL194AD6 ; line 1661
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1664
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x438C60 ; line 1665
	0x84, 0xC0,                                           // TEST AL,AL ; line 1666
	0x0F, 0x84, 0x0B, 0x00, 0x00, 0x00,                   // JE LABEL19053B ; line 1667
	0x8B, 0x06,                                           // MOV EAX,[ESI] ; line 1669
	0x8B, 0x50, 0x08,                                     // MOV EDX,[EAX+0x08] ; line 1670
	0x6A, 0x09,                                           // PUSH 0x09 ; line 1671
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1672
	0xFF, 0xD2,                                           // CALL EDX ; line 1673
	0x39, 0xAE, 0x44, 0x01, 0x00, 0x00,                   // CMP [ESI+0x144],EBP ; line 1675
	0x0F, 0x85, 0x58, 0x03, 0x00, 0x00,                   // JNE LABEL199FB0 ; line 1676
	0x66, 0x39, 0xAE, 0x42, 0x01, 0x00, 0x00,             // CMP [ESI+0x142],BP ; line 1678
	0x0F, 0x85, 0xF4, 0x01, 0x00, 0x00,                   // JNE LABEL190712 ; line 1679
	0x66, 0x39, 0xAE, 0x40, 0x01, 0x00, 0x00,             // CMP [ESI+0x140],BP ; line 1680
	0x0F, 0x85, 0xE7, 0x01, 0x00, 0x00,                   // JNE LABEL190712 ; line 1681
	0x66, 0x39, 0x9E, 0x3E, 0x01, 0x00, 0x00,             // CMP [ESI+0x13E],BX ; line 1682
	0x0F, 0x85, 0xDA, 0x01, 0x00, 0x00,                   // JNE LABEL190712 ; line 1683
	0x8B, 0x86, 0x70, 0x01, 0x00, 0x00,                   // MOV EAX,[ESI+0x170] ; line 1685
	0x0F, 0xBE, 0x8E, 0x04, 0x01, 0x00, 0x00,             // MOVSX ECX,BYTE PTR [ESI+0x104] ; line 1686
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [EAX+0x000000EC] ; line 1687
	0xD8, 0xA6, 0xEC, 0x00, 0x00, 0x00,                   // FSUB DWORD PTR [ESI+0x0EC] ; line 1688
	0x89, 0x4C, 0x24, 0x10,                               // MOV [ESP+0x10],ECX ; line 1689
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                   // SUB ESP,0x08 ; line 1690
	0xDB, 0x44, 0x24, 0x18,                               // FILD DWORD PTR [ESP+0x18] ; line 1691
	0xDE, 0xC9,                                           // FMULP ST1 ; line 1692
	0xD9, 0x5C, 0x24, 0x18,                               // FSTP DWORD PTR [ESP+0x18] ; line 1693
	0xD9, 0x44, 0x24, 0x18,                               // FLD DWORD PTR [ESP+0x18] ; line 1694
	0xD9, 0x5C, 0x24, 0x04,                               // FSTP DWORD PTR [ESP+0x04] ; line 1695
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [EAX+0x000000F0] ; line 1696
	0xD8, 0xA6, 0xF0, 0x00, 0x00, 0x00,                   // FSUB DWORD PTR [ESI+0x0F0] ; line 1697
	0xD9, 0x5C, 0x24, 0x18,                               // FSTP DWORD PTR [ESP+0x18] ; line 1698
	0xD9, 0x44, 0x24, 0x18,                               // FLD DWORD PTR [ESP+0x18] ; line 1699
	0xD9, 0x1C, 0x24,                                     // FSTP DWORD PTR [ESP] ; line 1700
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x409760 ; line 1701
	0xD9, 0xE0,                                           // FCHS ; line 1702
	0x81, 0xC4, 0x08, 0x00, 0x00, 0x00,                   // ADD ESP,0x08 ; line 1703
	0xD9, 0x5C, 0x24, 0x10,                               // FSTP DWORD PTR [ESP+0x10] ; line 1704
	0xD9, 0x44, 0x24, 0x10,                               // FLD DWORD PTR [ESP+0x10] ; line 1705
	0xD9, 0x96, 0xE4, 0x07, 0x00, 0x00,                   // FST DWORD PTR [ESI+0x7E4] ; line 1706
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x1C, 0x02, // CMP WORD PTR [ESI+0x13C],0x021C ; line 1709
	0x0F, 0x84, 0x0B, 0x00, 0x00, 0x00,                   // JE SHORT A2LABEL1 ; line 1710
	0xDD, 0x05, 0xF0, 0xBA, 0x85, 0x00,                   // FLD QWORD PTR [0x85BAF0] ; line 1711
	0xE9, 0x02, 0x00, 0x00, 0x00,                         // JMP SHORT A2LABEL2 ; line 1712
	0xD9, 0xEE,                                           // FLDZ ; line 1715
	0xD9, 0x9E, 0xE4, 0x07, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0x7E4] ; line 1717
	0xE9, 0x3B, 0x00, 0x00, 0x00,                         // JMP LABEL190607 ; line 1718
	0x90,                                                 // NOP ; line 1730
	0xDF, 0xE0,                                           // FNSTSW AX ; line 1731
	0xF6, 0xC4, 0x05,                                     // TEST AH,0x05 ; line 1732
	0x0F, 0x8A, 0x0C, 0x00, 0x00, 0x00,                   // JP LABEL1905E8 ; line 1733
	0xD9, 0x05, 0x84, 0xBB, 0x85, 0x00,                   // FLD DWORD PTR [0x85BB84] ; line 1735
	0xD9, 0x9E, 0xE4, 0x07, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0x7E4] ; line 1736
	0xD9, 0x86, 0xE4, 0x07, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0x7E4] ; line 1738
	0xDC, 0x1D, 0x30, 0x78, 0x86, 0x00,                   // FCOMP QWORD PTR [0x867830] ; line 1739
	0xDF, 0xE0,                                           // FNSTSW AX ; line 1740
	0xF6, 0xC4, 0x41,                                     // TEST AH,0x41 ; line 1741
	0x0F, 0x85, 0x0C, 0x00, 0x00, 0x00,                   // JNE LABEL190607 ; line 1742
	0xD9, 0x05, 0xE4, 0xBB, 0x85, 0x00,                   // FLD DWORD PTR [0x85BBE4] ; line 1744
	0xD9, 0x9E, 0xE4, 0x07, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0x7E4] ; line 1745
	0xD9, 0x86, 0xE4, 0x07, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0x7E4] ; line 1747
	0x6A, 0x04,                                           // PUSH 0x04 ; line 1748
	0xD9, 0x9C, 0x24, 0xC0, 0x01, 0x00, 0x00,             // FSTP DWORD PTR [ESP+0x000001C0] ; line 1749
	0x8D, 0x94, 0x24, 0xC0, 0x01, 0x00, 0x00,             // LEA EDX,[ESP+0x000001C0] ; line 1750
	0xD9, 0xEE,                                           // FLDZ ; line 1751
	0x52,                                                 // PUSH EDX ; line 1752
	0xD9, 0x94, 0x24, 0xC8, 0x01, 0x00, 0x00,             // FST DWORD PTR [ESP+0x000001C8] ; line 1753
	0x53,                                                 // PUSH EBX ; line 1754
	0xD9, 0x94, 0x24, 0xD0, 0x01, 0x00, 0x00,             // FST DWORD PTR [ESP+0x000001D0] ; line 1755
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1756
	0xD9, 0x9C, 0x24, 0xD4, 0x01, 0x00, 0x00,             // FSTP DWORD PTR [ESP+0x000001D4] ; line 1757
	0x0F, 0xB6, 0x86, 0x04, 0x01, 0x00, 0x00,             // MOVZX EAX,BYTE PTR [ESI+0x104] ; line 1758
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0x0F0] ; line 1759
	0xDC, 0x05, 0x20, 0x7B, 0x85, 0x00,                   // FADD QWORD PTR [0x857B20] ; line 1760
	0x50,                                                 // PUSH EAX ; line 1761
	0x0F, 0xBE, 0xC0,                                     // MOVSX EAX,AL ; line 1762
	0xD9, 0x5C, 0x24, 0x20,                               // FSTP DWORD PTR [ESP+0x20] ; line 1763
	0x8D, 0x04, 0x80,                                     // LEA EAX,[EAX+EAX*0x4] ; line 1764
	0xD9, 0x44, 0x24, 0x20,                               // FLD DWORD PTR [ESP+0x20] ; line 1765
	0x01, 0xC0,                                           // ADD EAX,EAX ; line 1766
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                   // SUB ESP,0x08 ; line 1767
	0x01, 0xC0,                                           // ADD EAX,EAX ; line 1768
	0x89, 0x44, 0x24, 0x28,                               // MOV [ESP+0x28],EAX ; line 1769
	0xD9, 0x5C, 0x24, 0x04,                               // FSTP DWORD PTR [ESP+0x04] ; line 1770
	0xDB, 0x44, 0x24, 0x28,                               // FILD DWORD PTR [ESP+0x28] ; line 1771
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                   // FADD DWORD PTR [ESI+0x0EC] ; line 1772
	0xD9, 0x5C, 0x24, 0x28,                               // FSTP DWORD PTR [ESP+0x28] ; line 1773
	0xD9, 0x44, 0x24, 0x28,                               // FLD DWORD PTR [ESP+0x28] ; line 1774
	0xD9, 0x1C, 0x24,                                     // FSTP DWORD PTR [ESP] ; line 1775
	0x68, 0x2C, 0x03, 0x00, 0x00,                         // PUSH 0x0000032C ; line 1776
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x46EB30 ; line 1777
	0xD9, 0x05, 0x70, 0xB8, 0x85, 0x00,                   // FLD DWORD PTR [0x85B870] ; line 1778
	0xD9, 0x9C, 0x24, 0xC4, 0x01, 0x00, 0x00,             // FSTP DWORD PTR [ESP+0x000001C4] ; line 1779
	0x0F, 0xB6, 0x86, 0x04, 0x01, 0x00, 0x00,             // MOVZX EAX,BYTE PTR [ESI+0x104] ; line 1780
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0x0F0] ; line 1781
	0x6A, 0x04,                                           // PUSH 0x04 ; line 1782
	0xDC, 0x05, 0x20, 0x7B, 0x85, 0x00,                   // FADD QWORD PTR [0x857B20] ; line 1783
	0x8D, 0x8C, 0x24, 0xC0, 0x01, 0x00, 0x00,             // LEA ECX,[ESP+0x000001C0] ; line 1784
	0x51,                                                 // PUSH ECX ; line 1785
	0x53,                                                 // PUSH EBX ; line 1786
	0x50,                                                 // PUSH EAX ; line 1787
	0xD9, 0x5C, 0x24, 0x20,                               // FSTP DWORD PTR [ESP+0x20] ; line 1788
	0xD9, 0x44, 0x24, 0x20,                               // FLD DWORD PTR [ESP+0x20] ; line 1789
	0x0F, 0xBE, 0xC0,                                     // MOVSX EAX,AL ; line 1790
	0x8D, 0x14, 0x80,                                     // LEA EDX,[EAX+EAX*0x4] ; line 1791
	0x01, 0xD2,                                           // ADD EDX,EDX ; line 1792
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                   // SUB ESP,0x08 ; line 1793
	0x01, 0xD2,                                           // ADD EDX,EDX ; line 1794
	0x89, 0x54, 0x24, 0x28,                               // MOV [ESP+0x28],EDX ; line 1795
	0xD9, 0x5C, 0x24, 0x04,                               // FSTP DWORD PTR [ESP+0x04] ; line 1796
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1797
	0xDB, 0x44, 0x24, 0x28,                               // FILD DWORD PTR [ESP+0x28] ; line 1798
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                   // FADD DWORD PTR [ESI+0x0EC] ; line 1799
	0xD9, 0x5C, 0x24, 0x28,                               // FSTP DWORD PTR [ESP+0x28] ; line 1800
	0xD9, 0x44, 0x24, 0x28,                               // FLD DWORD PTR [ESP+0x28] ; line 1801
	0xD9, 0x1C, 0x24,                                     // FSTP DWORD PTR [ESP] ; line 1802
	0x68, 0x2C, 0x03, 0x00, 0x00,                         // PUSH 0x0000032C ; line 1803
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x46EB30 ; line 1804
	0x6A, 0x10,                                           // PUSH 0x10 ; line 1805
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1806
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x464980 ; line 1807
	0x6A, 0x78,                                           // PUSH 0x78 ; line 1808
	0x68, 0xC8, 0x00, 0x00, 0x00,                         // PUSH 0x000000C8 ; line 1809
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1810
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 1811
	0x6A, 0x32,                                           // PUSH 0x32 ; line 1812
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1813
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x487870 ; line 1814
	0x39, 0xAE, 0x44, 0x01, 0x00, 0x00,                   // CMP [ESI+0x144],EBP ; line 1816
	0x0F, 0x85, 0x4B, 0x01, 0x00, 0x00,                   // JNE LABEL199FB0 ; line 1817
	0x66, 0x39, 0xAE, 0x42, 0x01, 0x00, 0x00,             // CMP [ESI+0x142],BP ; line 1818
	0x0F, 0x85, 0x3E, 0x01, 0x00, 0x00,                   // JNE LABEL199FB0 ; line 1819
	0x66, 0x39, 0xAE, 0x40, 0x01, 0x00, 0x00,             // CMP [ESI+0x140],BP ; line 1820
	0x0F, 0x85, 0x31, 0x01, 0x00, 0x00,                   // JNE LABEL199FB0 ; line 1821
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x04, 0x00, // CMP WORD PTR [ESI+0x13E],0x04 ; line 1822
	0x0F, 0x85, 0x22, 0x01, 0x00, 0x00,                   // JNE LABEL199FB0 ; line 1823
	0x8B, 0x06,                                           // MOV EAX,[ESI] ; line 1825
	0x8B, 0x50, 0x08,                                     // MOV EDX,[EAX+0x08] ; line 1826
	0x55,                                                 // PUSH EBP ; line 1827
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1828
	0xFF, 0xD2,                                           // CALL EDX ; line 1830
	0xE9, 0x13, 0x01, 0x00, 0x00,                         // JMP LABEL199FB0 ; line 1831
	0xD9, 0x86, 0xE4, 0x07, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0x7E4] ; line 1837
	0x6A, 0x04,                                           // PUSH 0x04 ; line 1838
	0xD9, 0x9C, 0x24, 0xA0, 0x01, 0x00, 0x00,             // FSTP DWORD PTR [ESP+0x000001A0] ; line 1839
	0x8D, 0x94, 0x24, 0xA0, 0x01, 0x00, 0x00,             // LEA EDX,[ESP+0x000001A0] ; line 1840
	0xD9, 0xEE,                                           // FLDZ ; line 1841
	0x52,                                                 // PUSH EDX ; line 1842
	0xD9, 0x94, 0x24, 0xA8, 0x01, 0x00, 0x00,             // FST DWORD PTR [ESP+0x000001A8] ; line 1843
	0x6A, 0x01,                                           // PUSH 0x01 ; line 1844
	0xD9, 0x94, 0x24, 0xB0, 0x01, 0x00, 0x00,             // FST DWORD PTR [ESP+0x000001B0] ; line 1845
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1846
	0xD9, 0x9C, 0x24, 0xB4, 0x01, 0x00, 0x00,             // FSTP DWORD PTR [ESP+0x000001B4] ; line 1847
	0x0F, 0xB6, 0x86, 0x04, 0x01, 0x00, 0x00,             // MOVZX EAX,BYTE PTR [ESI+0x104] ; line 1848
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0x0F0] ; line 1849
	0xDC, 0x05, 0x20, 0x7B, 0x85, 0x00,                   // FADD QWORD PTR [0x857B20] ; line 1850
	0x50,                                                 // PUSH EAX ; line 1851
	0x0F, 0xBE, 0xC0,                                     // MOVSX EAX,AL ; line 1852
	0xD9, 0x5C, 0x24, 0x20,                               // FSTP DWORD PTR [ESP+0x20] ; line 1853
	0x8D, 0x04, 0x80,                                     // LEA EAX,[EAX+EAX*0x4] ; line 1854
	0xD9, 0x44, 0x24, 0x20,                               // FLD DWORD PTR [ESP+0x20] ; line 1855
	0x01, 0xC0,                                           // ADD EAX,EAX ; line 1856
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                   // SUB ESP,0x08 ; line 1857
	0x01, 0xC0,                                           // ADD EAX,EAX ; line 1858
	0x89, 0x44, 0x24, 0x28,                               // MOV [ESP+0x28],EAX ; line 1859
	0xD9, 0x5C, 0x24, 0x04,                               // FSTP DWORD PTR [ESP+0x04] ; line 1860
	0xDB, 0x44, 0x24, 0x28,                               // FILD DWORD PTR [ESP+0x28] ; line 1861
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                   // FADD DWORD PTR [ESI+0x0EC] ; line 1862
	0xD9, 0x5C, 0x24, 0x28,                               // FSTP DWORD PTR [ESP+0x28] ; line 1863
	0xD9, 0x44, 0x24, 0x28,                               // FLD DWORD PTR [ESP+0x28] ; line 1864
	0xD9, 0x1C, 0x24,                                     // FSTP DWORD PTR [ESP] ; line 1865
	0x68, 0x2C, 0x03, 0x00, 0x00,                         // PUSH 0x0000032C ; line 1866
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x46EB30 ; line 1867
	0xD9, 0x05, 0x70, 0xB8, 0x85, 0x00,                   // FLD DWORD PTR [0x85B870] ; line 1868
	0xD9, 0x9C, 0x24, 0xA4, 0x01, 0x00, 0x00,             // FSTP DWORD PTR [ESP+0x000001A4] ; line 1869
	0x0F, 0xB6, 0x86, 0x04, 0x01, 0x00, 0x00,             // MOVZX EAX,BYTE PTR [ESI+0x104] ; line 1870
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0x0F0] ; line 1871
	0x6A, 0x04,                                           // PUSH 0x04 ; line 1872
	0xDC, 0x05, 0x20, 0x7B, 0x85, 0x00,                   // FADD QWORD PTR [0x857B20] ; line 1873
	0x8D, 0x8C, 0x24, 0xA0, 0x01, 0x00, 0x00,             // LEA ECX,[ESP+0x000001A0] ; line 1874
	0x51,                                                 // PUSH ECX ; line 1875
	0x6A, 0x01,                                           // PUSH 0x01 ; line 1876
	0x50,                                                 // PUSH EAX ; line 1877
	0xD9, 0x5C, 0x24, 0x20,                               // FSTP DWORD PTR [ESP+0x20] ; line 1878
	0xD9, 0x44, 0x24, 0x20,                               // FLD DWORD PTR [ESP+0x20] ; line 1879
	0x0F, 0xBE, 0xC0,                                     // MOVSX EAX,AL ; line 1880
	0x8D, 0x14, 0x80,                                     // LEA EDX,[EAX+EAX*0x4] ; line 1881
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                   // SUB ESP,0x08 ; line 1882
	0x01, 0xD2,                                           // ADD EDX,EDX ; line 1883
	0x01, 0xD2,                                           // ADD EDX,EDX ; line 1884
	0xD9, 0x5C, 0x24, 0x04,                               // FSTP DWORD PTR [ESP+0x04] ; line 1885
	0x89, 0x54, 0x24, 0x28,                               // MOV [ESP+0x28],EDX ; line 1886
	0xDB, 0x44, 0x24, 0x28,                               // FILD DWORD PTR [ESP+0x28] ; line 1887
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                   // FADD DWORD PTR [ESI+0x0EC] ; line 1888
	0xD9, 0x5C, 0x24, 0x28,                               // FSTP DWORD PTR [ESP+0x28] ; line 1889
	0xD9, 0x44, 0x24, 0x28,                               // FLD DWORD PTR [ESP+0x28] ; line 1890
	0xD9, 0x1C, 0x24,                                     // FSTP DWORD PTR [ESP] ; line 1891
	0x68, 0x2C, 0x03, 0x00, 0x00,                         // PUSH 0x0000032C ; line 1892
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1893
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x46EB30 ; line 1894
	0x6A, 0x10,                                           // PUSH 0x10 ; line 1895
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1896
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x464980 ; line 1897
	0x6A, 0x78,                                           // PUSH 0x78 ; line 1898
	0x68, 0xC8, 0x00, 0x00, 0x00,                         // PUSH 0x000000C8 ; line 1899
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1900
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 1901
	0x6A, 0x32,                                           // PUSH 0x32 ; line 1902
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1903
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x487870 ; line 1904
	0x5F,                                                 // POP EDI ; line 1907
	0x5E,                                                 // POP ESI ; line 1908
	0x5D,                                                 // POP EBP ; line 1909
	0x5B,                                                 // POP EBX ; line 1910
	0x89, 0xEC,                                           // MOV ESP,EBP ; line 1911
	0x5D,                                                 // POP EBP ; line 1912
	0xC3,                                                 // RET ; line 1913
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1916
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x4636B0 ; line 1917
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1918
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x4397F0 ; line 1919
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0x0F0] ; line 1920
	0x8B, 0x06,                                           // MOV EAX,[ESI] ; line 1921
	0x8B, 0x50, 0x0C,                                     // MOV EDX,[EAX+0x0C] ; line 1922
	0x6A, 0x07,                                           // PUSH 0x07 ; line 1923
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1924
	0xFF, 0xD2,                                           // CALL EDX ; line 1925
	0xE9, 0xD4, 0xFF, 0xFF, 0xFF,                         // JMP LABEL190C71 ; line 1926
	0x8B, 0x06,                                           // MOV EAX,[ESI] ; line 1929
	0x8B, 0x50, 0x0C,                                     // MOV EDX,[EAX+0x0C] ; line 1930
	0x6A, 0x04,                                           // PUSH 0x04 ; line 1931
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1932
	0xFF, 0xD2,                                           // CALL EDX ; line 1933
	0xE9, 0xC4, 0xFF, 0xFF, 0xFF,                         // JMP LABEL190C71 ; line 1934
};
static JumpTarget murasaCHAINS_C_jumpData[] = {
	{ 0x084, 0x487CA0 },
	{ 0x0C1, 0x438C60 },
	{ 0x158, 0x409760 },
	{ 0x254, 0x46EB30 },
	{ 0x2C1, 0x46EB30 },
	{ 0x2CA, 0x464980 },
	{ 0x2D8, 0x47A9E0 },
	{ 0x2E1, 0x487870 },
	{ 0x3AA, 0x46EB30 },
	{ 0x418, 0x46EB30 },
	{ 0x421, 0x464980 },
	{ 0x42F, 0x47A9E0 },
	{ 0x438, 0x487870 },
	{ 0x447, 0x4636B0 },
	{ 0x44E, 0x4397F0 },
};
static PatchByteCode murasaCHAINS_C_patchByteCode = { murasaCHAINS_C_byteCode, 1144, murasaCHAINS_C_jumpData, 15 };
// murasaCHAINS_C_AIR declared in murasa.asm line 1939
static unsigned char murasaCHAINS_C_AIR_byteCode[] = {
	0xBB, 0x01, 0x00, 0x00, 0x00,                         // MOV EBX,0x01 ; line 1940
	0xBD, 0x00, 0x00, 0x00, 0x00,                         // MOV EBP,0x00 ; line 1941
	0xB8, 0x02, 0x00, 0x00, 0x00,                         // MOV EAX,0x02 ; line 1942
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1944
	0xDD, 0xD8,                                           // FSTP ST0 ; line 1945
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x13E],0x00 ; line 1947
	0x0F, 0x85, 0x31, 0x00, 0x00, 0x00,                   // JNE SHORT A3LABELC7 ; line 1948
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x02, 0x00, // CMP WORD PTR [ESI+0x140],0x02 ; line 1949
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                   // JNE SHORT A3LABELC7 ; line 1950
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x00 ; line 1951
	0x0F, 0x85, 0x13, 0x00, 0x00, 0x00,                   // JNE SHORT A3LABELC7 ; line 1952
	0x60,                                                 // PUSHAD ; line 1953
	0x0F, 0xB6, 0x86, 0xA6, 0x06, 0x00, 0x00,             // MOVZX EAX,BYTE PTR [ESI+0x6A6] ; line 1954
	0x6B, 0xC0, 0x02,                                     // IMUL EAX,EAX,0x02 ; line 1955
	0x66, 0x89, 0x86, 0x42, 0x01, 0x00, 0x00,             // MOV [ESI+0x142],AX ; line 1956
	0x61,                                                 // POPAD ; line 1957
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x1D, 0x02, // CMP WORD PTR [ESI+0x13C],0x021D ; line 1959
	0x0F, 0x8F, 0x0E, 0x00, 0x00, 0x00,                   // JG SHORT A3LABELC8 ; line 1960
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x03, 0x00, // CMP WORD PTR [ESI+0x13E],0x03 ; line 1961
	0xE9, 0x07, 0x00, 0x00, 0x00,                         // JMP SHORT A3LABELC9 ; line 1962
	0x0F, 0xB7, 0x86, 0x3E, 0x01, 0x00, 0x00,             // MOVZX EAX,WORD PTR [ESI+0x13E] ; line 1964
	0x90,                                                 // NOP ; line 1966
	0x90,                                                 // NOP ; line 1968
	0x90,                                                 // NOP ; line 1969
	0x66, 0x81, 0xF8, 0x07, 0x00,                         // CMP AX,0x0007 ; line 1970
	0x0F, 0x85, 0x0C, 0x00, 0x00, 0x00,                   // JNE LABEL19099B ; line 1971
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1973
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x487CA0 ; line 1974
	0xE9, 0x2C, 0x00, 0x00, 0x00,                         // JMP LABEL1909C2 ; line 1975
	0x66, 0x81, 0xF8, 0x03, 0x00,                         // CMP AX,0x0003 ; line 1978
	0x0F, 0x8F, 0x21, 0x00, 0x00, 0x00,                   // JG LABEL1909C2 ; line 1979
	0xD9, 0x86, 0xF8, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0x0F8] ; line 1981
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1982
	0xD8, 0xA6, 0x00, 0x01, 0x00, 0x00,                   // FSUB DWORD PTR [ESI+0x100] ; line 1983
	0xD9, 0x9E, 0xF8, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0x0F8] ; line 1984
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x487EA0 ; line 1985
	0x84, 0xC0,                                           // TEST AL,AL ; line 1986
	0x0F, 0x85, 0x23, 0x03, 0x00, 0x00,                   // JNE LABEL1975E9 ; line 1987
	0xBB, 0x05, 0x00, 0x00, 0x00,                         // MOV EBX,0x00000005 ; line 1990
	0x88, 0x9E, 0x8C, 0x01, 0x00, 0x00,                   // MOV [ESI+0x18C],BL ; line 1991
	0x39, 0xAE, 0x64, 0x07, 0x00, 0x00,                   // CMP [ESI+0x764],EBP ; line 1992
	0x0F, 0x85, 0x07, 0x00, 0x00, 0x00,                   // JNE LABEL1909DC ; line 1993
	0xC6, 0x86, 0xF4, 0x07, 0x00, 0x00, 0x00,             // MOV BYTE PTR [ESI+0x7F4],0x00 ; line 1995
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x02, 0x00, // CMP WORD PTR [ESI+0x13E],0x02 ; line 1997
	0x0F, 0x85, 0x0F, 0x00, 0x00, 0x00,                   // JNE LABEL1909F4 ; line 1998
	0x66, 0x81, 0xBE, 0xD0, 0x07, 0x00, 0x00, 0x01, 0x00, // CMP WORD PTR [ESI+0x7D0],0x01 ; line 2000
	0x0F, 0x84, 0x0B, 0x03, 0x00, 0x00,                   // JE LABEL194AD6 ; line 2001
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 2004
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x438C60 ; line 2005
	0x84, 0xC0,                                           // TEST AL,AL ; line 2006
	0x0F, 0x84, 0x0A, 0x00, 0x00, 0x00,                   // JE LABEL190A09 ; line 2007
	0x8B, 0x06,                                           // MOV EAX,[ESI] ; line 2009
	0x8B, 0x50, 0x08,                                     // MOV EDX,[EAX+0x08] ; line 2010
	0x55,                                                 // PUSH EBP ; line 2011
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 2012
	0xFF, 0xD2,                                           // CALL EDX ; line 2013
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x03, 0x00, // CMP WORD PTR [ESI+0x13E],0x03 ; line 2015
	0x0F, 0x85, 0x26, 0x00, 0x00, 0x00,                   // JNE LABEL190A31 ; line 2016
	0x66, 0x39, 0xAE, 0x42, 0x01, 0x00, 0x00,             // CMP [ESI+0x142],BP ; line 2017
	0x0F, 0x85, 0x19, 0x00, 0x00, 0x00,                   // JNE LABEL190A31 ; line 2018
	0x66, 0x39, 0x9E, 0x40, 0x01, 0x00, 0x00,             // CMP [ESI+0x140],BX ; line 2019
	0x0F, 0x85, 0x0C, 0x00, 0x00, 0x00,                   // JNE LABEL190A31 ; line 2020
	0xD9, 0x05, 0xA8, 0x77, 0x86, 0x00,                   // FLD DWORD PTR [0x8677A8] ; line 2022
	0xD9, 0x9E, 0x00, 0x01, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0x100] ; line 2023
	0x39, 0xAE, 0x44, 0x01, 0x00, 0x00,                   // CMP [ESI+0x144],EBP ; line 2025
	0x0F, 0x85, 0x85, 0x02, 0x00, 0x00,                   // JNE LABEL199FB0 ; line 2026
	0x66, 0x39, 0xAE, 0x42, 0x01, 0x00, 0x00,             // CMP [ESI+0x142],BP ; line 2028
	0x0F, 0x85, 0x27, 0x00, 0x00, 0x00,                   // JNE LABEL190A64 ; line 2029
	0x66, 0x39, 0xAE, 0x40, 0x01, 0x00, 0x00,             // CMP [ESI+0x140],BP ; line 2030
	0x0F, 0x85, 0x1A, 0x00, 0x00, 0x00,                   // JNE LABEL190A64 ; line 2031
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x04, 0x00, // CMP WORD PTR [ESI+0x13E],0x04 ; line 2032
	0x0F, 0x85, 0x0B, 0x00, 0x00, 0x00,                   // JNE LABEL190A64 ; line 2033
	0x8B, 0x06,                                           // MOV EAX,[ESI] ; line 2035
	0x8B, 0x50, 0x08,                                     // MOV EDX,[EAX+0x08] ; line 2036
	0x6A, 0x09,                                           // PUSH 0x09 ; line 2037
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 2038
	0xFF, 0xD2,                                           // CALL EDX ; line 2039
	0x39, 0xAE, 0x44, 0x01, 0x00, 0x00,                   // CMP [ESI+0x144],EBP ; line 2041
	0x0F, 0x85, 0x45, 0x02, 0x00, 0x00,                   // JNE LABEL199FB0 ; line 2042
	0x66, 0x39, 0xAE, 0x42, 0x01, 0x00, 0x00,             // CMP [ESI+0x142],BP ; line 2044
	0x0F, 0x85, 0x27, 0x00, 0x00, 0x00,                   // JNE LABEL190A97 ; line 2045
	0x66, 0x39, 0xAE, 0x40, 0x01, 0x00, 0x00,             // CMP [ESI+0x140],BP ; line 2046
	0x0F, 0x85, 0x1A, 0x00, 0x00, 0x00,                   // JNE LABEL190A97 ; line 2047
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x07, 0x00, // CMP WORD PTR [ESI+0x13E],0x07 ; line 2048
	0x0F, 0x85, 0x0B, 0x00, 0x00, 0x00,                   // JNE LABEL190A97 ; line 2049
	0x8B, 0x06,                                           // MOV EAX,[ESI] ; line 2051
	0x8B, 0x50, 0x08,                                     // MOV EDX,[EAX+0x08] ; line 2052
	0x6A, 0x09,                                           // PUSH 0x09 ; line 2053
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 2054
	0xFF, 0xD2,                                           // CALL EDX ; line 2055
	0x39, 0xAE, 0x44, 0x01, 0x00, 0x00,                   // CMP [ESI+0x144],EBP ; line 2057
	0x0F, 0x85, 0x05, 0x02, 0x00, 0x00,                   // JNE LABEL199FB0 ; line 2058
	0x66, 0x39, 0xAE, 0x42, 0x01, 0x00, 0x00,             // CMP [ESI+0x142],BP ; line 2059
	0x0F, 0x85, 0xF8, 0x01, 0x00, 0x00,                   // JNE LABEL199FB0 ; line 2060
	0x66, 0x39, 0xAE, 0x40, 0x01, 0x00, 0x00,             // CMP [ESI+0x140],BP ; line 2061
	0x0F, 0x85, 0xEB, 0x01, 0x00, 0x00,                   // JNE LABEL199FB0 ; line 2062
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x01, 0x00, // CMP WORD PTR [ESI+0x13E],0x01 ; line 2063
	0x0F, 0x85, 0xDC, 0x01, 0x00, 0x00,                   // JNE LABEL199FB0 ; line 2064
	0x8B, 0x86, 0x70, 0x01, 0x00, 0x00,                   // MOV EAX,[ESI+0x170] ; line 2066
	0x0F, 0xBE, 0x8E, 0x04, 0x01, 0x00, 0x00,             // MOVSX ECX,BYTE PTR [ESI+0x104] ; line 2067
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [EAX+0x000000EC] ; line 2068
	0xD8, 0xA6, 0xEC, 0x00, 0x00, 0x00,                   // FSUB DWORD PTR [ESI+0x0EC] ; line 2069
	0x89, 0x4C, 0x24, 0x10,                               // MOV [ESP+0x10],ECX ; line 2070
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                   // SUB ESP,0x08 ; line 2071
	0xDB, 0x44, 0x24, 0x18,                               // FILD DWORD PTR [ESP+0x18] ; line 2072
	0xDE, 0xC9,                                           // FMULP ST1 ; line 2073
	0xD9, 0x5C, 0x24, 0x18,                               // FSTP DWORD PTR [ESP+0x18] ; line 2074
	0xD9, 0x44, 0x24, 0x18,                               // FLD DWORD PTR [ESP+0x18] ; line 2075
	0xD9, 0x5C, 0x24, 0x04,                               // FSTP DWORD PTR [ESP+0x04] ; line 2076
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [EAX+0x000000F0] ; line 2077
	0xD8, 0xA6, 0xF0, 0x00, 0x00, 0x00,                   // FSUB DWORD PTR [ESI+0x0F0] ; line 2078
	0xD9, 0x5C, 0x24, 0x18,                               // FSTP DWORD PTR [ESP+0x18] ; line 2079
	0xD9, 0x44, 0x24, 0x18,                               // FLD DWORD PTR [ESP+0x18] ; line 2080
	0xD9, 0x1C, 0x24,                                     // FSTP DWORD PTR [ESP] ; line 2081
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x409760 ; line 2082
	0xD9, 0xE0,                                           // FCHS ; line 2083
	0x81, 0xC4, 0x08, 0x00, 0x00, 0x00,                   // ADD ESP,0x08 ; line 2084
	0xD9, 0x5C, 0x24, 0x10,                               // FSTP DWORD PTR [ESP+0x10] ; line 2085
	0xD9, 0x44, 0x24, 0x10,                               // FLD DWORD PTR [ESP+0x10] ; line 2086
	0xD9, 0x96, 0xE4, 0x07, 0x00, 0x00,                   // FST DWORD PTR [ESI+0x7E4] ; line 2087
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x1E, 0x02, // CMP WORD PTR [ESI+0x13C],0x021E ; line 2089
	0x0F, 0x84, 0x0B, 0x00, 0x00, 0x00,                   // JE SHORT A4LABEL1 ; line 2090
	0xD9, 0x05, 0x8C, 0xB9, 0x85, 0x00,                   // FLD DWORD PTR [0x85B98C] ; line 2091
	0xE9, 0x02, 0x00, 0x00, 0x00,                         // JMP SHORT A4LABEL2 ; line 2092
	0xD9, 0xEE,                                           // FLDZ ; line 2094
	0xD9, 0x9E, 0xE4, 0x07, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0x7E4] ; line 2096
	0xE9, 0x3B, 0x00, 0x00, 0x00,                         // JMP LABEL190B64 ; line 2097
	0x90,                                                 // NOP ; line 2099
	0xDF, 0xE0,                                           // FNSTSW AX ; line 2100
	0xF6, 0xC4, 0x05,                                     // TEST AH,0x05 ; line 2101
	0x0F, 0x8A, 0x0C, 0x00, 0x00, 0x00,                   // JP LABEL190B45 ; line 2102
	0xD9, 0x05, 0x84, 0xBB, 0x85, 0x00,                   // FLD DWORD PTR [0x85BB84] ; line 2104
	0xD9, 0x9E, 0xE4, 0x07, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0x7E4] ; line 2105
	0xD9, 0x86, 0xE4, 0x07, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0x7E4] ; line 2107
	0xDC, 0x1D, 0x30, 0x78, 0x86, 0x00,                   // FCOMP QWORD PTR [0x867830] ; line 2108
	0xDF, 0xE0,                                           // FNSTSW AX ; line 2109
	0xF6, 0xC4, 0x41,                                     // TEST AH,0x41 ; line 2110
	0x0F, 0x85, 0x0C, 0x00, 0x00, 0x00,                   // JNE LABEL190B64 ; line 2111
	0xD9, 0x05, 0xE4, 0xBB, 0x85, 0x00,                   // FLD DWORD PTR [0x85BBE4] ; line 2113
	0xD9, 0x9E, 0xE4, 0x07, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0x7E4] ; line 2114
	0xD9, 0x86, 0xE4, 0x07, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0x7E4] ; line 2117
	0x6A, 0x04,                                           // PUSH 0x04 ; line 2118
	0xD9, 0x9C, 0x24, 0xA0, 0x01, 0x00, 0x00,             // FSTP DWORD PTR [ESP+0x000001A0] ; line 2119
	0x8D, 0x94, 0x24, 0xA0, 0x01, 0x00, 0x00,             // LEA EDX,[ESP+0x000001A0] ; line 2120
	0xD9, 0xEE,                                           // FLDZ ; line 2121
	0x52,                                                 // PUSH EDX ; line 2122
	0xD9, 0x94, 0x24, 0xA8, 0x01, 0x00, 0x00,             // FST DWORD PTR [ESP+0x000001A8] ; line 2123
	0x6A, 0x01,                                           // PUSH 0x01 ; line 2124
	0xD9, 0x94, 0x24, 0xB0, 0x01, 0x00, 0x00,             // FST DWORD PTR [ESP+0x000001B0] ; line 2125
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 2126
	0xD9, 0x9C, 0x24, 0xB4, 0x01, 0x00, 0x00,             // FSTP DWORD PTR [ESP+0x000001B4] ; line 2127
	0x0F, 0xB6, 0x86, 0x04, 0x01, 0x00, 0x00,             // MOVZX EAX,BYTE PTR [ESI+0x104] ; line 2128
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0x0F0] ; line 2129
	0xDC, 0x05, 0x20, 0x7B, 0x85, 0x00,                   // FADD QWORD PTR [0x857B20] ; line 2130
	0x50,                                                 // PUSH EAX ; line 2131
	0x0F, 0xBE, 0xC0,                                     // MOVSX EAX,AL ; line 2132
	0xD9, 0x5C, 0x24, 0x20,                               // FSTP DWORD PTR [ESP+0x20] ; line 2133
	0x8D, 0x04, 0x80,                                     // LEA EAX,[EAX+EAX*0x4] ; line 2134
	0xD9, 0x44, 0x24, 0x20,                               // FLD DWORD PTR [ESP+0x20] ; line 2135
	0x01, 0xC0,                                           // ADD EAX,EAX ; line 2136
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                   // SUB ESP,0x08 ; line 2137
	0x01, 0xC0,                                           // ADD EAX,EAX ; line 2138
	0x89, 0x44, 0x24, 0x28,                               // MOV [ESP+0x28],EAX ; line 2139
	0xD9, 0x5C, 0x24, 0x04,                               // FSTP DWORD PTR [ESP+0x04] ; line 2140
	0xDB, 0x44, 0x24, 0x28,                               // FILD DWORD PTR [ESP+0x28] ; line 2141
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                   // FADD DWORD PTR [ESI+0x0EC] ; line 2142
	0xD9, 0x5C, 0x24, 0x28,                               // FSTP DWORD PTR [ESP+0x28] ; line 2143
	0xD9, 0x44, 0x24, 0x28,                               // FLD DWORD PTR [ESP+0x28] ; line 2144
	0xD9, 0x1C, 0x24,                                     // FSTP DWORD PTR [ESP] ; line 2145
	0x68, 0x2C, 0x03, 0x00, 0x00,                         // PUSH 0x0000032C ; line 2146
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x46EB30 ; line 2147
	0xD9, 0x05, 0x70, 0xB8, 0x85, 0x00,                   // FLD DWORD PTR [0x85B870] ; line 2148
	0xD9, 0x9C, 0x24, 0xA4, 0x01, 0x00, 0x00,             // FSTP DWORD PTR [ESP+0x000001A4] ; line 2149
	0x0F, 0xB6, 0x86, 0x04, 0x01, 0x00, 0x00,             // MOVZX EAX,BYTE PTR [ESI+0x104] ; line 2150
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0x0F0] ; line 2151
	0x6A, 0x04,                                           // PUSH 0x04 ; line 2152
	0xDC, 0x05, 0x20, 0x7B, 0x85, 0x00,                   // FADD QWORD PTR [0x857B20] ; line 2153
	0x8D, 0x8C, 0x24, 0xA0, 0x01, 0x00, 0x00,             // LEA ECX,[ESP+0x000001A0] ; line 2154
	0x51,                                                 // PUSH ECX ; line 2155
	0x6A, 0x01,                                           // PUSH 0x01 ; line 2156
	0x50,                                                 // PUSH EAX ; line 2157
	0xD9, 0x5C, 0x24, 0x20,                               // FSTP DWORD PTR [ESP+0x20] ; line 2158
	0xD9, 0x44, 0x24, 0x20,                               // FLD DWORD PTR [ESP+0x20] ; line 2159
	0x0F, 0xBE, 0xC0,                                     // MOVSX EAX,AL ; line 2160
	0x8D, 0x14, 0x80,                                     // LEA EDX,[EAX+EAX*4] ; line 2161
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                   // SUB ESP,0x08 ; line 2162
	0x01, 0xD2,                                           // ADD EDX,EDX ; line 2163
	0x01, 0xD2,                                           // ADD EDX,EDX ; line 2164
	0xD9, 0x5C, 0x24, 0x04,                               // FSTP DWORD PTR [ESP+0x04] ; line 2165
	0x89, 0x54, 0x24, 0x28,                               // MOV [ESP+0x28],EDX ; line 2166
	0xDB, 0x44, 0x24, 0x28,                               // FILD DWORD PTR [ESP+0x28] ; line 2167
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                   // FADD DWORD PTR [ESI+0x0EC] ; line 2168
	0xD9, 0x5C, 0x24, 0x28,                               // FSTP DWORD PTR [ESP+0x28] ; line 2169
	0xD9, 0x44, 0x24, 0x28,                               // FLD DWORD PTR [ESP+0x28] ; line 2170
	0xD9, 0x1C, 0x24,                                     // FSTP DWORD PTR [ESP] ; line 2171
	0x68, 0x2C, 0x03, 0x00, 0x00,                         // PUSH 0x0000032C ; line 2172
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 2173
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x46EB30 ; line 2174
	0x6A, 0x10,                                           // PUSH 0x10 ; line 2175
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 2176
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x464980 ; line 2177
	0x6A, 0x78,                                           // PUSH 0x78 ; line 2178
	0x68, 0xC8, 0x00, 0x00, 0x00,                         // PUSH 0x000000C8 ; line 2179
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 2180
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x47A9E0 ; line 2181
	0x6A, 0x32,                                           // PUSH 0x32 ; line 2182
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 2183
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x487870 ; line 2184
	0x5F,                                                 // POP EDI ; line 2187
	0x5E,                                                 // POP ESI ; line 2188
	0x5D,                                                 // POP EBP ; line 2189
	0x5B,                                                 // POP EBX ; line 2190
	0x89, 0xEC,                                           // MOV ESP,EBP ; line 2191
	0x5D,                                                 // POP EBP ; line 2192
	0xC3,                                                 // RET ; line 2193
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 2196
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x4636B0 ; line 2197
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 2198
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x4397F0 ; line 2199
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0x0F0] ; line 2200
	0x8B, 0x06,                                           // MOV EAX,[ESI] ; line 2201
	0x8B, 0x50, 0x0C,                                     // MOV EDX,[EAX+0x0C] ; line 2202
	0x6A, 0x07,                                           // PUSH 0x07 ; line 2203
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 2204
	0xFF, 0xD2,                                           // CALL EDX ; line 2205
	0xE9, 0xD4, 0xFF, 0xFF, 0xFF,                         // JMP LABEL190C71 ; line 2206
	0x8B, 0x06,                                           // MOV EAX,[ESI] ; line 2209
	0x8B, 0x50, 0x0C,                                     // MOV EDX,[EAX+0x0C] ; line 2210
	0x6A, 0x04,                                           // PUSH 0x04 ; line 2211
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 2212
	0xFF, 0xD2,                                           // CALL EDX ; line 2213
	0xE9, 0xC4, 0xFF, 0xFF, 0xFF,                         // JMP LABEL190C71 ; line 2214
};
static JumpTarget murasaCHAINS_C_AIR_jumpData[] = {
	{ 0x088, 0x487CA0 },
	{ 0x0B1, 0x487EA0 },
	{ 0x0FC, 0x438C60 },
	{ 0x249, 0x409760 },
	{ 0x346, 0x46EB30 },
	{ 0x3B4, 0x46EB30 },
	{ 0x3BD, 0x464980 },
	{ 0x3CB, 0x47A9E0 },
	{ 0x3D4, 0x487870 },
	{ 0x3E3, 0x4636B0 },
	{ 0x3EA, 0x4397F0 },
};
static PatchByteCode murasaCHAINS_C_AIR_patchByteCode = { murasaCHAINS_C_AIR_byteCode, 1044, murasaCHAINS_C_AIR_jumpData, 11 };
// murasaCHAINS_BULLET declared in murasa.asm line 2219
static unsigned char murasaCHAINS_BULLET_byteCode[] = {
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2220
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x0190],0x05 ; line 2222
	0x0F, 0x84, 0xC0, 0x12, 0x00, 0x00,                         // JE LABEL19E2D8 ; line 2223
	0x0F, 0xBF, 0x86, 0x3E, 0x01, 0x00, 0x00,                   // MOVSX EAX,WORD PTR [ESI+0x013E] ; line 2225
	0x81, 0xF8, 0x07, 0x00, 0x00, 0x00,                         // CMP EAX,0x07 ; line 2226
	0x0F, 0x87, 0x9E, 0x12, 0x00, 0x00,                         // JA LABEL19E2B8 ; line 2227
	0x81, 0xF8, 0x00, 0x00, 0x00, 0x00,                         // CMP EAX,0x00 ; line 2229
	0x0F, 0x84, 0x59, 0x00, 0x00, 0x00,                         // JE LABEL19ED0B ; line 2230
	0x81, 0xF8, 0x01, 0x00, 0x00, 0x00,                         // CMP EAX,0x01 ; line 2231
	0x0F, 0x84, 0xCC, 0x00, 0x00, 0x00,                         // JE LABEL19ED79 ; line 2232
	0x81, 0xF8, 0x02, 0x00, 0x00, 0x00,                         // CMP EAX,0x02 ; line 2233
	0x0F, 0x84, 0xC0, 0x00, 0x00, 0x00,                         // JE LABEL19ED79 ; line 2234
	0x81, 0xF8, 0x03, 0x00, 0x00, 0x00,                         // CMP EAX,0x03 ; line 2235
	0x0F, 0x84, 0x49, 0x05, 0x00, 0x00,                         // JE LABEL19F1C3 ; line 2236
	0x81, 0xF8, 0x04, 0x00, 0x00, 0x00,                         // CMP EAX,0x04 ; line 2237
	0x0F, 0x84, 0x72, 0x05, 0x00, 0x00,                         // JE LABEL19F1F5 ; line 2238
	0x81, 0xF8, 0x05, 0x00, 0x00, 0x00,                         // CMP EAX,0x05 ; line 2239
	0x0F, 0x84, 0xA2, 0x05, 0x00, 0x00,                         // JE LABEL19F22E ; line 2240
	0x81, 0xF8, 0x06, 0x00, 0x00, 0x00,                         // CMP EAX,0x06 ; line 2241
	0x0F, 0x84, 0x96, 0x05, 0x00, 0x00,                         // JE LABEL19F22E ; line 2242
	0x81, 0xF8, 0x07, 0x00, 0x00, 0x00,                         // CMP EAX,0x07 ; line 2243
	0x0F, 0x84, 0x4E, 0x05, 0x00, 0x00,                         // JE LABEL19F1F5 ; line 2244
	0xE9, 0x39, 0x12, 0x00, 0x00,                               // JMP LABEL19E2B8 ; line 2245
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x0398] ; line 2248
	0x0F, 0xB7, 0x81, 0x3C, 0x01, 0x00, 0x00,                   // MOVZX EAX,WORD PTR [ECX+0x0000013C] ; line 2249
	0x66, 0x81, 0xF8, 0x1C, 0x02,                               // CMP AX,0x021C ; line 2250
	0x0F, 0x8C, 0x1A, 0x00, 0x00, 0x00,                         // JL LABEL19ED2E ; line 2251
	0x66, 0x81, 0xF8, 0x20, 0x02,                               // CMP AX,0x0220 ; line 2252
	0x0F, 0x8F, 0x0F, 0x00, 0x00, 0x00,                         // JG LABEL19ED2E ; line 2253
	0x66, 0x81, 0xB9, 0x3E, 0x01, 0x00, 0x00, 0x03, 0x00,       // CMP WORD PTR [ECX+0x0000013E],0x03 ; line 2255
	0x0F, 0x8C, 0x3D, 0x00, 0x00, 0x00,                         // JL LABEL19ED69 ; line 2256
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x011C] ; line 2259
	0xDC, 0x0D, 0x18, 0xB8, 0x85, 0x00,                         // FMUL QWORD PTR [0x85B818] ; line 2260
	0xD9, 0x5C, 0x24, 0x14,                                     // FSTP DWORD PTR [ESP+0x14] ; line 2261
	0xD9, 0x44, 0x24, 0x14,                                     // FLD DWORD PTR [ESP+0x14] ; line 2262
	0xD9, 0x96, 0x1C, 0x01, 0x00, 0x00,                         // FST DWORD PTR [ESI+0x011C] ; line 2263
	0xD9, 0x9E, 0x20, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0120] ; line 2264
	0x8A, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV AL,[ESI+0x0113] ; line 2266
	0x80, 0xF8, 0x1E,                                           // CMP AL,0x1E ; line 2267
	0x0F, 0x82, 0xE7, 0x11, 0x00, 0x00,                         // JB LABEL19E2D8 ; line 2268
	0x80, 0xE8, 0x1E,                                           // SUB AL,0x1E ; line 2270
	0x88, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x0113],AL ; line 2271
	0xE9, 0xCA, 0x11, 0x00, 0x00,                               // JMP LABEL19E2B8 ; line 2272
	0x6A, 0x64,                                                 // PUSH 0x64 ; line 2275
	0x6A, 0x14,                                                 // PUSH 0x14 ; line 2276
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2277
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CF60 ; line 2278
	0xE9, 0xBA, 0x11, 0x00, 0x00,                               // JMP LABEL19E2B8 ; line 2279
	0x6A, 0x02,                                                 // PUSH 0x02 ; line 2282
	0x6A, 0x00,                                                 // PUSH 0x00 ; line 2283
	0x6A, 0x00,                                                 // PUSH 0x00 ; line 2284
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE90 ; line 2285
	0x84, 0xC0,                                                 // TEST AL,AL ; line 2286
	0x0F, 0x85, 0xB6, 0x11, 0x00, 0x00,                         // JNE LABEL19E2D8 ; line 2287
	0xD9, 0xEE,                                                 // FLDZ ; line 2289
	0xBD, 0x01, 0x00, 0x00, 0x00,                               // MOV EBP,0x00000001 ; line 2290
	0x39, 0xAE, 0x44, 0x01, 0x00, 0x00,                         // CMP [ESI+0x0144],EBP ; line 2291
	0x0F, 0x85, 0xA2, 0x03, 0x00, 0x00,                         // JNE LABEL19F0FF ; line 2292
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x0398] ; line 2294
	0x0F, 0xB7, 0x88, 0x3C, 0x01, 0x00, 0x00,                   // MOVZX ECX,WORD PTR [EAX+0x0000013C] ; line 2295
	0x66, 0x81, 0xF9, 0x1C, 0x02,                               // CMP CX,0x021C ; line 2296
	0x0F, 0x8C, 0x8A, 0x03, 0x00, 0x00,                         // JL LABEL19F0FF ; line 2297
	0x66, 0x81, 0xF9, 0x20, 0x02,                               // CMP CX,0x0220 ; line 2299
	0x0F, 0x8F, 0x7F, 0x03, 0x00, 0x00,                         // JG LABEL19F0FF ; line 2300
	0x0F, 0xB7, 0x80, 0x3E, 0x01, 0x00, 0x00,                   // MOVZX EAX,WORD PTR [EAX+0x0000013E] ; line 2302
	0x66, 0x39, 0xE8,                                           // CMP AX,BP ; line 2303
	0x0F, 0x84, 0x0B, 0x00, 0x00, 0x00,                         // JE LABEL19EDD8 ; line 2304
	0x66, 0x81, 0xF8, 0x02, 0x00,                               // CMP AX,0x0002 ; line 2306
	0x0F, 0x85, 0x64, 0x03, 0x00, 0x00,                         // JNE LABEL19F0FF ; line 2307
	0x8B, 0x96, 0x5C, 0x03, 0x00, 0x00,                         // MOV EDX,[ESI+0x035C] ; line 2310
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 2311
	0xD9, 0x02,                                                 // FLD DWORD PTR [EDX] ; line 2312
	0x8B, 0x86, 0x70, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x0170] ; line 2313
	0x0F, 0xBE, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVSX ECX,BYTE PTR [ESI+0x0104] ; line 2314
	0xD9, 0x9E, 0x80, 0x03, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0380] ; line 2315
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0x000000EC] ; line 2316
	0x89, 0x4C, 0x24, 0x14,                                     // MOV [ESP+0x14],ECX ; line 2317
	0xD8, 0xA6, 0xEC, 0x00, 0x00, 0x00,                         // FSUB DWORD PTR [ESI+0x00EC] ; line 2318
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                         // SUB ESP,0x08 ; line 2319
	0xDB, 0x44, 0x24, 0x1C,                                     // FILD DWORD PTR [ESP+0x1C] ; line 2320
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 2321
	0xD9, 0x5C, 0x24, 0x1C,                                     // FSTP DWORD PTR [ESP+0x1C] ; line 2322
	0xD9, 0x44, 0x24, 0x1C,                                     // FLD DWORD PTR [ESP+0x1C] ; line 2323
	0xD9, 0x5C, 0x24, 0x04,                                     // FSTP DWORD PTR [ESP+0x04] ; line 2324
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0x000000F0] ; line 2325
	0xDC, 0x05, 0x20, 0x7B, 0x85, 0x00,                         // FADD QWORD PTR [0x857B20] ; line 2326
	0xD8, 0xA6, 0xF0, 0x00, 0x00, 0x00,                         // FSUB DWORD PTR [ESI+0x00F0] ; line 2327
	0xD9, 0x5C, 0x24, 0x1C,                                     // FSTP DWORD PTR [ESP+0x1C] ; line 2328
	0xD9, 0x44, 0x24, 0x1C,                                     // FLD DWORD PTR [ESP+0x1C] ; line 2329
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2330
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409760 ; line 2331
	0x8B, 0x9E, 0x5C, 0x03, 0x00, 0x00,                         // MOV EBX,[ESI+0x035C] ; line 2332
	0xD9, 0xE0,                                                 // FCHS ; line 2333
	0xD9, 0x5C, 0x24, 0x1C,                                     // FSTP DWORD PTR [ESP+0x1C] ; line 2334
	0x81, 0xC4, 0x08, 0x00, 0x00, 0x00,                         // ADD ESP,0x08 ; line 2335
	0xD9, 0x44, 0x24, 0x14,                                     // FLD DWORD PTR [ESP+0x14] ; line 2336
	0xD9, 0xC0,                                                 // FLD ST0 ; line 2337
	0xD8, 0x23,                                                 // FSUB DWORD PTR [EBX] ; line 2338
	0xD9, 0x5C, 0x24, 0x14,                                     // FSTP DWORD PTR [ESP+0x14] ; line 2339
	0xD9, 0x44, 0x24, 0x14,                                     // FLD DWORD PTR [ESP+0x14] ; line 2340
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x820230 ; line 2341
	0x99,                                                       // CDQ ; line 2342
	0xB9, 0x68, 0x01, 0x00, 0x00,                               // MOV ECX,0x00000168 ; line 2343
	0xF7, 0xF9,                                                 // IDIV ECX ; line 2344
	0x89, 0x54, 0x24, 0x14,                                     // MOV [ESP+0x14],EDX ; line 2345
	0xDB, 0x44, 0x24, 0x14,                                     // FILD DWORD PTR [ESP+0x14] ; line 2346
	0xD9, 0x5C, 0x24, 0x14,                                     // FSTP DWORD PTR [ESP+0x14] ; line 2347
	0xD9, 0x05, 0x3C, 0x15, 0x87, 0x00,                         // FLD DWORD PTR [0x87153C] ; line 2348
	0xD9, 0x44, 0x24, 0x14,                                     // FLD DWORD PTR [ESP+0x14] ; line 2349
	0xD8, 0xD1,                                                 // FCOM ST1 ; line 2350
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2351
	0xDD, 0xD9,                                                 // FSTP ST1 ; line 2352
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2353
	0xDD, 0x05, 0xE8, 0x81, 0x85, 0x00,                         // FLD QWORD PTR [0x8581E8] ; line 2354
	0x0F, 0x85, 0x0E, 0x00, 0x00, 0x00,                         // JNE LABEL19EE9D ; line 2355
	0xDC, 0xE9,                                                 // FSUB ST1,ST0 ; line 2357
	0xD9, 0xC9,                                                 // FXCH ST1 ; line 2358
	0xD9, 0x5C, 0x24, 0x14,                                     // FSTP DWORD PTR [ESP+0x14] ; line 2359
	0xD9, 0x44, 0x24, 0x14,                                     // FLD DWORD PTR [ESP+0x14] ; line 2360
	0xD9, 0xC9,                                                 // FXCH ST1 ; line 2361
	0xD9, 0x05, 0x18, 0xBA, 0x85, 0x00,                         // FLD DWORD PTR [0x85BA18] ; line 2363
	0xD8, 0xDA,                                                 // FCOMP ST2 ; line 2364
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2365
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2366
	0x0F, 0x85, 0x0F, 0x00, 0x00, 0x00,                         // JNE LABEL19EEB8 ; line 2367
	0xDE, 0xC1,                                                 // FADDP ; line 2369
	0xD9, 0x5C, 0x24, 0x14,                                     // FSTP DWORD PTR [ESP+0x14] ; line 2370
	0xD9, 0x44, 0x24, 0x14,                                     // FLD DWORD PTR [ESP+0x14] ; line 2371
	0xE9, 0x02, 0x00, 0x00, 0x00,                               // JMP LABEL19EEBA ; line 2372
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 2375
	0x8B, 0x96, 0x98, 0x03, 0x00, 0x00,                         // MOV EDX,[ESI+0x0398] ; line 2377
	0xD9, 0x05, 0x94, 0xAE, 0x85, 0x00,                         // FLD DWORD PTR [0x85AE94] ; line 2378
	0x8A, 0x82, 0xA6, 0x06, 0x00, 0x00,                         // MOV AL,[EDX+0x0006A6] ; line 2379
	0xD9, 0x5C, 0x24, 0x14,                                     // FSTP DWORD PTR [ESP+0x14] ; line 2380
	0x80, 0xF8, 0x03,                                           // CMP AL,0x03 ; line 2381
	0x0F, 0x8C, 0x0A, 0x00, 0x00, 0x00,                         // JL LABEL19EEDE ; line 2382
	0xD9, 0x05, 0x30, 0xB8, 0x85, 0x00,                         // FLD DWORD PTR [0x85B830] ; line 2384
	0xD9, 0x5C, 0x24, 0x14,                                     // FSTP DWORD PTR [ESP+0x14] ; line 2385
	0x80, 0xF8, 0x04,                                           // CMP AL,0x04 ; line 2387
	0x0F, 0x8C, 0x0A, 0x00, 0x00, 0x00,                         // JL LABEL19EEEC ; line 2388
	0xD9, 0x05, 0xE4, 0xBB, 0x85, 0x00,                         // FLD DWORD PTR [0x85BBE4] ; line 2390
	0xD9, 0x5C, 0x24, 0x14,                                     // FSTP DWORD PTR [ESP+0x14] ; line 2391
	0xD9, 0xC0,                                                 // FLD ST0 ; line 2393
	0xD9, 0xE1,                                                 // FABS ; line 2394
	0xD9, 0x5C, 0x24, 0x18,                                     // FSTP DWORD PTR [ESP+0x18] ; line 2395
	0xD9, 0x44, 0x24, 0x18,                                     // FLD DWORD PTR [ESP+0x18] ; line 2396
	0xD9, 0x44, 0x24, 0x14,                                     // FLD DWORD PTR [ESP+0x14] ; line 2397
	0xD8, 0xD1,                                                 // FCOM ST1 ; line 2398
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2399
	0xDD, 0xD9,                                                 // FSTP ST1 ; line 2400
	0xF6, 0xC4, 0x01,                                           // TEST AH,0x01 ; line 2401
	0x0F, 0x85, 0x11, 0x00, 0x00, 0x00,                         // JNE LABEL19EF15 ; line 2402
	0xDD, 0xD9,                                                 // FSTP ST1 ; line 2404
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 2405
	0xD9, 0x9E, 0x80, 0x03, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0380] ; line 2406
	0xD9, 0xEE,                                                 // FLDZ ; line 2407
	0xE9, 0x4E, 0x00, 0x00, 0x00,                               // JMP LABEL19EF55 ; line 2408
	0xDD, 0xDA,                                                 // FSTP ST2 ; line 2411
	0xD9, 0xEE,                                                 // FLDZ ; line 2412
	0xD8, 0xD1,                                                 // FCOM ST1 ; line 2413
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2414
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2415
	0x0F, 0x85, 0x17, 0x00, 0x00, 0x00,                         // JNE LABEL19EF36 ; line 2416
	0xDD, 0xD9,                                                 // FSTP ST1 ; line 2417
	0xD9, 0x86, 0x80, 0x03, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x0380] ; line 2418
	0xDE, 0xE2,                                                 // FSUBRP ST2 ; line 2419
	0xD9, 0xC9,                                                 // FXCH ST1 ; line 2420
	0xD9, 0x9E, 0x80, 0x03, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0380] ; line 2421
	0xE9, 0x26, 0x00, 0x00, 0x00,                               // JMP LABEL19EF55 ; line 2422
	0xD8, 0xD1,                                                 // FCOM ST1 ; line 2425
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2426
	0xDD, 0xD9,                                                 // FSTP ST1 ; line 2427
	0xF6, 0xC4, 0x05,                                           // TEST AH,0x05 ; line 2428
	0x0F, 0x8A, 0x15, 0x00, 0x00, 0x00,                         // JP LABEL19EF53 ; line 2429
	0xD9, 0x86, 0x80, 0x03, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x0380] ; line 2431
	0xDE, 0xC2,                                                 // FADDP ST2 ; line 2432
	0xD9, 0xC9,                                                 // FXCH ST1 ; line 2433
	0xD9, 0x9E, 0x80, 0x03, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0380] ; line 2434
	0xE9, 0x02, 0x00, 0x00, 0x00,                               // JMP LABEL19EF55 ; line 2435
	0xDD, 0xD9,                                                 // FSTP ST1 ; line 2438
	0xD9, 0x86, 0x80, 0x03, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x0380] ; line 2440
	0x0F, 0xB6, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVZX ECX,BYTE PTR [ESI+0x0104] ; line 2441
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 2442
	0xD9, 0x5C, 0x24, 0x34,                                     // FSTP DWORD PTR [ESP+0x34] ; line 2443
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 2444
	0xD9, 0x5C, 0x24, 0x3C,                                     // FSTP DWORD PTR [ESP+0x3C] ; line 2445
	0x8D, 0x44, 0x24, 0x38,                                     // LEA EAX,[ESP+0x38] ; line 2446
	0xD9, 0x43, 0x0C,                                           // FLD DWORD PTR [EBX+0x0C] ; line 2447
	0x50,                                                       // PUSH EAX ; line 2448
	0xDC, 0x05, 0xC8, 0x77, 0x86, 0x00,                         // FADD QWORD PTR [0x8677C8] ; line 2449
	0x55,                                                       // PUSH EBP ; line 2450
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 2451
	0x66, 0x39, 0xAE, 0x3E, 0x01, 0x00, 0x00,                   // CMP [ESI+0x013E],BP ; line 2452
	0x51,                                                       // PUSH ECX ; line 2453
	0xD9, 0x5C, 0x24, 0x50,                                     // FSTP DWORD PTR [ESP+0x50] ; line 2454
	0x51,                                                       // PUSH ECX ; line 2455
	0x0F, 0x85, 0x6A, 0x00, 0x00, 0x00,                         // JNE LABEL19EFF6 ; line 2456
	0xD9, 0x05, 0xF0, 0x89, 0x85, 0x00,                         // FLD DWORD PTR [0x8589F0] ; line 2458
	0xD9, 0x5C, 0x24, 0x50,                                     // FSTP DWORD PTR [ESP+0x50] ; line 2459
	0xD9, 0x03,                                                 // FLD DWORD PTR [EBX] ; line 2460
	0xD9, 0xE0,                                                 // FCHS ; line 2461
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2462
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 2463
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 2464
	0x8B, 0x96, 0x5C, 0x03, 0x00, 0x00,                         // MOV EDX,[ESI+0x035C] ; line 2465
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00F0] ; line 2466
	0xD9, 0x5C, 0x24, 0x2C,                                     // FSTP DWORD PTR [ESP+0x2C] ; line 2467
	0xD9, 0x44, 0x24, 0x2C,                                     // FLD DWORD PTR [ESP+0x2C] ; line 2468
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2469
	0x51,                                                       // PUSH ECX ; line 2470
	0xD9, 0x02,                                                 // FLD DWORD PTR [EDX] ; line 2471
	0xD9, 0xE0,                                                 // FCHS ; line 2472
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2473
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 2474
	0x0F, 0xBE, 0x86, 0x04, 0x01, 0x00, 0x00,                   // MOVSX EAX,BYTE PTR [ESI+0x0104] ; line 2475
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 2476
	0x89, 0x44, 0x24, 0x30,                                     // MOV [ESP+0x30],EAX ; line 2477
	0xDB, 0x44, 0x24, 0x30,                                     // FILD DWORD PTR [ESP+0x30] ; line 2478
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 2479
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00EC] ; line 2480
	0xD9, 0x5C, 0x24, 0x30,                                     // FSTP DWORD PTR [ESP+0x30] ; line 2481
	0xD9, 0x44, 0x24, 0x30,                                     // FLD DWORD PTR [ESP+0x30] ; line 2482
	0xE9, 0x61, 0x00, 0x00, 0x00,                               // JMP LABEL19F057 ; line 2483
	0xD9, 0xE8,                                                 // FLD1 ; line 2486
	0xD9, 0x5C, 0x24, 0x50,                                     // FSTP DWORD PTR [ESP+0x50] ; line 2487
	0xD9, 0x03,                                                 // FLD DWORD PTR [EBX] ; line 2488
	0xD9, 0xE0,                                                 // FCHS ; line 2489
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2490
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 2491
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 2492
	0x8B, 0x96, 0x5C, 0x03, 0x00, 0x00,                         // MOV EDX,[ESI+0x035C] ; line 2493
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00F0] ; line 2494
	0xD9, 0x5C, 0x24, 0x2C,                                     // FSTP DWORD PTR [ESP+0x2C] ; line 2495
	0xD9, 0x44, 0x24, 0x2C,                                     // FLD DWORD PTR [ESP+0x2C] ; line 2496
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2497
	0x51,                                                       // PUSH ECX ; line 2498
	0xD9, 0x02,                                                 // FLD DWORD PTR [EDX] ; line 2499
	0xD9, 0xE0,                                                 // FCHS ; line 2500
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2501
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 2502
	0x0F, 0xBE, 0x86, 0x04, 0x01, 0x00, 0x00,                   // MOVSX EAX,BYTE PTR [ESI+0x0104] ; line 2503
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 2504
	0x89, 0x44, 0x24, 0x30,                                     // MOV [ESP+0x30],EAX ; line 2505
	0xDB, 0x44, 0x24, 0x30,                                     // FILD DWORD PTR [ESP+0x30] ; line 2506
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 2507
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00EC] ; line 2508
	0xD9, 0x5C, 0x24, 0x30,                                     // FSTP DWORD PTR [ESP+0x30] ; line 2509
	0xD9, 0x44, 0x24, 0x30,                                     // FLD DWORD PTR [ESP+0x30] ; line 2510
	0x8B, 0x17,                                                 // MOV EDX,[EDI] ; line 2512
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2513
	0x68, 0x2C, 0x03, 0x00, 0x00,                               // PUSH 0x0000032C ; line 2514
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2515
	0xFF, 0xD2,                                                 // CALL EDX ; line 2516
	0xD9, 0x05, 0x38, 0x15, 0x87, 0x00,                         // FLD DWORD PTR [0x871538] ; line 2517
	0x0F, 0xB6, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVZX ECX,BYTE PTR [ESI+0x0104] ; line 2518
	0xD9, 0x5C, 0x24, 0x3C,                                     // FSTP DWORD PTR [ESP+0x3C] ; line 2519
	0x8B, 0x96, 0x5C, 0x03, 0x00, 0x00,                         // MOV EDX,[ESI+0x035C] ; line 2520
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 2521
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 2522
	0xD9, 0x02,                                                 // FLD DWORD PTR [EDX] ; line 2523
	0x8D, 0x44, 0x24, 0x38,                                     // LEA EAX,[ESP+0x38] ; line 2524
	0x50,                                                       // PUSH EAX ; line 2525
	0xD9, 0xE0,                                                 // FCHS ; line 2526
	0x55,                                                       // PUSH EBP ; line 2527
	0x51,                                                       // PUSH ECX ; line 2528
	0x51,                                                       // PUSH ECX ; line 2529
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 2530
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2531
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 2532
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 2533
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x035C] ; line 2534
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00F0] ; line 2535
	0xD9, 0x5C, 0x24, 0x2C,                                     // FSTP DWORD PTR [ESP+0x2C] ; line 2536
	0xD9, 0x44, 0x24, 0x2C,                                     // FLD DWORD PTR [ESP+0x2C] ; line 2537
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2538
	0x51,                                                       // PUSH ECX ; line 2539
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 2540
	0xD9, 0xE0,                                                 // FCHS ; line 2541
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2542
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 2543
	0x0F, 0xBE, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVSX ECX,BYTE PTR [ESI+0x0104] ; line 2544
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 2545
	0x8B, 0x17,                                                 // MOV EDX,[EDI] ; line 2546
	0x89, 0x4C, 0x24, 0x30,                                     // MOV [ESP+0x30],ECX ; line 2547
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2548
	0xDB, 0x44, 0x24, 0x30,                                     // FILD DWORD PTR [ESP+0x30] ; line 2549
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 2550
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00EC] ; line 2551
	0xD9, 0x5C, 0x24, 0x30,                                     // FSTP DWORD PTR [ESP+0x30] ; line 2552
	0xD9, 0x44, 0x24, 0x30,                                     // FLD DWORD PTR [ESP+0x30] ; line 2553
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2554
	0x68, 0x2C, 0x03, 0x00, 0x00,                               // PUSH 0x0000032C ; line 2555
	0xFF, 0xD2,                                                 // CALL EDX ; line 2556
	0x8B, 0x06,                                                 // MOV EAX,[ESI] ; line 2557
	0x8B, 0x50, 0x20,                                           // MOV EDX,[EAX+0x20] ; line 2558
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2559
	0xFF, 0xD2,                                                 // CALL EDX ; line 2560
	0xD9, 0xEE,                                                 // FLDZ ; line 2561
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x5A, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x0144],0x5A ; line 2563
	0x0F, 0x8C, 0xDB, 0x0D, 0x00, 0x00,                         // JL LABEL19FC10 ; line 2564
	0x0F, 0xB6, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVZX ECX,BYTE PTR [ESI+0x0104] ; line 2566
	0xD9, 0x54, 0x24, 0x34,                                     // FST DWORD PTR [ESP+0x34] ; line 2567
	0x8B, 0x96, 0x5C, 0x03, 0x00, 0x00,                         // MOV EDX,[ESI+0x035C] ; line 2568
	0xD9, 0x54, 0x24, 0x38,                                     // FST DWORD PTR [ESP+0x38] ; line 2569
	0xD9, 0x05, 0x60, 0x78, 0x86, 0x00,                         // FLD DWORD PTR [0x867860] ; line 2570
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 2571
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 2572
	0xD9, 0x5C, 0x24, 0x40,                                     // FSTP DWORD PTR [ESP+0x40] ; line 2573
	0x8D, 0x44, 0x24, 0x38,                                     // LEA EAX,[ESP+0x38] ; line 2574
	0x50,                                                       // PUSH EAX ; line 2575
	0xD9, 0x5C, 0x24, 0x48,                                     // FSTP DWORD PTR [ESP+0x48] ; line 2576
	0xD9, 0x02,                                                 // FLD DWORD PTR [EDX] ; line 2577
	0x55,                                                       // PUSH EBP ; line 2578
	0x51,                                                       // PUSH ECX ; line 2579
	0xD9, 0xE0,                                                 // FCHS ; line 2580
	0x51,                                                       // PUSH ECX ; line 2581
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 2582
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2583
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 2584
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 2585
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x035C] ; line 2586
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00F0] ; line 2587
	0xD9, 0x5C, 0x24, 0x2C,                                     // FSTP DWORD PTR [ESP+0x2C] ; line 2588
	0xD9, 0x44, 0x24, 0x2C,                                     // FLD DWORD PTR [ESP+0x2C] ; line 2589
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2590
	0x51,                                                       // PUSH ECX ; line 2591
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 2592
	0xD9, 0xE0,                                                 // FCHS ; line 2593
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2594
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 2595
	0x0F, 0xBE, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVSX ECX,BYTE PTR [ESI+0x0104] ; line 2596
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 2597
	0x89, 0x4C, 0x24, 0x30,                                     // MOV [ESP+0x30],ECX ; line 2598
	0xDB, 0x44, 0x24, 0x30,                                     // FILD DWORD PTR [ESP+0x30] ; line 2599
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 2600
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00EC] ; line 2601
	0xD9, 0x5C, 0x24, 0x30,                                     // FSTP DWORD PTR [ESP+0x30] ; line 2602
	0xD9, 0x44, 0x24, 0x30,                                     // FLD DWORD PTR [ESP+0x30] ; line 2603
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2605
	0x68, 0x2C, 0x03, 0x00, 0x00,                               // PUSH 0x0000032C ; line 2606
	0x8B, 0x17,                                                 // MOV EDX,[EDI] ; line 2607
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2608
	0xFF, 0xD2,                                                 // CALL EDX ; line 2609
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x0398] ; line 2610
	0x6A, 0x11,                                                 // PUSH 0x11 ; line 2611
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x464980 ; line 2612
	0x81, 0x86, 0x4C, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, // ADD DWORD PTR [ESI+0x034C],0xFFFFFFFF ; line 2613
	0x5F,                                                       // POP EDI ; line 2614
	0x5E,                                                       // POP ESI ; line 2615
	0x5D,                                                       // POP EBP ; line 2616
	0x5B,                                                       // POP EBX ; line 2617
	0x89, 0xEC,                                                 // MOV ESP,EBP ; line 2618
	0x5D,                                                       // POP EBP ; line 2619
	0xC3,                                                       // RET ; line 2620
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x0144],0x04 ; line 2623
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x011C] ; line 2624
	0xDC, 0x0D, 0x18, 0xB8, 0x85, 0x00,                         // FMUL QWORD PTR [0x85B818] ; line 2625
	0xD9, 0x5C, 0x24, 0x14,                                     // FSTP DWORD PTR [ESP+0x14] ; line 2626
	0xD9, 0x44, 0x24, 0x14,                                     // FLD DWORD PTR [ESP+0x14] ; line 2627
	0xD9, 0x96, 0x1C, 0x01, 0x00, 0x00,                         // FST DWORD PTR [ESI+0x011C] ; line 2628
	0xD9, 0x9E, 0x20, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0120] ; line 2629
	0x0F, 0x8C, 0xF5, 0x0C, 0x00, 0x00,                         // JL LABEL19E2B8 ; line 2630
	0xE9, 0x09, 0xFB, 0xFF, 0xFF,                               // JMP LABEL19ED4E ; line 2632
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x0144],0x04 ; line 2635
	0xD9, 0x86, 0x1C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x011C] ; line 2636
	0xDC, 0x0D, 0x18, 0xB8, 0x85, 0x00,                         // FMUL QWORD PTR [0x85B818] ; line 2637
	0xD9, 0x5C, 0x24, 0x14,                                     // FSTP DWORD PTR [ESP+0x14] ; line 2638
	0xD9, 0x44, 0x24, 0x14,                                     // FLD DWORD PTR [ESP+0x14] ; line 2639
	0xD9, 0x96, 0x1C, 0x01, 0x00, 0x00,                         // FST DWORD PTR [ESI+0x011C] ; line 2640
	0xD9, 0x9E, 0x20, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0120] ; line 2641
	0x0F, 0x8C, 0xC0, 0x0C, 0x00, 0x00,                         // JL LABEL19E2B8 ; line 2642
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x0194],0x00 ; line 2644
	0xE9, 0xCD, 0xFA, 0xFF, 0xFF,                               // JMP LABEL19ED4E ; line 2645
	0x60,                                                       // PUSHAD ; line 2649
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 2650
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x1C, 0x02,       // CMP WORD PTR [EAX+0x13C],0x021C ; line 2651
	0x0F, 0x8C, 0x41, 0x00, 0x00, 0x00,                         // JL SHORT A5LABEL1 ; line 2652
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x20, 0x02,       // CMP WORD PTR [EAX+0x13C],0x0220 ; line 2653
	0x0F, 0x8D, 0x32, 0x00, 0x00, 0x00,                         // JNL SHORT A5LABEL1 ; line 2654
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [EAX+0x13E],0x00 ; line 2655
	0x0F, 0x85, 0x23, 0x00, 0x00, 0x00,                         // JNE SHORT A5LABEL1 ; line 2656
	0x66, 0x81, 0xB8, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [EAX+0x140],0x00 ; line 2657
	0x0F, 0x85, 0x14, 0x00, 0x00, 0x00,                         // JNE SHORT A5LABEL1 ; line 2658
	0x66, 0x81, 0xB8, 0x44, 0x01, 0x00, 0x00, 0x01, 0x00,       // CMP WORD PTR [EAX+0x144],0x01 ; line 2659
	0x0F, 0x8F, 0x05, 0x00, 0x00, 0x00,                         // JG SHORT A5LABEL1 ; line 2660
	0xE9, 0x0B, 0x00, 0x00, 0x00,                               // JMP SHORT A5LABEL2 ; line 2661
	0x61,                                                       // POPAD ; line 2663
	0xBB, 0x02, 0x00, 0x00, 0x00,                               // MOV EBX,0x00000002 ; line 2664
	0xE9, 0x0F, 0x00, 0x00, 0x00,                               // JMP SHORT A5LABEL3 ; line 2665
	0x81, 0x86, 0x4C, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, // ADD DWORD PTR [ESI+0x34C],0xFFFFFFFF ; line 2667
	0xE9, 0xE6, 0xFF, 0xFF, 0xFF,                               // JMP SHORT A5LABEL1 ; line 2668
	0x90,                                                       // NOP ; line 2670
	0x53,                                                       // PUSH EBX ; line 2672
	0x6A, 0x00,                                                 // PUSH 0x00 ; line 2673
	0x6A, 0x00,                                                 // PUSH 0x00 ; line 2674
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE90 ; line 2675
	0x84, 0xC0,                                                 // TEST AL,AL ; line 2676
	0x0F, 0x85, 0x3F, 0x0C, 0x00, 0x00,                         // JNE LABEL19E2D8 ; line 2677
	0x8B, 0x86, 0x90, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x190] ; line 2684
	0x60,                                                       // PUSHAD ; line 2686
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 2687
	0x81, 0xB9, 0x44, 0x01, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x144],0x0F ; line 2688
	0x0F, 0x84, 0xAF, 0x00, 0x00, 0x00,                         // JE SHORT A6LABELC4 ; line 2689
	0x61,                                                       // POPAD ; line 2690
	0x81, 0xF8, 0x00, 0x00, 0x00, 0x00,                         // CMP EAX,0x00 ; line 2692
	0x0F, 0x84, 0x24, 0x00, 0x00, 0x00,                         // JE SHORT A6LABELC1 ; line 2693
	0x81, 0xF8, 0x01, 0x00, 0x00, 0x00,                         // CMP EAX,0x01 ; line 2694
	0x0F, 0x84, 0x1D, 0x00, 0x00, 0x00,                         // JE SHORT A6LABELC2 ; line 2695
	0x81, 0xF8, 0x02, 0x00, 0x00, 0x00,                         // CMP EAX,0x02 ; line 2696
	0x0F, 0x84, 0x16, 0x00, 0x00, 0x00,                         // JE SHORT A6LABELC2B ; line 2697
	0x81, 0xF8, 0x07, 0x00, 0x00, 0x00,                         // CMP EAX,0x07 ; line 2698
	0x0F, 0x84, 0x0A, 0x00, 0x00, 0x00,                         // JE SHORT A6LABELC2B ; line 2699
	0xE9, 0x14, 0x00, 0x00, 0x00,                               // JMP SHORT A6LABELC3 ; line 2701
	0xE9, 0xF1, 0x00, 0x00, 0x00,                               // JMP LABEL19F266 ; line 2703
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000001 ; line 2706
	0xE9, 0xEC, 0xFF, 0xFF, 0xFF,                               // JMP SHORT A6LABELC2 ; line 2707
	0x60,                                                       // PUSHAD ; line 2710
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 2711
	0x81, 0xB9, 0x44, 0x01, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x00, // CMP DWORD PTR [ECX+0x144],0x0F ; line 2712
	0x0F, 0x84, 0x4E, 0x00, 0x00, 0x00,                         // JE SHORT A6LABELC4 ; line 2713
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 2714
	0xD9, 0xEE,                                                 // FLDZ ; line 2715
	0xDE, 0xD9,                                                 // FCOMPP ; line 2716
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2717
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2718
	0x0F, 0x84, 0x39, 0x00, 0x00, 0x00,                         // JE SHORT A6LABELC4 ; line 2719
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 2720
	0xD9, 0xEE,                                                 // FLDZ ; line 2721
	0xDE, 0xD9,                                                 // FCOMPP ; line 2722
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2723
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2724
	0x0F, 0x84, 0x24, 0x00, 0x00, 0x00,                         // JE SHORT A6LABELC4 ; line 2725
	0xE9, 0x6D, 0x00, 0x00, 0x00,                               // JMP A6LABELY ; line 2726
	0xD9, 0x05, 0xF4, 0xB8, 0x85, 0x00,                         // FLD DWORD PTR [0x85B8F4] ; line 2729
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 2730
	0xDE, 0xD9,                                                 // FCOMPP ; line 2731
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2732
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2733
	0x0F, 0x84, 0x06, 0x00, 0x00, 0x00,                         // JE SHORT A6LABELC4 ; line 2734
	0x61,                                                       // POPAD ; line 2736
	0xE9, 0xAC, 0x00, 0x00, 0x00,                               // JMP LABEL19F282 ; line 2737
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00000001 ; line 2740
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 2741
	0x60,                                                       // PUSHAD ; line 2742
	0x8B, 0xB6, 0x98, 0x03, 0x00, 0x00,                         // MOV ESI,[ESI+0x398] ; line 2743
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x1C, 0x02,       // CMP WORD PTR [ESI+0x13C],0x021C ; line 2744
	0x0F, 0x8C, 0x21, 0x00, 0x00, 0x00,                         // JL SHORT A6LABELC5 ; line 2745
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x20, 0x02,       // CMP WORD PTR [ESI+0x13C],0x0220 ; line 2746
	0x0F, 0x8D, 0x12, 0x00, 0x00, 0x00,                         // JNL SHORT A6LABELC5 ; line 2747
	0x66, 0xC7, 0x86, 0x40, 0x01, 0x00, 0x00, 0x03, 0x00,       // MOV WORD PTR [ESI+0x140],0x0003 ; line 2748
	0x66, 0xC7, 0x86, 0x42, 0x01, 0x00, 0x00, 0x0A, 0x00,       // MOV WORD PTR [ESI+0x142],0x000A ; line 2749
	0x61,                                                       // POPAD ; line 2751
	0xE9, 0xAC, 0xFF, 0xFF, 0xFF,                               // JMP SHORT A6LABELC6 ; line 2752
	0xD9, 0x05, 0x00, 0xBD, 0x85, 0x00,                         // FLD DWORD PTR [0x85BD00] ; line 2755
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 2756
	0xDE, 0xD9,                                                 // FCOMPP ; line 2757
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2758
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2759
	0x0F, 0x84, 0x99, 0xFF, 0xFF, 0xFF,                         // JE A6LABELC4 ; line 2760
	0xE9, 0x75, 0xFF, 0xFF, 0xFF,                               // JMP A6LABELZ ; line 2761
	0x90,                                                       // NOP ; line 2763
	0x85, 0xC0,                                                 // TEST EAX,EAX ; line 2764
	0x0F, 0x84, 0x37, 0x00, 0x00, 0x00,                         // JE LABEL19F282 ; line 2765
	0x39, 0xE8,                                                 // CMP EAX,EBP ; line 2767
	0x0F, 0x85, 0x2F, 0x00, 0x00, 0x00,                         // JNE LABEL19F282 ; line 2768
	0x0F, 0xB7, 0xBE, 0x6C, 0x03, 0x00, 0x00,                   // MOVZX EDI,WORD PTR [ESI+0x036C] ; line 2773
	0x66, 0x85, 0xFF,                                           // TEST DI,DI ; line 2774
	0x8D, 0x6B, 0xFF,                                           // LEA EBP,[EBX-0x01] ; line 2775
	0x0F, 0x85, 0xA6, 0x05, 0x00, 0x00,                         // JNE LABEL19F75E ; line 2776
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x0398] ; line 2779
	0x66, 0x89, 0xA8, 0xD0, 0x07, 0x00, 0x00,                   // MOV [EAX+0x000007D0],BP ; line 2780
	0x66, 0x89, 0x9E, 0x6C, 0x03, 0x00, 0x00,                   // MOV [ESI+0x036C],BX ; line 2782
	0x5F,                                                       // POP EDI ; line 2783
	0x5E,                                                       // POP ESI ; line 2784
	0x5D,                                                       // POP EBP ; line 2785
	0x5B,                                                       // POP EBX ; line 2786
	0x89, 0xEC,                                                 // MOV ESP,EBP ; line 2787
	0x5D,                                                       // POP EBP ; line 2788
	0xC3,                                                       // RET ; line 2789
	0x0F, 0xB7, 0xBE, 0x6C, 0x03, 0x00, 0x00,                   // MOVZX EDI,WORD PTR [ESI+0x036C] ; line 2793
	0x66, 0x85, 0xFF,                                           // TEST DI,DI ; line 2794
	0x8D, 0x6B, 0xFF,                                           // LEA EBP,[EBX-0x01] ; line 2795
	0x0F, 0x85, 0x77, 0x05, 0x00, 0x00,                         // JNE LABEL19F75E ; line 2796
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x0398] ; line 2799
	0x0F, 0xB7, 0x91, 0x3C, 0x01, 0x00, 0x00,                   // MOVZX EDX,WORD PTR [ECX+0x0000013C] ; line 2800
	0x66, 0x81, 0xFA, 0x1C, 0x02,                               // CMP DX,0x021C ; line 2802
	0x0F, 0x8C, 0x0A, 0x00, 0x00, 0x00,                         // JL SHORT A7LABELB1 ; line 2803
	0x66, 0x81, 0xFA, 0x20, 0x02,                               // CMP DX,0x0220 ; line 2804
	0xE9, 0x0A, 0x00, 0x00, 0x00,                               // JMP SHORT A7LABELB2 ; line 2805
	0x66, 0x81, 0xFA, 0x00, 0x00,                               // CMP DX,0x0000 ; line 2807
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP SHORT A7LABELB2 ; line 2808
	0x0F, 0x8C, 0xD5, 0x00, 0x00, 0x00,                         // JL LABEL19F35E ; line 2811
	0xE9, 0x11, 0x00, 0x00, 0x00,                               // JMP LABEL19F2A5 ; line 2812
	0x0F, 0x84, 0xCA, 0x00, 0x00, 0x00,                         // JE LABEL19F35E ; line 2814
	0x66, 0x81, 0xFA, 0x1F, 0x02,                               // CMP DX,0x021F ; line 2816
	0x0F, 0x84, 0xBF, 0x00, 0x00, 0x00,                         // JE LABEL19F35E ; line 2817
	0xD9, 0xEE,                                                 // FLDZ ; line 2820
	0x0F, 0xB6, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVZX EDX,BYTE PTR [ESI+0x0104] ; line 2821
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x035C] ; line 2822
	0xD9, 0x54, 0x24, 0x34,                                     // FST DWORD PTR [ESP+0x34] ; line 2823
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 2824
	0xD9, 0x54, 0x24, 0x38,                                     // FST DWORD PTR [ESP+0x38] ; line 2825
	0xD9, 0x05, 0x2C, 0x88, 0x85, 0x00,                         // FLD DWORD PTR [0x85882C] ; line 2826
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 2827
	0xD9, 0x5C, 0x24, 0x40,                                     // FSTP DWORD PTR [ESP+0x40] ; line 2828
	0x8D, 0x4C, 0x24, 0x38,                                     // LEA ECX,[ESP+0x38] ; line 2829
	0x51,                                                       // PUSH ECX ; line 2830
	0x55,                                                       // PUSH EBP ; line 2831
	0xD9, 0x5C, 0x24, 0x4C,                                     // FSTP DWORD PTR [ESP+0x4C] ; line 2832
	0x52,                                                       // PUSH EDX ; line 2833
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 2834
	0x51,                                                       // PUSH ECX ; line 2835
	0xD9, 0xE0,                                                 // FCHS ; line 2836
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 2837
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2838
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 2839
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 2840
	0x8B, 0x8E, 0x5C, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x035C] ; line 2841
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00F0] ; line 2842
	0xD9, 0x5C, 0x24, 0x2C,                                     // FSTP DWORD PTR [ESP+0x2C] ; line 2843
	0xD9, 0x44, 0x24, 0x2C,                                     // FLD DWORD PTR [ESP+0x2C] ; line 2844
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2845
	0x51,                                                       // PUSH ECX ; line 2846
	0xD9, 0x01,                                                 // FLD DWORD PTR [ECX] ; line 2847
	0xD9, 0xE0,                                                 // FCHS ; line 2848
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2849
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 2850
	0x0F, 0xBE, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVSX EDX,BYTE PTR [ESI+0x0104] ; line 2851
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 2852
	0x8B, 0x07,                                                 // MOV EAX,[EDI] ; line 2853
	0x89, 0x54, 0x24, 0x30,                                     // MOV [ESP+0x30],EDX ; line 2854
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2855
	0xDB, 0x44, 0x24, 0x30,                                     // FILD DWORD PTR [ESP+0x30] ; line 2856
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 2857
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00EC] ; line 2858
	0xD9, 0x5C, 0x24, 0x30,                                     // FSTP DWORD PTR [ESP+0x30] ; line 2859
	0xD9, 0x44, 0x24, 0x30,                                     // FLD DWORD PTR [ESP+0x30] ; line 2860
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2861
	0x68, 0x2C, 0x03, 0x00, 0x00,                               // PUSH 0x0000032C ; line 2862
	0xFF, 0xD0,                                                 // CALL EAX ; line 2863
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x0398] ; line 2864
	0x6A, 0x11,                                                 // PUSH 0x11 ; line 2865
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x464980 ; line 2866
	0x81, 0x86, 0x4C, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, // ADD DWORD PTR [ESI+0x034C],0xFFFFFFFF ; line 2867
	0x5F,                                                       // POP EDI ; line 2868
	0x5E,                                                       // POP ESI ; line 2869
	0x5D,                                                       // POP EBP ; line 2870
	0x5B,                                                       // POP EBX ; line 2871
	0x89, 0xEC,                                                 // MOV ESP,EBP ; line 2872
	0x5D,                                                       // POP EBP ; line 2873
	0xC3,                                                       // RET ; line 2874
	0x0F, 0xB7, 0x81, 0x3E, 0x01, 0x00, 0x00,                   // MOVZX EAX,WORD PTR [ECX+0x0000013E] ; line 2876
	0x66, 0x81, 0xF8, 0x03, 0x00,                               // CMP AX,0x0003 ; line 2877
	0x0F, 0x84, 0x55, 0x02, 0x00, 0x00,                         // JE LABEL19F55C ; line 2878
	0x66, 0x81, 0xF8, 0x05, 0x00,                               // CMP AX,0x0005 ; line 2880
	0x0F, 0x84, 0xBA, 0xFE, 0xFF, 0xFF,                         // JE LABEL19F273 ; line 2881
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x0140],0x00 ; line 2883
	0x0F, 0x85, 0x44, 0x04, 0x00, 0x00,                         // JNE LABEL19F75E ; line 2884
	0x39, 0xAE, 0x44, 0x01, 0x00, 0x00,                         // CMP [ESI+0x0144],EBP ; line 2886
	0x0F, 0x85, 0x38, 0x04, 0x00, 0x00,                         // JNE LABEL19F75E ; line 2887
	0x66, 0x81, 0xFA, 0x1C, 0x02,                               // CMP DX,0x021C ; line 2889
	0x0F, 0x8C, 0x2D, 0x04, 0x00, 0x00,                         // JL LABEL19F75E ; line 2890
	0x66, 0x81, 0xFA, 0x20, 0x02,                               // CMP DX,0x0220 ; line 2892
	0x0F, 0x8F, 0x22, 0x04, 0x00, 0x00,                         // JG LABEL19F75E ; line 2893
	0x66, 0x39, 0xE8,                                           // CMP AX,BP ; line 2895
	0x0F, 0x84, 0x09, 0x00, 0x00, 0x00,                         // JE LABEL19F3B7 ; line 2896
	0x66, 0x39, 0xD8,                                           // CMP AX,BX ; line 2898
	0x0F, 0x85, 0x10, 0x04, 0x00, 0x00,                         // JNE LABEL19F75E ; line 2899
	0x8B, 0x96, 0x5C, 0x03, 0x00, 0x00,                         // MOV EDX,[ESI+0x035C] ; line 2902
	0xD9, 0x02,                                                 // FLD DWORD PTR [EDX] ; line 2903
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                         // SUB ESP,0x08 ; line 2904
	0xD9, 0x9E, 0x80, 0x03, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0380] ; line 2905
	0x0F, 0xBE, 0x81, 0xA6, 0x06, 0x00, 0x00,                   // MOVSX EAX,BYTE PTR [ECX+0x000006A6] ; line 2906
	0x0F, 0xBE, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVSX ECX,BYTE PTR [ESI+0x0104] ; line 2907
	0x89, 0x44, 0x24, 0x20,                                     // MOV [ESP+0x20],EAX ; line 2908
	0x8B, 0x86, 0x70, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x0170] ; line 2909
	0xDB, 0x44, 0x24, 0x20,                                     // FILD DWORD PTR [ESP+0x20] ; line 2910
	0x89, 0x4C, 0x24, 0x20,                                     // MOV [ESP+0x20],ECX ; line 2911
	0xD9, 0x5C, 0x24, 0x28,                                     // FSTP DWORD PTR [ESP+0x28] ; line 2913
	0xD9, 0xEE,                                                 // FLDZ ; line 2914
	0xE9, 0x07, 0x00, 0x00, 0x00,                               // JMP LABEL19F3F4 ; line 2915
	0x90,                                                       // NOP ; line 2917
	0xDC, 0x05, 0xC8, 0x77, 0x86, 0x00,                         // FADD QWORD PTR [0x8677C8] ; line 2918
	0xD9, 0x5C, 0x24, 0x28,                                     // FSTP DWORD PTR [ESP+0x28] ; line 2920
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0x000000EC] ; line 2921
	0xD8, 0xA6, 0xEC, 0x00, 0x00, 0x00,                         // FSUB DWORD PTR [ESI+0x00EC] ; line 2922
	0xDB, 0x44, 0x24, 0x20,                                     // FILD DWORD PTR [ESP+0x20] ; line 2923
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 2924
	0xD9, 0x5C, 0x24, 0x20,                                     // FSTP DWORD PTR [ESP+0x20] ; line 2925
	0xD9, 0x44, 0x24, 0x20,                                     // FLD DWORD PTR [ESP+0x20] ; line 2926
	0xD9, 0x5C, 0x24, 0x04,                                     // FSTP DWORD PTR [ESP+0x04] ; line 2927
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0x000000F0] ; line 2928
	0xDC, 0x05, 0x20, 0x7B, 0x85, 0x00,                         // FADD QWORD PTR [0x857B20] ; line 2929
	0xD8, 0xA6, 0xF0, 0x00, 0x00, 0x00,                         // FSUB DWORD PTR [ESI+0x00F0] ; line 2930
	0xD9, 0x5C, 0x24, 0x20,                                     // FSTP DWORD PTR [ESP+0x20] ; line 2931
	0xD9, 0x44, 0x24, 0x20,                                     // FLD DWORD PTR [ESP+0x20] ; line 2932
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 2933
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409760 ; line 2934
	0x8B, 0xAE, 0x5C, 0x03, 0x00, 0x00,                         // MOV EBP,[ESI+0x035C] ; line 2935
	0xD9, 0xE0,                                                 // FCHS ; line 2936
	0xD9, 0x5C, 0x24, 0x20,                                     // FSTP DWORD PTR [ESP+0x20] ; line 2937
	0x81, 0xC4, 0x08, 0x00, 0x00, 0x00,                         // ADD ESP,0x08 ; line 2938
	0xD9, 0x44, 0x24, 0x18,                                     // FLD DWORD PTR [ESP+0x18] ; line 2939
	0xD9, 0xC0,                                                 // FLD ST0 ; line 2940
	0xD8, 0x65, 0x00,                                           // FSUB DWORD PTR [EBP+00] ; line 2941
	0xD9, 0x5C, 0x24, 0x18,                                     // FSTP DWORD PTR [ESP+0x18] ; line 2942
	0xD9, 0x44, 0x24, 0x18,                                     // FLD DWORD PTR [ESP+0x18] ; line 2943
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x820230 ; line 2944
	0x99,                                                       // CDQ ; line 2945
	0xB9, 0x68, 0x01, 0x00, 0x00,                               // MOV ECX,0x00000168 ; line 2946
	0xF7, 0xF9,                                                 // IDIV ECX ; line 2947
	0x89, 0x54, 0x24, 0x18,                                     // MOV [ESP+0x18],EDX ; line 2948
	0xDB, 0x44, 0x24, 0x18,                                     // FILD DWORD PTR [ESP+0x18] ; line 2949
	0xD9, 0x5C, 0x24, 0x14,                                     // FSTP DWORD PTR [ESP+0x14] ; line 2950
	0xD9, 0x05, 0x3C, 0x15, 0x87, 0x00,                         // FLD DWORD PTR [0x87153C] ; line 2951
	0xD9, 0x44, 0x24, 0x14,                                     // FLD DWORD PTR [ESP+0x14] ; line 2952
	0xD8, 0xD1,                                                 // FCOM ST1 ; line 2953
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2954
	0xDD, 0xD9,                                                 // FSTP ST1 ; line 2955
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2956
	0xDD, 0x05, 0xE8, 0x81, 0x85, 0x00,                         // FLD QWORD PTR [0x8581E8] ; line 2957
	0x0F, 0x85, 0x0E, 0x00, 0x00, 0x00,                         // JNE LABEL19F49A ; line 2958
	0xDC, 0xE9,                                                 // FSUB ST1,ST0 ; line 2960
	0xD9, 0xC9,                                                 // FXCH ST1 ; line 2961
	0xD9, 0x5C, 0x24, 0x14,                                     // FSTP DWORD PTR [ESP+0x14] ; line 2962
	0xD9, 0x44, 0x24, 0x14,                                     // FLD DWORD PTR [ESP+0x14] ; line 2963
	0xD9, 0xC9,                                                 // FXCH ST1 ; line 2964
	0xD9, 0x05, 0x18, 0xBA, 0x85, 0x00,                         // FLD DWORD PTR [0x85BA18] ; line 2966
	0xD8, 0xDA,                                                 // FCOMP ST2 ; line 2967
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2968
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 2969
	0x0F, 0x85, 0x0F, 0x00, 0x00, 0x00,                         // JNE LABEL19F4B5 ; line 2970
	0xDE, 0xC1,                                                 // FADDP ; line 2971
	0xD9, 0x5C, 0x24, 0x14,                                     // FSTP DWORD PTR [ESP+0x14] ; line 2972
	0xD9, 0x44, 0x24, 0x14,                                     // FLD DWORD PTR [ESP+0x14] ; line 2973
	0xE9, 0x02, 0x00, 0x00, 0x00,                               // JMP LABEL19F4B7 ; line 2974
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 2977
	0xD9, 0xC0,                                                 // FLD ST0 ; line 2979
	0xD9, 0xE1,                                                 // FABS ; line 2980
	0xD9, 0x5C, 0x24, 0x18,                                     // FSTP DWORD PTR [ESP+0x18] ; line 2981
	0xD9, 0x44, 0x24, 0x18,                                     // FLD DWORD PTR [ESP+0x18] ; line 2982
	0xD9, 0x44, 0x24, 0x20,                                     // FLD DWORD PTR [ESP+0x20] ; line 2983
	0xD8, 0xD1,                                                 // FCOM ST1 ; line 2984
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 2985
	0xDD, 0xD9,                                                 // FSTP ST1 ; line 2986
	0xF6, 0xC4, 0x01,                                           // TEST AH,0x01 ; line 2987
	0xD9, 0xEE,                                                 // FLDZ ; line 2988
	0x0F, 0x85, 0x11, 0x00, 0x00, 0x00,                         // JNE LABEL19F4E2 ; line 2989
	0xDD, 0xDA,                                                 // FSTP ST2 ; line 2991
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 2992
	0xD9, 0xC9,                                                 // FXCH ST1 ; line 2993
	0xD9, 0x9E, 0x80, 0x03, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0380] ; line 2994
	0xE9, 0x44, 0x00, 0x00, 0x00,                               // JMP LABEL19F518 ; line 2995
	0xDD, 0xDB,                                                 // FSTP ST3 ; line 2998
	0xD9, 0xC9,                                                 // FXCH ST1 ; line 2999
	0xD8, 0xD2,                                                 // FCOM ST2 ; line 3000
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 3001
	0xF6, 0xC4, 0x05,                                           // TEST AH,0x05 ; line 3002
	0x0F, 0x8A, 0x13, 0x00, 0x00, 0x00,                         // JP LABEL19F4FF ; line 3003
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 3004
	0xD8, 0xAE, 0x80, 0x03, 0x00, 0x00,                         // FSUBR DWORD PTR [ESI+0x0380] ; line 3005
	0xD9, 0x9E, 0x80, 0x03, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0380] ; line 3006
	0xE9, 0x20, 0x00, 0x00, 0x00,                               // JMP LABEL19F518 ; line 3007
	0xD8, 0xDA,                                                 // FCOMP ST2 ; line 3010
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 3011
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 3012
	0x0F, 0x85, 0x11, 0x00, 0x00, 0x00,                         // JNE LABEL19F516 ; line 3013
	0xD8, 0x86, 0x80, 0x03, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x0380] ; line 3014
	0xD9, 0x9E, 0x80, 0x03, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0380] ; line 3015
	0xE9, 0x02, 0x00, 0x00, 0x00,                               // JMP LABEL19F518 ; line 3016
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 3019
	0xD9, 0x05, 0x94, 0xAE, 0x85, 0x00,                         // FLD DWORD PTR [0x85AE94] ; line 3021
	0xD8, 0x5D, 0x0C,                                           // FCOMP DWORD PTR [EBP+0x0C] ; line 3022
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 3023
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 3024
	0x0F, 0x8B, 0x0D, 0x00, 0x00, 0x00,                         // JNP LABEL19F531 ; line 3025
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x0194],0x00 ; line 3028
	0x0F, 0x85, 0x6A, 0x00, 0x00, 0x00,                         // JNE LABEL19F56D ; line 3029
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x0398] ; line 3032
	0x0F, 0xB7, 0x81, 0x3C, 0x01, 0x00, 0x00,                   // MOVZX EAX,WORD PTR [ECX+0x0000013C] ; line 3033
	0x66, 0x81, 0xF8, 0x1C, 0x02,                               // CMP AX,0x021C ; line 3035
	0x0F, 0x8C, 0x0A, 0x00, 0x00, 0x00,                         // JL SHORT A8LABELA1 ; line 3036
	0x66, 0x81, 0xF8, 0x20, 0x02,                               // CMP AX,0x0220 ; line 3037
	0xE9, 0x0A, 0x00, 0x00, 0x00,                               // JMP SHORT A8LABELA2 ; line 3038
	0x66, 0x81, 0xF8, 0x00, 0x00,                               // CMP AX,0x0000 ; line 3040
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP SHORT A8LABELA2 ; line 3041
	0x0F, 0x8C, 0x11, 0x00, 0x00, 0x00,                         // JL LABEL19F54A ; line 3044
	0xE9, 0x33, 0x00, 0x00, 0x00,                               // JMP LABEL19F56D ; line 3045
	0x90,                                                       // NOP ; line 3047
	0x66, 0x81, 0xF8, 0x1F, 0x02,                               // CMP AX,0x021F ; line 3048
	0x0F, 0x85, 0x27, 0x00, 0x00, 0x00,                         // JNE LABEL19F56D ; line 3049
	0x66, 0x39, 0x99, 0x3E, 0x01, 0x00, 0x00,                   // CMP [ECX+0x0000013E],BX ; line 3052
	0x0F, 0x85, 0x1A, 0x00, 0x00, 0x00,                         // JNE LABEL19F56D ; line 3053
	0x8B, 0x11,                                                 // MOV EDX,[ECX] ; line 3055
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 3056
	0x8B, 0x42, 0x14,                                           // MOV EAX,[EDX+0x14] ; line 3057
	0xFF, 0xD0,                                                 // CALL EAX ; line 3058
	0x66, 0xC7, 0x86, 0x6C, 0x03, 0x00, 0x00, 0x03, 0x00,       // MOV WORD PTR [ESI+0x036C],0x0003 ; line 3060
	0x5F,                                                       // POP EDI ; line 3061
	0x5E,                                                       // POP ESI ; line 3062
	0x5D,                                                       // POP EBP ; line 3063
	0x5B,                                                       // POP EBX ; line 3064
	0x89, 0xEC,                                                 // MOV ESP,EBP ; line 3065
	0x5D,                                                       // POP EBP ; line 3066
	0xC3,                                                       // RET ; line 3067
	0xD9, 0x86, 0x80, 0x03, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x0380] ; line 3069
	0x0F, 0xBE, 0x8E, 0x94, 0x01, 0x00, 0x00,                   // MOVSX ECX,BYTE PTR [ESI+0x0194] ; line 3070
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 3071
	0xD9, 0x5C, 0x24, 0x34,                                     // FSTP DWORD PTR [ESP+0x34] ; line 3072
	0x89, 0x4C, 0x24, 0x20,                                     // MOV [ESP+0x20],ECX ; line 3073
	0xD9, 0x5C, 0x24, 0x38,                                     // FSTP DWORD PTR [ESP+0x38] ; line 3074
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 3075
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x05, 0x00,       // CMP WORD PTR [ESI+0x013E],0x05 ; line 3076
	0xD9, 0x45, 0x0C,                                           // FLD DWORD PTR [EBP+0x0C] ; line 3077
	0xDC, 0x05, 0xC8, 0x77, 0x86, 0x00,                         // FADD QWORD PTR [0x8677C8] ; line 3078
	0x6A, 0x05,                                                 // PUSH 0x05 ; line 3079
	0xD9, 0x5C, 0x24, 0x44,                                     // FSTP DWORD PTR [ESP+0x44] ; line 3080
	0xDB, 0x44, 0x24, 0x24,                                     // FILD DWORD PTR [ESP+0x24] ; line 3081
	0xD9, 0x5C, 0x24, 0x48,                                     // FSTP DWORD PTR [ESP+0x48] ; line 3082
	0x0F, 0x85, 0x89, 0x00, 0x00, 0x00,                         // JNE LABEL19F639 ; line 3083
	0x0F, 0xB6, 0x86, 0x04, 0x01, 0x00, 0x00,                   // MOVZX EAX,BYTE PTR [ESI+0x0104] ; line 3085
	0xD9, 0x05, 0xA4, 0xBC, 0x85, 0x00,                         // FLD DWORD PTR [0x85BCA4] ; line 3086
	0x8D, 0x54, 0x24, 0x38,                                     // LEA EDX,[ESP+0x38] ; line 3087
	0xD9, 0x5C, 0x24, 0x40,                                     // FSTP DWORD PTR [ESP+0x40] ; line 3088
	0xD9, 0x45, 0x00,                                           // FLD DWORD PTR [EBP+0x00] ; line 3089
	0x52,                                                       // PUSH EDX ; line 3090
	0x6A, 0x01,                                                 // PUSH 0x01 ; line 3091
	0xD9, 0xE0,                                                 // FCHS ; line 3092
	0x50,                                                       // PUSH EAX ; line 3093
	0x51,                                                       // PUSH ECX ; line 3094
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3095
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 3096
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3097
	0x8B, 0x8E, 0x5C, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x035C] ; line 3098
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00F0] ; line 3099
	0xD9, 0x5C, 0x24, 0x34,                                     // FSTP DWORD PTR [ESP+0x34] ; line 3100
	0xD9, 0x44, 0x24, 0x34,                                     // FLD DWORD PTR [ESP+0x34] ; line 3101
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3102
	0x51,                                                       // PUSH ECX ; line 3103
	0xD9, 0x01,                                                 // FLD DWORD PTR [ECX] ; line 3104
	0xD9, 0xE0,                                                 // FCHS ; line 3105
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3106
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 3107
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3108
	0x0F, 0xBE, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVSX EDX,BYTE PTR [ESI+0x0104] ; line 3109
	0x8B, 0x07,                                                 // MOV EAX,[EDI] ; line 3110
	0x89, 0x54, 0x24, 0x38,                                     // MOV [ESP+0x38],EDX ; line 3111
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3112
	0xDB, 0x44, 0x24, 0x38,                                     // FILD DWORD PTR [ESP+0x38] ; line 3113
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 3114
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00EC] ; line 3115
	0xD9, 0x5C, 0x24, 0x38,                                     // FSTP DWORD PTR [ESP+0x38] ; line 3116
	0xD9, 0x44, 0x24, 0x38,                                     // FLD DWORD PTR [ESP+0x38] ; line 3117
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3118
	0x68, 0x2C, 0x03, 0x00, 0x00,                               // PUSH 0x0000032C ; line 3119
	0xFF, 0xD0,                                                 // CALL EAX ; line 3120
	0xE9, 0x84, 0x00, 0x00, 0x00,                               // JMP LABEL19F6BD ; line 3121
	0x0F, 0xB6, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVZX EDX,BYTE PTR [ESI+0x0104] ; line 3124
	0xD9, 0x05, 0x70, 0xB8, 0x85, 0x00,                         // FLD DWORD PTR [0x85B870] ; line 3125
	0x8D, 0x4C, 0x24, 0x38,                                     // LEA ECX,[ESP+0x38] ; line 3126
	0xD9, 0x5C, 0x24, 0x40,                                     // FSTP DWORD PTR [ESP+0x40] ; line 3127
	0xD9, 0x45, 0x00,                                           // FLD DWORD PTR [EBP+0x00] ; line 3128
	0x51,                                                       // PUSH ECX ; line 3129
	0x6A, 0x01,                                                 // PUSH 0x01 ; line 3130
	0xD9, 0xE0,                                                 // FCHS ; line 3131
	0x52,                                                       // PUSH EDX ; line 3132
	0x51,                                                       // PUSH ECX ; line 3133
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3134
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 3135
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3136
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x035C] ; line 3137
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00F0] ; line 3138
	0xD9, 0x5C, 0x24, 0x34,                                     // FSTP DWORD PTR [ESP+0x34] ; line 3139
	0xD9, 0x44, 0x24, 0x34,                                     // FLD DWORD PTR [ESP+0x34] ; line 3140
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3141
	0x51,                                                       // PUSH ECX ; line 3142
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 3143
	0xD9, 0xE0,                                                 // FCHS ; line 3144
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3145
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 3146
	0x0F, 0xBE, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVSX ECX,BYTE PTR [ESI+0x0104] ; line 3147
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3148
	0x8B, 0x17,                                                 // MOV EDX,[EDI] ; line 3149
	0x89, 0x4C, 0x24, 0x38,                                     // MOV [ESP+0x38],ECX ; line 3150
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3151
	0xDB, 0x44, 0x24, 0x38,                                     // FILD DWORD PTR [ESP+0x38] ; line 3152
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 3153
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00EC] ; line 3154
	0xD9, 0x5C, 0x24, 0x38,                                     // FSTP DWORD PTR [ESP+0x38] ; line 3155
	0xD9, 0x44, 0x24, 0x38,                                     // FLD DWORD PTR [ESP+0x38] ; line 3156
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3157
	0x68, 0x2C, 0x03, 0x00, 0x00,                               // PUSH 0x0000032C ; line 3158
	0xFF, 0xD2,                                                 // CALL EDX ; line 3159
	0x0F, 0xB6, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVZX ECX,BYTE PTR [ESI+0x0104] ; line 3161
	0xD9, 0x05, 0x38, 0x15, 0x87, 0x00,                         // FLD DWORD PTR [0x871538] ; line 3162
	0x8B, 0x96, 0x5C, 0x03, 0x00, 0x00,                         // MOV EDX,[ESI+0x035C] ; line 3163
	0xD9, 0x5C, 0x24, 0x3C,                                     // FSTP DWORD PTR [ESP+0x3C] ; line 3164
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 3165
	0x6A, 0x05,                                                 // PUSH 0x05 ; line 3166
	0xD9, 0x02,                                                 // FLD DWORD PTR [EDX] ; line 3167
	0x8D, 0x44, 0x24, 0x38,                                     // LEA EAX,[ESP+0x38] ; line 3168
	0x50,                                                       // PUSH EAX ; line 3169
	0xD9, 0xE0,                                                 // FCHS ; line 3170
	0x6A, 0x01,                                                 // PUSH 0x01 ; line 3171
	0x51,                                                       // PUSH ECX ; line 3172
	0x51,                                                       // PUSH ECX ; line 3173
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 3174
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3175
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 3176
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3177
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x035C] ; line 3178
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00F0] ; line 3179
	0xD9, 0x5C, 0x24, 0x34,                                     // FSTP DWORD PTR [ESP+0x34] ; line 3180
	0xD9, 0x44, 0x24, 0x34,                                     // FLD DWORD PTR [ESP+0x34] ; line 3181
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3182
	0x51,                                                       // PUSH ECX ; line 3183
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 3184
	0xD9, 0xE0,                                                 // FCHS ; line 3185
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3186
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 3187
	0x0F, 0xBE, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVSX ECX,BYTE PTR [ESI+0x0104] ; line 3188
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3189
	0x8B, 0x17,                                                 // MOV EDX,[EDI] ; line 3190
	0x89, 0x4C, 0x24, 0x38,                                     // MOV [ESP+0x38],ECX ; line 3191
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3192
	0xDB, 0x44, 0x24, 0x38,                                     // FILD DWORD PTR [ESP+0x38] ; line 3193
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 3194
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00EC] ; line 3195
	0xD9, 0x5C, 0x24, 0x38,                                     // FSTP DWORD PTR [ESP+0x38] ; line 3196
	0xD9, 0x44, 0x24, 0x38,                                     // FLD DWORD PTR [ESP+0x38] ; line 3197
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3198
	0x68, 0x2C, 0x03, 0x00, 0x00,                               // PUSH 0x0000032C ; line 3199
	0xFF, 0xD2,                                                 // CALL EDX ; line 3200
	0x8B, 0x06,                                                 // MOV EAX,[ESI] ; line 3201
	0x8B, 0x50, 0x20,                                           // MOV EDX,[EAX+0x20] ; line 3202
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3203
	0xFF, 0xD2,                                                 // CALL EDX ; line 3204
	0x5F,                                                       // POP EDI ; line 3205
	0x5E,                                                       // POP ESI ; line 3206
	0x5D,                                                       // POP EBP ; line 3207
	0x5B,                                                       // POP EBX ; line 3208
	0x89, 0xEC,                                                 // MOV ESP,EBP ; line 3209
	0x5D,                                                       // POP EBP ; line 3210
	0xC3,                                                       // RET ; line 3211
	0x66, 0x39, 0xEF,                                           // CMP DI,BP ; line 3213
	0xD9, 0xE8,                                                 // FLD1 ; line 3214
	0x0F, 0x85, 0xBD, 0x00, 0x00, 0x00,                         // JNE LABEL19F823 ; line 3215
	0x8B, 0x8E, 0x5C, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x035C] ; line 3217
	0xD9, 0x86, 0x78, 0x03, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x0378] ; line 3218
	0xD9, 0x41, 0x0C,                                           // FLD DWORD PTR [ECX+0x0C] ; line 3219
	0xDE, 0xD9,                                                 // FCOMPP ; line 3220
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 3221
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 3222
	0x0F, 0x8A, 0x93, 0x00, 0x00, 0x00,                         // JP LABEL19F815 ; line 3223
	0x0F, 0xB6, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVZX EDX,BYTE PTR [ESI+0x0104] ; line 3225
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 3226
	0xD9, 0xEE,                                                 // FLDZ ; line 3227
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 3228
	0xD9, 0x54, 0x24, 0x34,                                     // FST DWORD PTR [ESP+0x34] ; line 3229
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 3230
	0xD9, 0x54, 0x24, 0x3C,                                     // FST DWORD PTR [ESP+0x3C] ; line 3231
	0x8D, 0x44, 0x24, 0x38,                                     // LEA EAX,[ESP+0x38] ; line 3232
	0xD9, 0x05, 0x2C, 0x88, 0x85, 0x00,                         // FLD DWORD PTR [0x85882C] ; line 3233
	0x50,                                                       // PUSH EAX ; line 3234
	0xD9, 0x5C, 0x24, 0x44,                                     // FSTP DWORD PTR [ESP+0x44] ; line 3235
	0x55,                                                       // PUSH EBP ; line 3236
	0x52,                                                       // PUSH EDX ; line 3237
	0x51,                                                       // PUSH ECX ; line 3238
	0xD9, 0x5C, 0x24, 0x54,                                     // FSTP DWORD PTR [ESP+0x54] ; line 3239
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 3240
	0xD9, 0x01,                                                 // FLD DWORD PTR [ECX] ; line 3241
	0xD9, 0xE0,                                                 // FCHS ; line 3242
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3243
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 3244
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3245
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x035C] ; line 3246
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00F0] ; line 3247
	0xD9, 0x5C, 0x24, 0x34,                                     // FSTP DWORD PTR [ESP+0x34] ; line 3248
	0xD9, 0x44, 0x24, 0x34,                                     // FLD DWORD PTR [ESP+0x34] ; line 3249
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3250
	0x51,                                                       // PUSH ECX ; line 3251
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 3252
	0xD9, 0xE0,                                                 // FCHS ; line 3253
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3254
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 3255
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3256
	0x0F, 0xBE, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVSX ECX,BYTE PTR [ESI+0x0104] ; line 3257
	0x89, 0x4C, 0x24, 0x38,                                     // MOV [ESP+0x38],ECX ; line 3258
	0xDB, 0x44, 0x24, 0x38,                                     // FILD DWORD PTR [ESP+0x38] ; line 3259
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 3260
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00EC] ; line 3261
	0xD9, 0x5C, 0x24, 0x38,                                     // FSTP DWORD PTR [ESP+0x38] ; line 3262
	0xD9, 0x44, 0x24, 0x38,                                     // FLD DWORD PTR [ESP+0x38] ; line 3263
	0xE9, 0x22, 0xF7, 0xFF, 0xFF,                               // JMP LABEL19F199 ; line 3264
	0xD9, 0x86, 0x78, 0x03, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x0378] ; line 3267
	0xD8, 0xC1,                                                 // FADD ST0,ST1 ; line 3268
	0xD9, 0x9E, 0x78, 0x03, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0378] ; line 3269
	0x66, 0x39, 0xDF,                                           // CMP DI,BX ; line 3271
	0x0F, 0x85, 0xAB, 0x02, 0x00, 0x00,                         // JNE LABEL19FA92 ; line 3272
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x0398] ; line 3273
	0x0F, 0xB7, 0x81, 0x3C, 0x01, 0x00, 0x00,                   // MOVZX EAX,WORD PTR [ECX+0x0000013C] ; line 3274
	0x66, 0x81, 0xF8, 0x1C, 0x02,                               // CMP AX,0x021C ; line 3276
	0x0F, 0x8C, 0x0A, 0x00, 0x00, 0x00,                         // JL SHORT A9LABELA1 ; line 3277
	0x66, 0x81, 0xF8, 0x20, 0x02,                               // CMP AX,0x0220 ; line 3278
	0xE9, 0x0A, 0x00, 0x00, 0x00,                               // JMP SHORT A9LABELA2 ; line 3279
	0x66, 0x81, 0xF8, 0x00, 0x00,                               // CMP AX,0x0000 ; line 3281
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP SHORT A9LABELA2 ; line 3282
	0x0F, 0x8C, 0xC9, 0x00, 0x00, 0x00,                         // JL LABEL19F8FB ; line 3285
	0xE9, 0x10, 0x00, 0x00, 0x00,                               // JMP LABEL19F84D ; line 3286
	0x90,                                                       // NOP ; line 3288
	0x90,                                                       // NOP ; line 3289
	0x90,                                                       // NOP ; line 3290
	0x90,                                                       // NOP ; line 3291
	0x90,                                                       // NOP ; line 3292
	0x66, 0x81, 0xF8, 0x1F, 0x02,                               // CMP AX,0x021F ; line 3293
	0x0F, 0x84, 0xB4, 0x00, 0x00, 0x00,                         // JE LABEL19F8FB ; line 3294
	0x0F, 0xB6, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVZX ECX,BYTE PTR [ESI+0x0104] ; line 3297
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 3298
	0xD9, 0xEE,                                                 // FLDZ ; line 3299
	0x8B, 0x96, 0x5C, 0x03, 0x00, 0x00,                         // MOV EDX,[ESI+0x035C] ; line 3300
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 3301
	0xD9, 0x54, 0x24, 0x34,                                     // FST DWORD PTR [ESP+0x34] ; line 3302
	0xD9, 0x54, 0x24, 0x38,                                     // FST DWORD PTR [ESP+0x38] ; line 3303
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 3304
	0xD9, 0x05, 0x2C, 0x88, 0x85, 0x00,                         // FLD DWORD PTR [0x85882C] ; line 3305
	0x8D, 0x44, 0x24, 0x38,                                     // LEA EAX,[ESP+0x38] ; line 3306
	0xD9, 0x5C, 0x24, 0x40,                                     // FSTP DWORD PTR [ESP+0x40] ; line 3307
	0x50,                                                       // PUSH EAX ; line 3308
	0x55,                                                       // PUSH EBP ; line 3309
	0x51,                                                       // PUSH ECX ; line 3310
	0xD9, 0x5C, 0x24, 0x50,                                     // FSTP DWORD PTR [ESP+0x50] ; line 3311
	0x51,                                                       // PUSH ECX ; line 3312
	0xD9, 0x02,                                                 // FLD DWORD PTR [EDX] ; line 3313
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 3314
	0xD9, 0xE0,                                                 // FCHS ; line 3315
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3316
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 3317
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3318
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x035C] ; line 3319
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00F0] ; line 3320
	0xD9, 0x5C, 0x24, 0x34,                                     // FSTP DWORD PTR [ESP+0x34] ; line 3321
	0xD9, 0x44, 0x24, 0x34,                                     // FLD DWORD PTR [ESP+0x34] ; line 3322
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3323
	0x51,                                                       // PUSH ECX ; line 3324
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 3325
	0xD9, 0xE0,                                                 // FCHS ; line 3326
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3327
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 3328
	0x0F, 0xBE, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVSX ECX,BYTE PTR [ESI+0x0104] ; line 3329
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3330
	0x8B, 0x17,                                                 // MOV EDX,[EDI] ; line 3331
	0x89, 0x4C, 0x24, 0x38,                                     // MOV [ESP+0x38],ECX ; line 3332
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3333
	0xDB, 0x44, 0x24, 0x38,                                     // FILD DWORD PTR [ESP+0x38] ; line 3334
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 3335
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00EC] ; line 3336
	0xD9, 0x5C, 0x24, 0x38,                                     // FSTP DWORD PTR [ESP+0x38] ; line 3337
	0xD9, 0x44, 0x24, 0x38,                                     // FLD DWORD PTR [ESP+0x38] ; line 3338
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3339
	0x68, 0x2C, 0x03, 0x00, 0x00,                               // PUSH 0x0000032C ; line 3340
	0xFF, 0xD2,                                                 // CALL EDX ; line 3341
	0x81, 0x86, 0x4C, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, // ADD DWORD PTR [ESI+0x034C],0xFFFFFFFF ; line 3342
	0x5F,                                                       // POP EDI ; line 3343
	0x5E,                                                       // POP ESI ; line 3344
	0x5D,                                                       // POP EBP ; line 3345
	0x5B,                                                       // POP EBX ; line 3346
	0x89, 0xEC,                                                 // MOV ESP,EBP ; line 3347
	0x5D,                                                       // POP EBP ; line 3348
	0xC3,                                                       // RET ; line 3349
	0x66, 0x81, 0xB9, 0x3E, 0x01, 0x00, 0x00, 0x05, 0x00,       // CMP WORD PTR [ECX+0x0000013E],0x05 ; line 3351
	0x0F, 0x85, 0xA1, 0x01, 0x00, 0x00,                         // JNE LABEL19FA92 ; line 3352
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x035C] ; line 3354
	0xD9, 0x86, 0x78, 0x03, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x0378] ; line 3355
	0xD9, 0x40, 0x0C,                                           // FLD DWORD PTR [EAX+0x0C] ; line 3356
	0xDE, 0xD9,                                                 // FCOMPP ; line 3357
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 3358
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 3359
	0x0F, 0x8A, 0x77, 0x01, 0x00, 0x00,                         // JP LABEL19FA84 ; line 3360
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 3362
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x00EC] ; line 3363
	0xD9, 0x99, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ECX+0x000000EC] ; line 3364
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x0398] ; line 3365
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x00F0] ; line 3366
	0xDC, 0x25, 0x20, 0x7B, 0x85, 0x00,                         // FSUB QWORD PTR [0x857B20] ; line 3367
	0xD9, 0x5C, 0x24, 0x20,                                     // FSTP DWORD PTR [ESP+0x20] ; line 3368
	0xD9, 0x44, 0x24, 0x20,                                     // FLD DWORD PTR [ESP+0x20] ; line 3369
	0xD9, 0x99, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ECX+0x000000F0] ; line 3370
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x140],0x00 ; line 3371
	0xE9, 0x09, 0x00, 0x00, 0x00,                               // JMP LABEL19F95D ; line 3372
	0x90,                                                       // NOP ; line 3374
	0x90,                                                       // NOP ; line 3375
	0x90,                                                       // NOP ; line 3376
	0x0F, 0x85, 0x80, 0x00, 0x00, 0x00,                         // JNE LABEL19F9D8 ; line 3377
	0x8B, 0x96, 0x5C, 0x03, 0x00, 0x00,                         // MOV EDX,[ESI+0x035C] ; line 3380
	0xD9, 0x02,                                                 // FLD DWORD PTR [EDX] ; line 3381
	0x51,                                                       // PUSH ECX ; line 3382
	0xD9, 0xE0,                                                 // FCHS ; line 3383
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3384
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 3385
	0xDC, 0x0D, 0xB0, 0x79, 0x85, 0x00,                         // FMUL QWORD PTR [0x8579B0] ; line 3387
	0x90,                                                       // NOP ; line 3389
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x0398] ; line 3390
	0xD9, 0x5C, 0x24, 0x24,                                     // FSTP DWORD PTR [ESP+0x24] ; line 3391
	0xD9, 0x44, 0x24, 0x24,                                     // FLD DWORD PTR [ESP+0x24] ; line 3392
	0xD9, 0x98, 0xF4, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [EAX+0x000000F4] ; line 3393
	0x8B, 0x8E, 0x5C, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x035C] ; line 3394
	0xD9, 0x01,                                                 // FLD DWORD PTR [ECX] ; line 3395
	0xD9, 0xE0,                                                 // FCHS ; line 3396
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3397
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 3398
	0xDC, 0x0D, 0xB0, 0x79, 0x85, 0x00,                         // FMUL QWORD PTR [0x8579B0] ; line 3400
	0x90,                                                       // NOP ; line 3402
	0x8B, 0x96, 0x98, 0x03, 0x00, 0x00,                         // MOV EDX,[ESI+0x0398] ; line 3403
	0x81, 0xC4, 0x04, 0x00, 0x00, 0x00,                         // ADD ESP,0x04 ; line 3404
	0xD9, 0x5C, 0x24, 0x20,                                     // FSTP DWORD PTR [ESP+0x20] ; line 3405
	0xD9, 0x44, 0x24, 0x20,                                     // FLD DWORD PTR [ESP+0x20] ; line 3406
	0xD9, 0x9A, 0xF8, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [EDX+0x0000F8] ; line 3407
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x0398] ; line 3408
	0xD9, 0x05, 0xA8, 0x77, 0x86, 0x00,                         // FLD DWORD PTR [0x8677A8] ; line 3409
	0xD9, 0x98, 0x00, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [EAX+0x00000100] ; line 3410
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x0398] ; line 3411
	0x8B, 0x11,                                                 // MOV EDX,[ECX] ; line 3412
	0x8B, 0x42, 0x14,                                           // MOV EAX,[EDX+0x14] ; line 3413
	0xFF, 0xD0,                                                 // CALL EAX ; line 3414
	0xD9, 0xEE,                                                 // FLDZ ; line 3416
	0x0F, 0xB6, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVZX EDX,BYTE PTR [ESI+0x0104] ; line 3417
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x035C] ; line 3418
	0xD9, 0x54, 0x24, 0x34,                                     // FST DWORD PTR [ESP+0x34] ; line 3419
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 3420
	0xD9, 0x54, 0x24, 0x38,                                     // FST DWORD PTR [ESP+0x38] ; line 3421
	0xD9, 0x05, 0x2C, 0x88, 0x85, 0x00,                         // FLD DWORD PTR [0x85882C] ; line 3422
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 3423
	0xD9, 0x5C, 0x24, 0x40,                                     // FSTP DWORD PTR [ESP+0x40] ; line 3424
	0x8D, 0x4C, 0x24, 0x38,                                     // LEA ECX,[ESP+0x38] ; line 3425
	0x51,                                                       // PUSH ECX ; line 3426
	0x55,                                                       // PUSH EBP ; line 3427
	0xD9, 0x5C, 0x24, 0x4C,                                     // FSTP DWORD PTR [ESP+0x4C] ; line 3428
	0x52,                                                       // PUSH EDX ; line 3429
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 3430
	0x51,                                                       // PUSH ECX ; line 3431
	0xD9, 0xE0,                                                 // FCHS ; line 3432
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 3433
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3434
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 3435
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3436
	0x8B, 0x8E, 0x5C, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x035C] ; line 3437
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00F0] ; line 3438
	0xD9, 0x5C, 0x24, 0x34,                                     // FSTP DWORD PTR [ESP+0x34] ; line 3439
	0xD9, 0x44, 0x24, 0x34,                                     // FLD DWORD PTR [ESP+0x34] ; line 3440
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3441
	0x51,                                                       // PUSH ECX ; line 3442
	0xD9, 0x01,                                                 // FLD DWORD PTR [ECX] ; line 3443
	0xD9, 0xE0,                                                 // FCHS ; line 3444
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3445
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 3446
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3447
	0x0F, 0xBE, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVSX EDX,BYTE PTR [ESI+0x0104] ; line 3448
	0x8B, 0x07,                                                 // MOV EAX,[EDI] ; line 3449
	0x89, 0x54, 0x24, 0x38,                                     // MOV [ESP+0x38],EDX ; line 3450
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3451
	0xDB, 0x44, 0x24, 0x38,                                     // FILD DWORD PTR [ESP+0x38] ; line 3452
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 3453
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00EC] ; line 3454
	0xD9, 0x5C, 0x24, 0x38,                                     // FSTP DWORD PTR [ESP+0x38] ; line 3455
	0xD9, 0x44, 0x24, 0x38,                                     // FLD DWORD PTR [ESP+0x38] ; line 3456
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3457
	0x68, 0x2C, 0x03, 0x00, 0x00,                               // PUSH 0x0000032C ; line 3458
	0xFF, 0xD0,                                                 // CALL EAX ; line 3459
	0x81, 0x86, 0x4C, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, // ADD DWORD PTR [ESI+0x034C],0xFFFFFFFF ; line 3460
	0x5F,                                                       // POP EDI ; line 3461
	0x5E,                                                       // POP ESI ; line 3462
	0x5D,                                                       // POP EBP ; line 3463
	0x5B,                                                       // POP EBX ; line 3464
	0x89, 0xEC,                                                 // MOV ESP,EBP ; line 3465
	0x5D,                                                       // POP EBP ; line 3466
	0xC3,                                                       // RET ; line 3467
	0xD9, 0x86, 0x78, 0x03, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x0378] ; line 3469
	0xD8, 0xC1,                                                 // FADD ST0,ST1 ; line 3470
	0xD9, 0x9E, 0x78, 0x03, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0378] ; line 3471
	0x66, 0x81, 0xFF, 0x03, 0x00,                               // CMP DI,0x03 ; line 3473
	0x0F, 0x85, 0xA0, 0x01, 0x00, 0x00,                         // JNE LABEL19FC10 ; line 3474
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x0398] ; line 3476
	0x0F, 0xB7, 0x81, 0x3C, 0x01, 0x00, 0x00,                   // MOVZX EAX,WORD PTR [ECX+0x0000013C] ; line 3477
	0x66, 0x81, 0xF8, 0x1C, 0x02,                               // CMP AX,0x021C ; line 3479
	0x0F, 0x8C, 0x0A, 0x00, 0x00, 0x00,                         // JL SHORT AALABELA1 ; line 3480
	0x66, 0x81, 0xF8, 0x20, 0x02,                               // CMP AX,0x0220 ; line 3481
	0xE9, 0x0A, 0x00, 0x00, 0x00,                               // JMP SHORT AALABELA2 ; line 3482
	0x66, 0x81, 0xF8, 0x00, 0x00,                               // CMP AX,0x0000 ; line 3484
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP SHORT AALABELA2 ; line 3485
	0x0F, 0x8C, 0xAE, 0x00, 0x00, 0x00,                         // JL LABEL19FB53 ; line 3488
	0xE9, 0x10, 0x00, 0x00, 0x00,                               // JMP LABEL19FABD ; line 3489
	0x90,                                                       // NOP ; line 3491
	0x90,                                                       // NOP ; line 3492
	0x90,                                                       // NOP ; line 3493
	0x90,                                                       // NOP ; line 3494
	0x90,                                                       // NOP ; line 3495
	0x66, 0x81, 0xF8, 0x1F, 0x02,                               // CMP AX,0x021F ; line 3496
	0x0F, 0x84, 0x99, 0x00, 0x00, 0x00,                         // JE LABEL19FB53 ; line 3497
	0x0F, 0xB6, 0x86, 0x04, 0x01, 0x00, 0x00,                   // MOVZX EAX,BYTE PTR [ESI+0x0104] ; line 3500
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 3501
	0xD9, 0xEE,                                                 // FLDZ ; line 3502
	0x8B, 0x8E, 0x5C, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x035C] ; line 3503
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 3504
	0xD9, 0x54, 0x24, 0x34,                                     // FST DWORD PTR [ESP+0x34] ; line 3505
	0xD9, 0x54, 0x24, 0x38,                                     // FST DWORD PTR [ESP+0x38] ; line 3506
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 3507
	0xD9, 0x05, 0x2C, 0x88, 0x85, 0x00,                         // FLD DWORD PTR [0x85882C] ; line 3508
	0x8D, 0x54, 0x24, 0x38,                                     // LEA EDX,[ESP+0x38] ; line 3509
	0xD9, 0x5C, 0x24, 0x40,                                     // FSTP DWORD PTR [ESP+0x40] ; line 3510
	0x52,                                                       // PUSH EDX ; line 3511
	0x55,                                                       // PUSH EBP ; line 3512
	0x50,                                                       // PUSH EAX ; line 3513
	0xD9, 0x5C, 0x24, 0x50,                                     // FSTP DWORD PTR [ESP+0x50] ; line 3514
	0x51,                                                       // PUSH ECX ; line 3515
	0xD9, 0x01,                                                 // FLD DWORD PTR [ECX] ; line 3516
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 3517
	0xD9, 0xE0,                                                 // FCHS ; line 3518
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3519
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 3520
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3521
	0x8B, 0x96, 0x5C, 0x03, 0x00, 0x00,                         // MOV EDX,[ESI+0x035C] ; line 3522
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00F0] ; line 3523
	0xD9, 0x5C, 0x24, 0x34,                                     // FSTP DWORD PTR [ESP+0x34] ; line 3524
	0xD9, 0x44, 0x24, 0x34,                                     // FLD DWORD PTR [ESP+0x34] ; line 3525
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3526
	0x51,                                                       // PUSH ECX ; line 3527
	0xD9, 0x02,                                                 // FLD DWORD PTR [EDX] ; line 3528
	0xD9, 0xE0,                                                 // FCHS ; line 3529
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3530
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 3531
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3532
	0x0F, 0xBE, 0x86, 0x04, 0x01, 0x00, 0x00,                   // MOVSX EAX,BYTE PTR [ESI+0x0104] ; line 3533
	0x89, 0x44, 0x24, 0x38,                                     // MOV [ESP+0x38],EAX ; line 3534
	0xDB, 0x44, 0x24, 0x38,                                     // FILD DWORD PTR [ESP+0x38] ; line 3535
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 3536
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00EC] ; line 3537
	0xD9, 0x5C, 0x24, 0x38,                                     // FSTP DWORD PTR [ESP+0x38] ; line 3538
	0xD9, 0x44, 0x24, 0x38,                                     // FLD DWORD PTR [ESP+0x38] ; line 3539
	0xE9, 0x75, 0xF3, 0xFF, 0xFF,                               // JMP LABEL19F199 ; line 3540
	0x8B, 0x8E, 0x5C, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x035C] ; line 3543
	0xD9, 0x86, 0x78, 0x03, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x0378] ; line 3544
	0xD9, 0x41, 0x0C,                                           // FLD DWORD PTR [ECX+0x0C] ; line 3545
	0xDE, 0xD9,                                                 // FCOMPP ; line 3546
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 3547
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 3548
	0x0F, 0x8A, 0x93, 0x00, 0x00, 0x00,                         // JP LABEL19FBFF ; line 3549
	0x0F, 0xB6, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVZX EDX,BYTE PTR [ESI+0x0104] ; line 3551
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 3552
	0xD9, 0xEE,                                                 // FLDZ ; line 3553
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 3554
	0xD9, 0x54, 0x24, 0x34,                                     // FST DWORD PTR [ESP+0x34] ; line 3555
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 3556
	0xD9, 0x54, 0x24, 0x3C,                                     // FST DWORD PTR [ESP+0x3C] ; line 3557
	0x8D, 0x44, 0x24, 0x38,                                     // LEA EAX,[ESP+0x38] ; line 3558
	0xD9, 0x05, 0x2C, 0x88, 0x85, 0x00,                         // FLD DWORD PTR [0x85882C] ; line 3559
	0x50,                                                       // PUSH EAX ; line 3560
	0xD9, 0x5C, 0x24, 0x44,                                     // FSTP DWORD PTR [ESP+0x44] ; line 3561
	0x55,                                                       // PUSH EBP ; line 3562
	0x52,                                                       // PUSH EDX ; line 3563
	0x51,                                                       // PUSH ECX ; line 3564
	0xD9, 0x5C, 0x24, 0x54,                                     // FSTP DWORD PTR [ESP+0x54] ; line 3565
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 3566
	0xD9, 0x01,                                                 // FLD DWORD PTR [ECX] ; line 3567
	0xD9, 0xE0,                                                 // FCHS ; line 3568
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3569
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 3570
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3571
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x035C] ; line 3572
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00F0] ; line 3573
	0xD9, 0x5C, 0x24, 0x34,                                     // FSTP DWORD PTR [ESP+0x34] ; line 3574
	0xD9, 0x44, 0x24, 0x34,                                     // FLD DWORD PTR [ESP+0x34] ; line 3575
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3576
	0x51,                                                       // PUSH ECX ; line 3577
	0xD9, 0x00,                                                 // FLD DWORD PTR [EAX] ; line 3578
	0xD9, 0xE0,                                                 // FCHS ; line 3579
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 3580
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 3581
	0xDC, 0x0D, 0xF8, 0x9E, 0x85, 0x00,                         // FMUL QWORD PTR [0x859EF8] ; line 3582
	0x0F, 0xBE, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVSX ECX,BYTE PTR [ESI+0x0104] ; line 3583
	0x89, 0x4C, 0x24, 0x38,                                     // MOV [ESP+0x38],ECX ; line 3584
	0xDB, 0x44, 0x24, 0x38,                                     // FILD DWORD PTR [ESP+0x38] ; line 3585
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 3586
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x00EC] ; line 3587
	0xD9, 0x5C, 0x24, 0x38,                                     // FSTP DWORD PTR [ESP+0x38] ; line 3588
	0xD9, 0x44, 0x24, 0x38,                                     // FLD DWORD PTR [ESP+0x38] ; line 3589
	0xE9, 0xC6, 0xF2, 0xFF, 0xFF,                               // JMP LABEL19F199 ; line 3590
	0xD8, 0x86, 0x78, 0x03, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0x0378] ; line 3593
	0xD9, 0x9E, 0x78, 0x03, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x0378] ; line 3594
	0xE9, 0x07, 0x00, 0x00, 0x00,                               // JMP LABEL19E2B8 ; line 3595
	0xDD, 0xD8,                                                 // FSTP ST0 ; line 3598
	0xE9, 0x00, 0x00, 0x00, 0x00,                               // JMP LABEL19E2B8 ; line 3599
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 3602
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x438C60 ; line 3603
	0x84, 0xC0,                                                 // TEST AL,AL ; line 3604
	0x0F, 0x84, 0x0A, 0x00, 0x00, 0x00,                         // JE LABEL19E2DF ; line 3605
	0x81, 0x86, 0x4C, 0x03, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, // ADD DWORD PTR [ESI+0x34C],0xFFFFFFFF ; line 3608
	0x5F,                                                       // POP EDI ; line 3610
	0x5E,                                                       // POP ESI ; line 3611
	0x5D,                                                       // POP EBP ; line 3612
	0x5B,                                                       // POP EBX ; line 3613
	0x89, 0xEC,                                                 // MOV ESP,EBP ; line 3614
	0x5D,                                                       // POP EBP ; line 3615
	0xC3,                                                       // RET ; line 3616
};
static JumpTarget murasaCHAINS_BULLET_jumpData[] = {
	{ 0x100, 0x48CF60 },
	{ 0x110, 0x48CE90 },
	{ 0x1D0, 0x409760 },
	{ 0x1F7, 0x820230 },
	{ 0x36D, 0x409580 },
	{ 0x397, 0x4095F0 },
	{ 0x3D3, 0x409580 },
	{ 0x3FD, 0x4095F0 },
	{ 0x465, 0x409580 },
	{ 0x48F, 0x4095F0 },
	{ 0x51E, 0x409580 },
	{ 0x548, 0x4095F0 },
	{ 0x588, 0x464980 },
	{ 0x687, 0x48CE90 },
	{ 0x8A5, 0x409580 },
	{ 0x8CF, 0x4095F0 },
	{ 0x90F, 0x464980 },
	{ 0xA0B, 0x409760 },
	{ 0xA33, 0x820230 },
	{ 0xC07, 0x409580 },
	{ 0xC31, 0x4095F0 },
	{ 0xC90, 0x409580 },
	{ 0xCBA, 0x4095F0 },
	{ 0xD23, 0x409580 },
	{ 0xD4D, 0x4095F0 },
	{ 0xDF7, 0x409580 },
	{ 0xE21, 0x4095F0 },
	{ 0xEEE, 0x409580 },
	{ 0xF18, 0x4095F0 },
	{ 0xFE0, 0x4095F0 },
	{ 0x100D, 0x409580 },
	{ 0x1090, 0x409580 },
	{ 0x10BA, 0x4095F0 },
	{ 0x11A4, 0x409580 },
	{ 0x11CE, 0x4095F0 },
	{ 0x1253, 0x409580 },
	{ 0x127D, 0x4095F0 },
	{ 0x12C6, 0x438C60 },
};
static PatchByteCode murasaCHAINS_BULLET_patchByteCode = { murasaCHAINS_BULLET_byteCode, 4836, murasaCHAINS_BULLET_jumpData, 38 };
// murasaCHAINS_BULLET_0F declared in murasa.asm line 3620
static unsigned char murasaCHAINS_BULLET_0F_byteCode[] = {
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00,       // MOV EAX,[ESI+0x035C] ; line 3621
	0xDD, 0xD8,                               // FSTP ST0 ; line 3622
	0xD9, 0x00,                               // FLD DWORD PTR [EAX] ; line 3623
	0x8B, 0x3E,                               // MOV EDI,[ESI] ; line 3624
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,       // FSTP DWORD PTR [ESI+0x012C] ; line 3625
	0xC6, 0x86, 0x8C, 0x01, 0x00, 0x00, 0x02, // MOV BYTE PTR [ESI+0x018C],0x02 ; line 3626
	0xD9, 0x40, 0x08,                         // FLD DWORD PTR [EAX+0x08] ; line 3627
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,             // CALL 0x820230 ; line 3628
	0x89, 0xF1,                               // MOV ECX,ESI ; line 3629
	0x50,                                     // PUSH EAX ; line 3630
	0x8B, 0x47, 0x0C,                         // MOV EAX,[EDI+0x0C] ; line 3631
	0xFF, 0xD0,                               // CALL EAX ; line 3632
	0x0F, 0xB7, 0x86, 0x3E, 0x01, 0x00, 0x00, // MOVZX EAX,WORD PTR [ESI+0x013E] ; line 3633
	0x66, 0x81, 0xF8, 0x04, 0x00,             // CMP AX,0x0004 ; line 3634
	0xBB, 0x01, 0x00, 0x00, 0x00,             // MOV EBX,0x00000001 ; line 3635
	0x0F, 0x8F, 0x06, 0x00, 0x00, 0x00,       // JG LABEL1A4011 ; line 3636
	0x88, 0x9E, 0x94, 0x01, 0x00, 0x00,       // MOV [ESI+0x0194],BL ; line 3637
	0x66, 0x81, 0xF8, 0x05, 0x00,             // CMP AX,0x0005 ; line 3639
	0x0F, 0x84, 0x0B, 0x00, 0x00, 0x00,       // JE LABEL1A4021 ; line 3640
	0x66, 0x81, 0xF8, 0x06, 0x00,             // CMP AX,0x0006 ; line 3641
	0x0F, 0x85, 0x1C, 0x00, 0x00, 0x00,       // JNE LABEL1A5191 ; line 3642
	0xD9, 0xEE,                               // FLDZ ; line 3644
	0x8B, 0x8E, 0x5C, 0x03, 0x00, 0x00,       // MOV ECX,[ESI+0x035C] ; line 3645
	0xD8, 0x59, 0x10,                         // FCOMP DWORD PTR [ECX+0x10] ; line 3646
	0xDF, 0xE0,                               // FNSTSW AX ; line 3647
	0xF6, 0xC4, 0x44,                         // TEST AH,0x44 ; line 3648
	0x0F, 0x8B, 0x06, 0x00, 0x00, 0x00,       // JNP LABEL1A5191 ; line 3649
	0x88, 0x9E, 0x94, 0x01, 0x00, 0x00,       // MOV [ESI+0x0194],BL ; line 3650
	0x5F,                                     // POP EDI ; line 3652
	0x5E,                                     // POP ESI ; line 3653
	0x5D,                                     // POP EBP ; line 3654
	0x5B,                                     // POP EBX ; line 3655
	0x81, 0xC4, 0x14, 0x00, 0x00, 0x00,       // ADD ESP,0x14 ; line 3656
	0xC3,                                     // RET ; line 3657
};
static JumpTarget murasaCHAINS_BULLET_0F_jumpData[] = {
	{ 0x01D, 0x820230 },
};
static PatchByteCode murasaCHAINS_BULLET_0F_patchByteCode = { murasaCHAINS_BULLET_0F_byteCode, 131, murasaCHAINS_BULLET_0F_jumpData, 1 };
// Created from use at line 898
static PatchByteCode muramasaNOP_patchByteCode = { nullptr, 0, nullptr, 0 };


// murasa.asm
std::array<PatchSkeleton, 104> patchList = {
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x60F6E5,  6}, // Declared line 12. Patch on FLD ST, DWORD PTR [0x871538]
	PatchSkeleton{ murasaID_FIX_patchByteCode,            (void *)0x5EE78B,  8}, // Declared line 20. Patch on CMP WORD PTR [ESI+0x196], 0
	PatchSkeleton{ murasaATLAS_1_patchByteCode,           (void *)0x5FE771,  6}, // Declared line 31. Patch on FLD ST, DWORD PTR [0x86782C]
	PatchSkeleton{ murasaBERMUDAD22_EFF_patchByteCode,    (void *)0x60D6F9,  7}, // Declared line 397. Patch on CMP [ESI+0x13E], BX
	PatchSkeleton{ murasaBERMUDAD22B_patchByteCode,       (void *)0x5FABDF,  6}, // Declared line 413. Patch on PUSH 0xFFFFFFFF
	PatchSkeleton{ murasaBERMUDAD22C_patchByteCode,       (void *)0x5FADB0,  6}, // Declared line 414. Patch on PUSH 0xFFFFFFFF
	PatchSkeleton{ murasaBERMUDAD22_SOUND_patchByteCode,  (void *)0x5FAB39,  7}, // Declared line 431. Patch on MOV BYTE PTR [ESI+0x18C], 3
	PatchSkeleton{ murasaBERMUDAD22_SOUND_patchByteCode,  (void *)0x5FAD0A,  7}, // Declared line 432. Patch on MOV BYTE PTR [ESI+0x18C], 3
	PatchSkeleton{ murasaBERMUDA3_EFF_patchByteCode,      (void *)0x6127EB,  9}, // Declared line 622. Patch on CMP WORD PTR [ECX+0x13C], 0x259
	PatchSkeleton{ murasaBERMUDA5_EFF_patchByteCode,      (void *)0x612F1B,  7}, // Declared line 785. Patch on MOVSX EAX, WORD PTR [ESI+0x13E]
	PatchSkeleton{ murasaBERMUDA5_1_patchByteCode,        (void *)0x5FE8DD,  6}, // Declared line 820. Patch on MOV EDX, [ESI+0x170]
	PatchSkeleton{ murasaBERMUDA5_2_patchByteCode,        (void *)0x5FEB1C,  7}, // Declared line 821. Patch on CMP [ESI+0x140], DI
	PatchSkeleton{ murasaBERMUDA5_2_patchByteCode,        (void *)0x5FEB9C,  8}, // Declared line 822. Patch on CMP WORD PTR [ESI+0x142], 0
	PatchSkeleton{ murasaBERMUDA5_3_patchByteCode,        (void *)0x5FEC8B,  9}, // Declared line 823. Patch on MOV WORD PTR [ESI+0x890], 0x258
	PatchSkeleton{ murasaBERMUDA5_4_patchByteCode,        (void *)0x5FE881,  6}, // Declared line 824. Patch on FLD ST, DWORD PTR [0x85D950]
	PatchSkeleton{ murasaBERMUDA5_CENTER_patchByteCode,   (void *)0x5FEB00,  6}, // Declared line 825. Patch on FLD ST, DWORD PTR [ESI+0xEC]
	PatchSkeleton{ murasaNOP_patchByteCode,               (void *)0x5FE87B,  6}, // Declared line 826. Patch on JNE 0x005FE939
	PatchSkeleton{ murasaNOP_patchByteCode,               (void *)0x5FEAC8, 10}, // Declared line 827. Patch on FLD ST, DWORD PTR [ESP+0x1C]
	PatchSkeleton{ murasaBERMUDA3_1_patchByteCode,        (void *)0x5FD815,  6}, // Declared line 830. Patch on MOV ECX, [ESI+0x170]
	PatchSkeleton{ murasaBERMUDA3_2_patchByteCode,        (void *)0x5FDA5B,  8}, // Declared line 831. Patch on CMP WORD PTR [ESI+0x142], 0
	PatchSkeleton{ murasaBERMUDA3_4_patchByteCode,        (void *)0x5FD7C0,  6}, // Declared line 832. Patch on FLD ST, DWORD PTR [0x85D950]
	PatchSkeleton{ murasaNOP_patchByteCode,               (void *)0x5FD7BA,  6}, // Declared line 833. Patch on JNE 0x005FD878
	PatchSkeleton{ murasaNOP_patchByteCode,               (void *)0x5FDA09, 10}, // Declared line 834. Patch on FLD ST, DWORD PTR [ESP+0x1C]
	PatchSkeleton{ murasaBERMUDA5_SHAKE_patchByteCode,    (void *)0x5FE84B,  7}, // Declared line 861. Patch on CMP [ESI+0x13E], DI
	PatchSkeleton{ murasaFLIGHT_patchByteCode,            (void *)0x5EFE3E,  6}, // Declared line 866. Patch on FLD ST, DWORD PTR [0x858830]
	PatchSkeleton{ murasaA22_DUR_patchByteCode,           (void *)0x61058B,  7}, // Declared line 879. Patch on CMP DWORD PTR [ESI+0x144], 0xF
	PatchSkeleton{ murasaA623_DUR_patchByteCode,          (void *)0x60F6DC,  7}, // Declared line 884. Patch on CMP DWORD PTR [ESI+0x144], 0x2D
	PatchSkeleton{ murasaA623_FLAG_patchByteCode,         (void *)0x5F8C8E,  9}, // Declared line 892. Patch on MOV ECX, ESI
	PatchSkeleton{ murasaA623_FLAG_patchByteCode,         (void *)0x5F8F95,  9}, // Declared line 893. Patch on MOV ECX, ESI
	PatchSkeleton{ muramasaNOP_patchByteCode,             (void *)0x5F5D09, 12}, // Declared line 898. Patch on FLD ST, DWORD PTR [0x85B9CC]
	PatchSkeleton{ murasaA236_POP_patchByteCode,          (void *)0x5F5D15,  6}, // Declared line 899. Patch on FLD ST, DWORD PTR [0x85BC30]
	PatchSkeleton{ murasaD623_EFF_patchByteCode,          (void *)0x60CFB9,  7}, // Declared line 958. Patch on CMP [ESI+0x13E], DI
	PatchSkeleton{ murasaD623B_HITS_patchByteCode,        (void *)0x5F7F05,  7}, // Declared line 980. Patch on MOVZX EAX, WORD PTR [ESI+0x13E]
	PatchSkeleton{ murasaD623C_HITS_patchByteCode,        (void *)0x5F825A,  7}, // Declared line 1006. Patch on MOVZX EAX, WORD PTR [ESI+0x13E]
	PatchSkeleton{ murasaD623_1B_patchByteCode,           (void *)0x5F7F9A,  6}, // Declared line 1052. Patch on JNE 0x005F81E3
	PatchSkeleton{ murasaD623_2B_patchByteCode,           (void *)0x5F7FA9,  6}, // Declared line 1053. Patch on FLD ST, DWORD PTR [0x85BCA4]
	PatchSkeleton{ murasaNOP_patchByteCode,               (void *)0x5F7FCB,  6}, // Declared line 1054. Patch on FSTP DWORD PTR [ESI+0xF0], ST
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F7FD1,  6}, // Declared line 1055. Patch on FLD ST, DWORD PTR [0x85BC64]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F7FE6,  6}, // Declared line 1056. Patch on FLD ST, DWORD PTR [0x85C590]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F7FF8,  6}, // Declared line 1057. Patch on FLD ST, DWORD PTR [0x85BC68]
	PatchSkeleton{ murasaNOP_patchByteCode,               (void *)0x5F7F89,  6}, // Declared line 1058. Patch on JE 0x005F81F6
	PatchSkeleton{ murasaD623_3B_patchByteCode,           (void *)0x5F81D5,  6}, // Declared line 1059. Patch on JE 0x005F80D2
	PatchSkeleton{ murasaD623_1C_patchByteCode,           (void *)0x5F82EF,  6}, // Declared line 1061. Patch on JNE 0x005F8538
	PatchSkeleton{ murasaD623_2C_patchByteCode,           (void *)0x5F82FE,  6}, // Declared line 1062. Patch on FLD ST, DWORD PTR [0x85BCA4]
	PatchSkeleton{ murasaNOP_patchByteCode,               (void *)0x5F8320,  6}, // Declared line 1063. Patch on FSTP DWORD PTR [ESI+0xF0], ST
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F8326,  6}, // Declared line 1064. Patch on FLD ST, DWORD PTR [0x85BC64]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F833B,  6}, // Declared line 1065. Patch on FLD ST, DWORD PTR [0x85C590]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F834D,  6}, // Declared line 1066. Patch on FLD ST, DWORD PTR [0x85BC68]
	PatchSkeleton{ murasaNOP_patchByteCode,               (void *)0x5F82DE,  6}, // Declared line 1067. Patch on JE 0x005F8551
	PatchSkeleton{ murasaD623_3C_patchByteCode,           (void *)0x5F852A,  6}, // Declared line 1068. Patch on JE 0x005F8427
	PatchSkeleton{ murasaD623_REMOVEAIR_patchByteCode,    (void *)0x60B1D7,  7}, // Declared line 1073. Patch on CMP BYTE PTR [ESI+0x6AD], 0
	PatchSkeleton{ murasaD623_REMOVEAIR_patchByteCode,    (void *)0x60B14F,  7}, // Declared line 1074. Patch on CMP BYTE PTR [ESI+0x6AD], 0
	PatchSkeleton{ murasaD623_REMOVEAIR_LV_patchByteCode, (void *)0x60AF47,  7}, // Declared line 1079. Patch on CMP BYTE PTR [ESI+0x801], 0
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F8243,  6}, // Declared line 1082. Patch on FLD ST, DWORD PTR [0x871538]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F824F,  6}, // Declared line 1083. Patch on FLD ST, DWORD PTR [0x85B9BC]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F7F65,  6}, // Declared line 1084. Patch on FLD ST, DWORD PTR [0x85B858]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F8592,  6}, // Declared line 1086. Patch on FLD ST, DWORD PTR [0x85BC44]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F859E,  6}, // Declared line 1087. Patch on FLD ST, DWORD PTR [0x85B9D0]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F82BA,  6}, // Declared line 1088. Patch on FLD ST, DWORD PTR [0x85B858]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F85AA,  6}, // Declared line 1090. Patch on FLD ST, DWORD PTR [0x85AD04]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F85ED,  6}, // Declared line 1091. Patch on FLD ST, DWORD PTR [0x85BA68]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x5F85FD,  6}, // Declared line 1092. Patch on FLD ST, DWORD PTR [0x85D930]
	PatchSkeleton{ murasaC2C_REMOVE_patchByteCode,        (void *)0x5F2B03,  7}, // Declared line 1098. Patch on CMP [ESI+0x140], DI
	PatchSkeleton{ murasa5B_ONHIT_patchByteCode,          (void *)0x60C3CE,  6}, // Declared line 1110. Patch on FLD ST, DWORD PTR [ESI+0x11C]
	PatchSkeleton{ murasa5B_NEW_patchByteCode,            (void *)0x60C3B5,  7}, // Declared line 1142. Patch on ADD DWORD PTR [ESI+0x34C], 0xFFFFFFFF
	PatchSkeleton{ murasa5B_NEW1_patchByteCode,           (void *)0x60C312,  7}, // Declared line 1163. Patch on CMP DWORD PTR [ESI+0x190], 0
	PatchSkeleton{ murasa5B_NEW2_patchByteCode,           (void *)0x60C294,  6}, // Declared line 1177. Patch on FSUB ST, QWORD PTR [0x8581B8]
	PatchSkeleton{ murasa5B_KILLONHIT_patchByteCode,      (void *)0x60C24C,  6}, // Declared line 1211. Patch on CMP [ESI+0x190], EDI
	PatchSkeleton{ murasa5B_COLOR_patchByteCode,          (void *)0x60C418,  6}, // Declared line 1218. Patch on FLD ST, DWORD PTR [ESI+0x11C]
	PatchSkeleton{ murasa5B_CHARGE_patchByteCode,         (void *)0x5F2429,  7}, // Declared line 1223. Patch on CMP [ESI+0x140], BX
	PatchSkeleton{ murasa5B_CHARGE_patchByteCode,         (void *)0x5F2F95,  7}, // Declared line 1224. Patch on CMP [ESI+0x140], BX
	PatchSkeleton{ murasaJ5B_FIX_patchByteCode,           (void *)0x5F31D2,  8}, // Declared line 1229. Patch on CMP WORD PTR [ESI+0x140], 0x10
	PatchSkeleton{ murasaNOP_patchByteCode,               (void *)0x5F1AD7,  6}, // Declared line 1232. Patch on FADD ST, QWORD PTR [0x857F78]
	PatchSkeleton{ murasaJ6A_0_patchByteCode,             (void *)0x5F1AEB,  6}, // Declared line 1236. Patch on FLD ST, DWORD PTR [0x85AD10]
	PatchSkeleton{ murasaJ6A_1_patchByteCode,             (void *)0x5F1C7F,  6}, // Declared line 1241. Patch on FLD ST, DWORD PTR [0x85BC64]
	PatchSkeleton{ murasa5C_ONHIT_patchByteCode,          (void *)0x60C835,  6}, // Declared line 1248. Patch on PUSH 5
	PatchSkeleton{ murasa5C_SPLIT1_patchByteCode,         (void *)0x60CB50,  6}, // Declared line 1325. Patch on FLD ST, DWORD PTR [ESI+0xF8]
	PatchSkeleton{ murasa5C_SPLIT2_patchByteCode,         (void *)0x60C9FA,  6}, // Declared line 1330. Patch on MOV ECX, [ESI+0x35C]
	PatchSkeleton{ murasa5C_TIMER_patchByteCode,          (void *)0x60C8FB,  7}, // Declared line 1401. Patch on CMP DWORD PTR [ESI+0x144], 0x1E
	PatchSkeleton{ murasa5C_GRAV2_patchByteCode,          (void *)0x60C902,  6}, // Declared line 1406. Patch on JL 0x0060C9D7
	PatchSkeleton{ murasa5C_GRAV_patchByteCode,           (void *)0x60C876,  6}, // Declared line 1429. Patch on FLD ST, DWORD PTR [ESI+0xF8]
	PatchSkeleton{ murasa5C_GRAV1_patchByteCode,          (void *)0x60C87C,  6}, // Declared line 1448. Patch on FSUB ST, QWORD PTR [0x85B848]
	PatchSkeleton{ murasa5C_SWITCH1_patchByteCode,        (void *)0x60C932,  6}, // Declared line 1501. Patch on FLD ST, DWORD PTR [0x85C894]
	PatchSkeleton{ murasa5C_NEW_patchByteCode,            (void *)0x60C9C8,  7}, // Declared line 1525. Patch on ADD DWORD PTR [ESI+0x34C], 0xFFFFFFFF
	PatchSkeleton{ murasa2C_Y_patchByteCode,              (void *)0x5F4134,  6}, // Declared line 1541. Patch on FLD ST, DWORD PTR [0x85B9D0]
	PatchSkeleton{ murasaJ5C_Y_patchByteCode,             (void *)0x5F42DE,  6}, // Declared line 1546. Patch on FLD ST, DWORD PTR [0x867810]
	PatchSkeleton{ murasaJ6C_Y_patchByteCode,             (void *)0x5F454B,  6}, // Declared line 1551. Patch on FLD ST, DWORD PTR [0x867810]
	PatchSkeleton{ murasaD236_ARMOR_patchByteCode,        (void *)0x5EE74A,  8}, // Declared line 1560. Patch on JL SHORT 0x005EE756
	PatchSkeleton{ murasaD236_ARMOR1_patchByteCode,       (void *)0x608B0D,  8}, // Declared line 1566. Patch on FLDZ
	PatchSkeleton{ murasaMPP_0_patchByteCode,             (void *)0x5FFB95,  9}, // Declared line 1572. Patch on MOV WORD PTR [ESI+0x892], 0x1E0
	PatchSkeleton{ murasaMPP_WALKX_patchByteCode,         (void *)0x5FF280,  6}, // Declared line 1577. Patch on FLD ST, DWORD PTR [0x867860]
	PatchSkeleton{ murasaMPP_JY_patchByteCode,            (void *)0x5FF908,  6}, // Declared line 1582. Patch on FLD ST, DWORD PTR [0x86782C]
	PatchSkeleton{ murasaMPP_GRAV_patchByteCode,          (void *)0x5FF914,  6}, // Declared line 1587. Patch on FLD ST, DWORD PTR [0x85AAE8]
	PatchSkeleton{ murasaMPP_JX_patchByteCode,            (void *)0x5FF926,  6}, // Declared line 1592. Patch on FMUL ST, QWORD PTR [0x858210]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x602857,  6}, // Declared line 1594. Patch on FLD ST, DWORD PTR [0x86782C]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x602AED,  6}, // Declared line 1595. Patch on FLD ST, DWORD PTR [0x858830]
	PatchSkeleton{ murasaFLDZ_patchByteCode,              (void *)0x602D62,  6}, // Declared line 1596. Patch on FLD ST, DWORD PTR [0x858830]
	PatchSkeleton{ murasaCHAINS_0F_patchByteCode,         (void *)0x608CBB,  7}, // Declared line 1612. Patch on MOV [ESI+0x7D0], BX
	PatchSkeleton{ murasaCHAINS_C_patchByteCode,          (void *)0x5F9530,  9}, // Declared line 1936. Patch on MOV ECX, ESI
	PatchSkeleton{ murasaCHAINS_C_patchByteCode,          (void *)0x5F96DD,  9}, // Declared line 1937. Patch on MOV ECX, ESI
	PatchSkeleton{ murasaCHAINS_C_AIR_patchByteCode,      (void *)0x5F987E,  7}, // Declared line 2216. Patch on CMP [ESI+0x13E], DX
	PatchSkeleton{ murasaCHAINS_C_AIR_patchByteCode,      (void *)0x5F9A69,  7}, // Declared line 2217. Patch on CMP [ESI+0x13E], DX
	PatchSkeleton{ murasaCHAINS_BULLET_patchByteCode,     (void *)0x60D328,  6}, // Declared line 3618. Patch on MOV EDX, [ESI+0x190]
	PatchSkeleton{ murasaCHAINS_BULLET_0F_patchByteCode,  (void *)0x61AA71,  6}, // Declared line 3659. Patch on MOV EAX, [ESI+0x35C]
};


static std::array<unsigned, 75> skeletonsForUpdate = {
	   1,   2,   4,   5,   6,   7,  10,  11,  12,  13,  14,  15,  16,  17,  18,  19,
	  20,  21,  22,  23,  24,  27,  28,  29,  30,  32,  33,  34,  35,  36,  37,  38,
	  39,  40,  41,  42,  43,  44,  45,  46,  47,  48,  49,  53,  54,  55,  56,  57,
	  58,  59,  60,  61,  62,  69,  70,  71,  72,  73,  74,  84,  85,  86,  87,  89,
	  90,  91,  92,  93,  94,  95,  96,  98,  99, 100, 101,
};
static std::array<unsigned, 2> skeletonsForInitializeAction = { 88, 97 };
static std::vector<unsigned> skeletonsForInitialize;
static std::array<unsigned, 3> skeletonsForHandleInputs = { 50, 51, 52 };
static std::vector<unsigned> skeletonsForVUnknown58;
static std::vector<unsigned> skeletonsForVUnknown5C;
static std::vector<unsigned> skeletonsForVUnknown60;
static std::array<unsigned, 23> skeletonsForObjectUpdate = {
	   0,   3,   8,   9,  25,  26,  31,  63,  64,  65,  66,  67,  68,  75,  76,  77,
	  78,  79,  80,  81,  82,  83, 102,
};
static std::array<unsigned, 1> skeletonsForObjectInitializeAction = { 103 };



std::vector<Patch, TrampolineAllocator> compiledPatches{trampolineAllocator};
std::vector<Patch *, PatchListAllocator> objectUpdate_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> objectInitializeAction_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> update_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> initializeAction_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> initialize_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> handleInputs_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> VUnknown58_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> VUnknown5C_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> VUnknown60_patches{patchListAllocator};

static Patch compilePatch(const PatchSkeleton &skeleton)
{
	Patch result{skeleton};

	result.trampoline = internalMemory.alloc(skeleton.byteCode.byteCodeLength + 5);
	memcpy(result.trampoline, skeleton.byteCode.byteCode, skeleton.byteCode.byteCodeLength);
	for (int i = 0; i < skeleton.byteCode.jumpsSize; i++) {
		JumpTarget &jump = skeleton.byteCode.jumps[i];
		auto location = (unsigned *)&result.trampoline[jump.patchOffset];
		unsigned relative = jump.targetAddress - ((unsigned)location + 4);

		*location = relative;
	}
	SokuLib::TamperNearJmp((DWORD)&result.trampoline[skeleton.byteCode.byteCodeLength], (DWORD)result.location + result.patchSize);
	return result;
}

static void allocateTrampolines(std::vector<Patch, TrampolineAllocator> &result)
{
	result.reserve(std::size(patchList));
	for (auto &patch : patchList)
		result.push_back(compilePatch(patch));
}

template<typename T>
static void getPatchList(const T &skeletons, std::vector<Patch *, PatchListAllocator> &result)
{
	result.reserve(std::size(skeletons));
	for (auto &skeleton : skeletons)
		result.push_back(&compiledPatches[skeleton]);
}

void initPatches()
{
	assert(trampolineAllocator.getIndex() == 0);
	allocateTrampolines(compiledPatches);
	getPatchList(skeletonsForObjectUpdate, objectUpdate_patches);
	getPatchList(skeletonsForObjectInitializeAction, objectInitializeAction_patches);
	getPatchList(skeletonsForUpdate, update_patches);
	getPatchList(skeletonsForInitializeAction, initializeAction_patches);
	getPatchList(skeletonsForInitialize, initialize_patches);
	getPatchList(skeletonsForHandleInputs, handleInputs_patches);
	getPatchList(skeletonsForVUnknown58, VUnknown58_patches);
	getPatchList(skeletonsForVUnknown5C, VUnknown5C_patches);
	getPatchList(skeletonsForVUnknown60, VUnknown60_patches);
	printf("Internal memory used %zu/16755\n", internalMemory.getIndex());
	assert(internalMemory.getIndex() == 16755);
}

void clearPatches()
{
	compiledPatches.clear();
	objectUpdate_patches.clear();
	objectInitializeAction_patches.clear();
	update_patches.clear();
	initializeAction_patches.clear();
	initialize_patches.clear();
	handleInputs_patches.clear();
	VUnknown58_patches.clear();
	VUnknown5C_patches.clear();
	VUnknown60_patches.clear();
}
