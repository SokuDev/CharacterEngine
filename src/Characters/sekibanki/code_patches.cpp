#include <windows.h>
#include <SokuLib.hpp>
#include "code_patches.hpp"

StackedMemory<17928> applyMemory;
StackedMemory<13225> internalMemory;
Allocator applyAllocator{applyMemory};
PatchListAllocator patchListAllocator{internalMemory};
TrampolineAllocator trampolineAllocator{internalMemory};

Patch::Patch(const PatchSkeleton &skeleton) :
	location(skeleton.location),
	patchSize(skeleton.patchSize),
	trampoline(nullptr)
{}

Patch::Patch(Patch &o)
{
	std::swap(this->location, o.location);
	std::swap(this->patchSize, o.patchSize);
	std::swap(this->trampoline, o.trampoline);
}
Patch::Patch(Patch &&o) noexcept
{
	std::swap(this->location, o.location);
	std::swap(this->patchSize, o.patchSize);
	std::swap(this->trampoline, o.trampoline);
}
Patch &Patch::operator=(Patch &&o) noexcept
{
	std::swap(this->location, o.location);
	std::swap(this->patchSize, o.patchSize);
	std::swap(this->trampoline, o.trampoline);
	return *this;
}

AppliedPatch::AppliedPatch(const Patch *patch) :
	_patch(patch),
	_oldData(applyMemory.alloc(patch->patchSize))
{
	DWORD old;

	memcpy(this->_oldData, patch->location, patch->patchSize);
	VirtualProtect(patch->location, patch->patchSize, PAGE_EXECUTE_WRITECOPY, &old);
	memset(patch->location, 0x90, patch->patchSize);
	SokuLib::TamperNearJmp((DWORD)patch->location, patch->trampoline);
	VirtualProtect(patch->location, patch->patchSize, old, &old);
}

AppliedPatch::~AppliedPatch()
{
	DWORD old;

	VirtualProtect(this->_patch->location, this->_patch->patchSize, PAGE_EXECUTE_WRITECOPY, &old);
	memcpy(this->_patch->location, this->_oldData, this->_patch->patchSize);
	VirtualProtect(this->_patch->location, this->_patch->patchSize, old, &old);
	applyMemory.dealloc(this->_oldData);
}

AppliedPatch::AppliedPatch(AppliedPatch &o)
{
	std::swap(this->_patch, o._patch);
	std::swap(this->_oldData, o._oldData);
}
AppliedPatch::AppliedPatch(AppliedPatch &&o) noexcept
{
	std::swap(this->_patch, o._patch);
	std::swap(this->_oldData, o._oldData);
}
AppliedPatch &AppliedPatch::operator=(AppliedPatch &&o) noexcept
{
	std::swap(this->_patch, o._patch);
	std::swap(this->_oldData, o._oldData);
	return *this;
}


// sekibankiFLDZ declared in sekibanki.asm line 1
static unsigned char sekibankiFLDZ_byteCode[] = {
	0xD9, 0xEE, // FLDZ ; line 2
};
static PatchByteCode sekibankiFLDZ_patchByteCode = { sekibankiFLDZ_byteCode, 2, nullptr, 0 };
// sekibankiFLD1 declared in sekibanki.asm line 5
static unsigned char sekibankiFLD1_byteCode[] = {
	0xD9, 0xE8, // FLD1 ; line 6
};
static PatchByteCode sekibankiFLD1_patchByteCode = { sekibankiFLD1_byteCode, 2, nullptr, 0 };
// sekibankiNOP declared in sekibanki.asm line 9
static unsigned char sekibankiNOP_byteCode[] = {
	0x90, // NOP ; line 10
};
static PatchByteCode sekibankiNOP_patchByteCode = { sekibankiNOP_byteCode, 1, nullptr, 0 };
// sekibankiID_FIX declared in sekibanki.asm line 14
static unsigned char sekibankiID_FIX_byteCode[] = {
	0x80, 0xBE, 0x73, 0x05, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x573],0x00 ; line 15
	0x0F, 0x84, 0x0F, 0x00, 0x00, 0x00,                         // JE LABEL1 ; line 16
	0xC7, 0x86, 0x4C, 0x03, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x34C],0x00000020 ; line 17
	0xE9, 0x1D, 0x00, 0x00, 0x00,                               // JMP LABELEND ; line 19
	0x8B, 0xAE, 0x70, 0x01, 0x00, 0x00,                         // MOV EBP,[ESI+0x170] ; line 21
	0x80, 0xBD, 0x73, 0x05, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [EBP+0x573],0x00 ; line 22
	0x0F, 0x84, 0x0A, 0x00, 0x00, 0x00,                         // JE LABELEND ; line 23
	0xC7, 0x86, 0x4C, 0x03, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x34C],0x00000020 ; line 24
	0x31, 0xED,                                                 // XOR EBP,EBP ; line 27
	0x66, 0x39, 0xAE, 0x96, 0x01, 0x00, 0x00,                   // CMP [ESI+0x196],BP ; line 28
};
static PatchByteCode sekibankiID_FIX_patchByteCode = { sekibankiID_FIX_byteCode, 66, nullptr, 0 };
// sekibankiD214_DRAIN declared in sekibanki.asm line 38
static unsigned char sekibankiD214_DRAIN_byteCode[] = {
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x02, // MOV BYTE PTR [ESI+0x194],0x02 ; line 39
};
static PatchByteCode sekibankiD214_DRAIN_patchByteCode = { sekibankiD214_DRAIN_byteCode, 7, nullptr, 0 };
// sekibankiD214_DRAIN2 declared in sekibanki.asm line 43
static unsigned char sekibankiD214_DRAIN2_byteCode[] = {
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000001 ; line 44
	0x0F, 0x84, 0x25, 0x00, 0x00, 0x00,                         // JE LABEL1 ; line 45
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000002 ; line 46
	0x0F, 0x84, 0x15, 0x00, 0x00, 0x00,                         // JE LABEL1 ; line 47
	0x81, 0xBE, 0x90, 0x01, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x190],0x00000007 ; line 48
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE LABEL1 ; line 49
	0xE9, 0x47, 0x00, 0x00, 0x00,                               // JMP LABEL2 ; line 50
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x01,                   // CMP BYTE PTR [ESI+0x194],0x01 ; line 52
	0x0F, 0x85, 0x3A, 0x00, 0x00, 0x00,                         // JNE LABEL2 ; line 53
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 54
	0x66, 0x8B, 0x86, 0x9E, 0x04, 0x00, 0x00,                   // MOV AX,[ESI+0x49E] ; line 55
	0x66, 0x81, 0xC0, 0xC8, 0x00,                               // ADD AX,0x00C8 ; line 56
	0x66, 0x3B, 0x86, 0xA0, 0x04, 0x00, 0x00,                   // CMP AX,WORD PTR [ESI+0x4A0] ; line 57
	0x0F, 0x8F, 0x0C, 0x00, 0x00, 0x00,                         // JG LABEL3 ; line 58
	0x66, 0x89, 0x86, 0x9E, 0x04, 0x00, 0x00,                   // MOV WORD PTR [ESI+0x49E],AX ; line 59
	0xE9, 0x0E, 0x00, 0x00, 0x00,                               // JMP LABEL2 ; line 60
	0x66, 0x8B, 0x86, 0xA0, 0x04, 0x00, 0x00,                   // MOV AX,[ESI+0x4A0] ; line 62
	0x66, 0x89, 0x86, 0x9E, 0x04, 0x00, 0x00,                   // MOV WORD PTR [ESI+0x49E],AX ; line 63
	0x0F, 0xB7, 0x86, 0x3E, 0x01, 0x00, 0x00,                   // MOVZX EAX,WORD PTR [ESI+0x13E] ; line 66
};
static PatchByteCode sekibankiD214_DRAIN2_patchByteCode = { sekibankiD214_DRAIN2_byteCode, 131, nullptr, 0 };
// sekibankiD236_SMTH declared in sekibanki.asm line 71
static unsigned char sekibankiD236_SMTH_byteCode[] = {
	0x66, 0xC7, 0x86, 0x6C, 0x03, 0x00, 0x00, 0x1E, 0x00, // MOV WORD PTR [ESI+0x36C],0x001E ; line 72
};
static PatchByteCode sekibankiD236_SMTH_patchByteCode = { sekibankiD236_SMTH_byteCode, 9, nullptr, 0 };
// sekibankiLOCKSOE declared in sekibanki.asm line 85
static unsigned char sekibankiLOCKSOE_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x5760E2 ; line 86
};
static JumpTarget sekibankiLOCKSOE_jumpData[] = {
	{ 0x001, 0x5760E2 },
};
static PatchByteCode sekibankiLOCKSOE_patchByteCode = { sekibankiLOCKSOE_byteCode, 5, sekibankiLOCKSOE_jumpData, 1 };
// sekibankiSOEFLASH declared in sekibanki.asm line 90
static unsigned char sekibankiSOEFLASH_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x02, 0x00, // CMP WORD PTR [ESI+0x140],0x02 ; line 91
};
static PatchByteCode sekibankiSOEFLASH_patchByteCode = { sekibankiSOEFLASH_byteCode, 9, nullptr, 0 };
// sekibankiSOEMOMENTUMSTART declared in sekibanki.asm line 95
static unsigned char sekibankiSOEMOMENTUMSTART_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x78, 0x00, // CMP WORD PTR [ESI+0x140],0x78 ; line 96
};
static PatchByteCode sekibankiSOEMOMENTUMSTART_patchByteCode = { sekibankiSOEMOMENTUMSTART_byteCode, 9, nullptr, 0 };
// sekibankiLOCKCLONES1 declared in sekibanki.asm line 102
static unsigned char sekibankiLOCKCLONES1_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x05, 0x00, // CMP WORD PTR [ESI+0x13E],0x05 ; line 103
};
static PatchByteCode sekibankiLOCKCLONES1_patchByteCode = { sekibankiLOCKCLONES1_byteCode, 9, nullptr, 0 };
// sekibankiLOCKCLONES2 declared in sekibanki.asm line 107
static unsigned char sekibankiLOCKCLONES2_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x58105D ; line 108
};
static JumpTarget sekibankiLOCKCLONES2_jumpData[] = {
	{ 0x001, 0x58105D },
};
static PatchByteCode sekibankiLOCKCLONES2_patchByteCode = { sekibankiLOCKCLONES2_byteCode, 5, sekibankiLOCKCLONES2_jumpData, 1 };
// sekibankiLOCKSWORD declared in sekibanki.asm line 112
static unsigned char sekibankiLOCKSWORD_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x73, 0x00, // CMP WORD PTR [ESI+0x140],0x73 ; line 113
};
static PatchByteCode sekibankiLOCKSWORD_patchByteCode = { sekibankiLOCKSWORD_byteCode, 9, nullptr, 0 };
// sekibankiSWAPPOS declared in sekibanki.asm line 125
static unsigned char sekibankiSWAPPOS_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 126
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,                         // JNE 0x57ED2F ; line 127
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 128
	0x0F, 0x85, 0x02, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 129
	0x60,                                                       // PUSHAD ; line 130
	0x61,                                                       // POPAD ; line 131
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x0A ; line 135
	0x0F, 0x8F, 0x05, 0x00, 0x00, 0x00,                         // JG SHORT LABELZ ; line 136
	0xE9, 0x25, 0x00, 0x00, 0x00,                               // JMP END2 ; line 137
	0x60,                                                       // PUSHAD ; line 139
	0x8A, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV AL,[ESI+0x113] ; line 140
	0x80, 0xF8, 0x10,                                           // CMP AL,0x10 ; line 141
	0x0F, 0x86, 0x0E, 0x00, 0x00, 0x00,                         // JBE SHORT LABELK ; line 142
	0x80, 0xE8, 0x10,                                           // SUB AL,0x10 ; line 143
	0x88, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],AL ; line 144
	0xE9, 0x06, 0x00, 0x00, 0x00,                               // JMP SHORT LABELK1 ; line 145
	0x61,                                                       // POPAD ; line 147
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57ED2F ; line 148
	0x61,                                                       // POPAD ; line 151
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57F73D ; line 154
};
static JumpTarget sekibankiSWAPPOS_jumpData[] = {
	{ 0x00B, 0x57ED2F },
	{ 0x056, 0x57ED2F },
	{ 0x05C, 0x57F73D },
};
static PatchByteCode sekibankiSWAPPOS_patchByteCode = { sekibankiSWAPPOS_byteCode, 96, sekibankiSWAPPOS_jumpData, 3 };
// sekibanki2HEADDROPSC declared in sekibanki.asm line 219
static unsigned char sekibanki2HEADDROPSC_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x02, 0x00,       // CMP WORD PTR [ESI+0x13E],0x02 ; line 221
	0x0F, 0x84, 0xDE, 0xAD, 0xBE, 0xEF,                         // JE 0x57ED2F ; line 222
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x01, 0x00,       // CMP WORD PTR [ESI+0x13E],0x01 ; line 223
	0x0F, 0x84, 0x12, 0x03, 0x00, 0x00,                         // JE SUBSEQ1 ; line 224
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 225
	0x0F, 0x85, 0x89, 0x00, 0x00, 0x00,                         // JNE LABEL1 ; line 226
	0x60,                                                       // PUSHAD ; line 227
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 228
	0x8B, 0x88, 0xFC, 0x00, 0x00, 0x00,                         // MOV ECX,[EAX+0xFC] ; line 229
	0x89, 0x8E, 0x78, 0x03, 0x00, 0x00,                         // MOV [ESI+0x378],ECX ; line 232
	0xD9, 0xEE,                                                 // FLDZ ; line 233
	0xD9, 0x98, 0xFC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [EAX+0xFC] ; line 236
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 237
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 238
	0xD9, 0xE8,                                                 // FLD1 ; line 240
	0xD9, 0x96, 0x1C, 0x01, 0x00, 0x00,                         // FST DWORD PTR [ESI+0x11C] ; line 241
	0xD9, 0x9E, 0x20, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x120] ; line 242
	0xD9, 0x81, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xEC] ; line 244
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 245
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 246
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 247
	0xD9, 0xEE,                                                 // FLDZ ; line 248
	0xD9, 0x96, 0xF8, 0x00, 0x00, 0x00,                         // FST DWORD PTR [ESI+0xF8] ; line 249
	0xD9, 0x9E, 0x00, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x100] ; line 250
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 251
	0x0F, 0x85, 0x0B, 0x00, 0x00, 0x00,                         // JNE SHORT NEXTACC ; line 252
	0xD9, 0x05, 0x2C, 0x78, 0x86, 0x00,                         // FLD DWORD PTR [0x86782C] ; line 253
	0xE9, 0x08, 0x00, 0x00, 0x00,                               // JMP SHORT NEXTACC1 ; line 254
	0xD9, 0xEE,                                                 // FLDZ ; line 256
	0xD8, 0x25, 0x2C, 0x78, 0x86, 0x00,                         // FSUB DWORD PTR [0x86782C] ; line 257
	0xD9, 0x9E, 0xF4, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF4] ; line 259
	0x61,                                                       // POPAD ; line 260
	0x60,                                                       // PUSHAD ; line 264
	0x6A, 0x02,                                                 // PUSH 0x02 ; line 266
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 267
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE30 ; line 268
	0x61,                                                       // POPAD ; line 269
	0x60,                                                       // PUSHAD ; line 272
	0x8B, 0x86, 0x90, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x190] ; line 273
	0x81, 0xF8, 0x04, 0x00, 0x00, 0x00,                         // CMP EAX,0x04 ; line 274
	0x0F, 0x84, 0x33, 0x00, 0x00, 0x00,                         // JE SHORT ALABEL3A ; line 275
	0x81, 0xF8, 0x06, 0x00, 0x00, 0x00,                         // CMP EAX,0x06 ; line 276
	0x0F, 0x84, 0x11, 0x00, 0x00, 0x00,                         // JE SHORT ALABEL3B ; line 277
	0x81, 0xF8, 0x08, 0x00, 0x00, 0x00,                         // CMP EAX,0x08 ; line 278
	0x0F, 0x84, 0x1B, 0x00, 0x00, 0x00,                         // JE SHORT ALABEL3A ; line 279
	0xE9, 0x1D, 0x00, 0x00, 0x00,                               // JMP SHORT ALABEL3 ; line 280
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 282
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 283
	0xE9, 0x07, 0x00, 0x00, 0x00,                               // JMP SHORT ALABEL3 ; line 284
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 286
	0x8B, 0x86, 0x90, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x190] ; line 289
	0x81, 0xF8, 0x00, 0x00, 0x00, 0x00,                         // CMP EAX, 0x00 ; line 291
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                         // JNE SHORT ALABEL4 ; line 292
	0xE9, 0x3E, 0x00, 0x00, 0x00,                               // JMP SHORT ALABEL5 ; line 299
	0x0F, 0xB7, 0x86, 0x6C, 0x03, 0x00, 0x00,                   // MOVZX EAX, WORD PTR [ESI+0x36C] ; line 301
	0x66, 0x81, 0xC0, 0x01, 0x00,                               // ADD AX,0x01 ; line 302
	0x66, 0x89, 0x86, 0x6C, 0x03, 0x00, 0x00,                   // MOV WORD PTR [ESI+0x36C],AX ; line 303
	0x66, 0x81, 0xF8, 0x04, 0x00,                               // CMP AX,0x04 ; line 304
	0x0F, 0x8C, 0x20, 0x00, 0x00, 0x00,                         // JL SHORT ALABEL5 ; line 305
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 306
	0x0F, 0x84, 0x13, 0x00, 0x00, 0x00,                         // JE SHORT ALABEL5 ; line 307
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 308
	0x66, 0xC7, 0x86, 0x6C, 0x03, 0x00, 0x00, 0x00, 0x00,       // MOV WORD PTR [ESI+0x36C],0x00 ; line 309
	0x61,                                                       // POPAD ; line 313
	0x80, 0xBE, 0x04, 0x01, 0x00, 0x00, 0xFF,                   // CMP BYTE PTR [ESI+0x104],0xFF ; line 317
	0x0F, 0x85, 0x0B, 0x00, 0x00, 0x00,                         // JNE SHORT FACING ; line 318
	0xD9, 0x05, 0x0C, 0x15, 0x87, 0x00,                         // FLD DWORD PTR [0x87150C] ; line 319
	0xE9, 0x02, 0x00, 0x00, 0x00,                               // JMP SHORT FACING1 ; line 320
	0xD9, 0xE8,                                                 // FLD1 ; line 322
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF4] ; line 324
	0xD8, 0x35, 0xD4, 0x50, 0x89, 0x00,                         // FDIV DWORD PTR [0x8950D4] ; line 325
	0xD9, 0x96, 0xF4, 0x00, 0x00, 0x00,                         // FST DWORD PTR [ESI+0xF4] ; line 326
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 327
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0xEC] ; line 328
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 329
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x07, 0x00,       // CMP WORD PTR [ESI+0x140],0x07 ; line 336
	0x0F, 0x85, 0x2F, 0x01, 0x00, 0x00,                         // JNE ENDCHECK ; line 337
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x142],0x00 ; line 338
	0x0F, 0x85, 0x20, 0x01, 0x00, 0x00,                         // JNE ENDCHECK ; line 339
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 346
	0x6A, 0x01,                                                 // PUSH 0x01 ; line 347
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x464980 ; line 348
	0xBA, 0x00, 0x00, 0x00, 0x00,                               // MOV EDX,0x00000000 ; line 351
	0x89, 0x54, 0x24, 0x10,                                     // MOV [ESP+0x10],EDX ; line 352
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 354
	0x8D, 0x44, 0x24, 0x78,                                     // LEA EAX,[ESP+0x78] ; line 355
	0xDB, 0x44, 0x24, 0x14,                                     // FILD DWORD PTR [ESP+0x14] ; line 357
	0x50,                                                       // PUSH EAX ; line 358
	0x6A, 0x01,                                                 // PUSH 0x01 ; line 359
	0x8B, 0x86, 0x70, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x170] ; line 372
	0x0F, 0xBE, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVSX EDX,BYTE PTR [ESI+0x104] ; line 373
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xEC] ; line 374
	0xD8, 0xA6, 0xEC, 0x00, 0x00, 0x00,                         // FSUB DWORD PTR [ESI+0xEC] ; line 375
	0x89, 0x94, 0x24, 0x80, 0x00, 0x00, 0x00,                   // MOV [ESP+0x80],EDX ; line 376
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                         // SUB ESP,0x08 ; line 377
	0xDB, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,                   // FILD DWORD PTR [ESP+0x88] ; line 379
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 380
	0xD9, 0x5C, 0x24, 0x04,                                     // FSTP DWORD PTR [ESP+0x04] ; line 381
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xF0] ; line 382
	0xD8, 0x05, 0xE0, 0xBB, 0x85, 0x00,                         // FADD DWORD PTR [0x85BBE0] ; line 383
	0xD8, 0xA6, 0xF0, 0x00, 0x00, 0x00,                         // FSUB DWORD PTR [ESI+0xF0] ; line 384
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 385
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409760 ; line 387
	0xD9, 0xE0,                                                 // FCHS ; line 388
	0x81, 0xC4, 0x08, 0x00, 0x00, 0x00,                         // ADD ESP,0x08 ; line 389
	0xDE, 0xC1,                                                 // FADDP ST1 ; line 391
	0xD8, 0x25, 0xF0, 0x89, 0x85, 0x00,                         // FSUB DWORD PTR [0x8589F0] ; line 392
	0xD9, 0x9C, 0x24, 0x80, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x80] ; line 394
	0xD9, 0xEE,                                                 // FLDZ ; line 400
	0xD9, 0x9C, 0x24, 0x84, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x84] ; line 401
	0xD9, 0xE8,                                                 // FLD1 ; line 403
	0xD9, 0x9C, 0x24, 0x88, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x88] ; line 404
	0xD9, 0xEE,                                                 // FLDZ ; line 406
	0xD9, 0x9C, 0x24, 0x8C, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x8C] ; line 408
	0xD9, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESP+0x80] ; line 409
	0x0F, 0xB6, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVZX ECX,BYTE PTR [ESI+0x104] ; line 410
	0xD9, 0xE0,                                                 // FCHS ; line 411
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 412
	0x51,                                                       // PUSH ECX ; line 413
	0x51,                                                       // PUSH ECX ; line 414
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 415
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 416
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 417
	0xDC, 0x0D, 0xB0, 0x77, 0x86, 0x00,                         // FMUL QWORD PTR [0x8677B0] ; line 419
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0xF0] ; line 420
	0xD9, 0x5C, 0x24, 0x24,                                     // FSTP DWORD PTR [ESP+0x24] ; line 421
	0xD9, 0x44, 0x24, 0x24,                                     // FLD DWORD PTR [ESP+0x24] ; line 422
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 423
	0x51,                                                       // PUSH ECX ; line 424
	0xD9, 0x84, 0x24, 0x8C, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESP+0x8C] ; line 425
	0xD9, 0xE0,                                                 // FCHS ; line 426
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 427
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 428
	0x0F, 0xBE, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVSX EDX,BYTE PTR [ESI+0x104] ; line 429
	0xDC, 0x0D, 0xB0, 0x77, 0x86, 0x00,                         // FMUL QWORD PTR [0x8677B0] ; line 431
	0x8B, 0x07,                                                 // MOV EAX,[EDI] ; line 432
	0x89, 0x54, 0x24, 0x28,                                     // MOV [ESP+0x28],EDX ; line 433
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 434
	0xDB, 0x44, 0x24, 0x28,                                     // FILD DWORD PTR [ESP+0x28] ; line 435
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 436
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0xEC] ; line 437
	0xD9, 0x5C, 0x24, 0x28,                                     // FSTP DWORD PTR [ESP+0x28] ; line 438
	0xD9, 0x44, 0x24, 0x28,                                     // FLD DWORD PTR [ESP+0x28] ; line 439
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 440
	0x68, 0x55, 0x03, 0x00, 0x00,                               // PUSH 0x00000355 ; line 441
	0xFF, 0xD0,                                                 // CALL EAX ; line 442
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x2C, 0x01, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x12C ; line 449
	0x0F, 0x8F, 0x12, 0x00, 0x00, 0x00,                         // JG SHORT LABELZ1 ; line 450
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 451
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE SHORT LABELZ1 ; line 452
	0xE9, 0x2C, 0x00, 0x00, 0x00,                               // JMP SHORT END ; line 453
	0x60,                                                       // PUSHAD ; line 455
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 456
	0x8A, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV AL,[ESI+0x113] ; line 457
	0x80, 0xF8, 0x10,                                           // CMP AL,0x10 ; line 458
	0x0F, 0x86, 0x0E, 0x00, 0x00, 0x00,                         // JBE SHORT LABELJ ; line 459
	0x80, 0xE8, 0x10,                                           // SUB AL,0x10 ; line 460
	0x88, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],AL ; line 461
	0xE9, 0x06, 0x00, 0x00, 0x00,                               // JMP SHORT LABELJ1 ; line 462
	0x61,                                                       // POPAD ; line 464
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57ED2F ; line 465
	0x61,                                                       // POPAD ; line 467
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57F73D ; line 469
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 472
	0x0F, 0x85, 0x11, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL21 ; line 473
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 474
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 475
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x64 ; line 479
	0x0F, 0x8F, 0x12, 0x00, 0x00, 0x00,                         // JG SHORT LABELZ ; line 480
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 481
	0x0F, 0x8E, 0x05, 0x00, 0x00, 0x00,                         // JLE SHORT LABELZ ; line 482
	0xE9, 0x2C, 0x00, 0x00, 0x00,                               // JMP END2 ; line 483
	0x60,                                                       // PUSHAD ; line 485
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 486
	0x8A, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV AL,[ESI+0x113] ; line 487
	0x80, 0xF8, 0x10,                                           // CMP AL,0x10 ; line 488
	0x0F, 0x86, 0x0E, 0x00, 0x00, 0x00,                         // JBE SHORT LABELK ; line 489
	0x80, 0xE8, 0x10,                                           // SUB AL,0x10 ; line 490
	0x88, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],AL ; line 491
	0xE9, 0x06, 0x00, 0x00, 0x00,                               // JMP SHORT LABELK1 ; line 492
	0x61,                                                       // POPAD ; line 494
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57ED2F ; line 495
	0x61,                                                       // POPAD ; line 498
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57F73D ; line 501
};
static JumpTarget sekibanki2HEADDROPSC_jumpData[] = {
	{ 0x00B, 0x57ED2F },
	{ 0x0BD, 0x48CE30 },
	{ 0x1C6, 0x464980 },
	{ 0x229, 0x409760 },
	{ 0x27D, 0x409580 },
	{ 0x2A6, 0x4095F0 },
	{ 0x326, 0x57ED2F },
	{ 0x32C, 0x57F73D },
	{ 0x39A, 0x57ED2F },
	{ 0x3A0, 0x57F73D },
};
static PatchByteCode sekibanki2HEADDROPSC_patchByteCode = { sekibanki2HEADDROPSC_byteCode, 932, sekibanki2HEADDROPSC_jumpData, 10 };
// sekibankiHEADDROPSC declared in sekibanki.asm line 507
static unsigned char sekibankiHEADDROPSC_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 508
	0x0F, 0x85, 0xB6, 0x02, 0x00, 0x00,                         // JNE SUBSEQ1 ; line 509
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 510
	0x0F, 0x85, 0x67, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 511
	0x60,                                                       // PUSHAD ; line 512
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 513
	0x8B, 0x88, 0xFC, 0x00, 0x00, 0x00,                         // MOV ECX,[EAX+0xFC] ; line 514
	0x89, 0x8E, 0x78, 0x03, 0x00, 0x00,                         // MOV [ESI+0x378],ECX ; line 517
	0xD9, 0xEE,                                                 // FLDZ ; line 518
	0xD9, 0x98, 0xFC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [EAX+0xFC] ; line 521
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 522
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 523
	0xD9, 0xE8,                                                 // FLD1 ; line 525
	0xD9, 0x96, 0x1C, 0x01, 0x00, 0x00,                         // FST DWORD PTR [ESI+0x11C] ; line 526
	0xD9, 0x9E, 0x20, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x120] ; line 527
	0xD9, 0x81, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xEC] ; line 529
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 530
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 531
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 532
	0xD9, 0xEE,                                                 // FLDZ ; line 533
	0xD9, 0x96, 0xF4, 0x00, 0x00, 0x00,                         // FST DWORD PTR [ESI+0xF4] ; line 534
	0xD9, 0x96, 0xF8, 0x00, 0x00, 0x00,                         // FST DWORD PTR [ESI+0xF8] ; line 535
	0xD9, 0x9E, 0x00, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x100] ; line 536
	0x61,                                                       // POPAD ; line 537
	0x60,                                                       // PUSHAD ; line 541
	0x6A, 0x02,                                                 // PUSH 0x02 ; line 543
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 544
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE30 ; line 545
	0x61,                                                       // POPAD ; line 546
	0x60,                                                       // PUSHAD ; line 548
	0x8B, 0x86, 0x90, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x190] ; line 549
	0x81, 0xF8, 0x04, 0x00, 0x00, 0x00,                         // CMP EAX,0x04 ; line 550
	0x0F, 0x84, 0x33, 0x00, 0x00, 0x00,                         // JE SHORT ALABEL3A ; line 551
	0x81, 0xF8, 0x06, 0x00, 0x00, 0x00,                         // CMP EAX,0x06 ; line 552
	0x0F, 0x84, 0x11, 0x00, 0x00, 0x00,                         // JE SHORT ALABEL3B ; line 553
	0x81, 0xF8, 0x08, 0x00, 0x00, 0x00,                         // CMP EAX,0x08 ; line 554
	0x0F, 0x84, 0x1B, 0x00, 0x00, 0x00,                         // JE SHORT ALABEL3A ; line 555
	0xE9, 0x1D, 0x00, 0x00, 0x00,                               // JMP SHORT ALABEL3 ; line 556
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 558
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 559
	0xE9, 0x07, 0x00, 0x00, 0x00,                               // JMP SHORT ALABEL3 ; line 560
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 562
	0x8B, 0x86, 0x90, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x190] ; line 565
	0x81, 0xF8, 0x00, 0x00, 0x00, 0x00,                         // CMP EAX, 0x00 ; line 567
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                         // JNE SHORT ALABEL4 ; line 568
	0xE9, 0x3E, 0x00, 0x00, 0x00,                               // JMP SHORT ALABEL5 ; line 575
	0x0F, 0xB7, 0x86, 0x6C, 0x03, 0x00, 0x00,                   // MOVZX EAX, WORD PTR [ESI+0x36C] ; line 577
	0x66, 0x81, 0xC0, 0x01, 0x00,                               // ADD AX,0x01 ; line 578
	0x66, 0x89, 0x86, 0x6C, 0x03, 0x00, 0x00,                   // MOV WORD PTR [ESI+0x36C],AX ; line 579
	0x66, 0x81, 0xF8, 0x04, 0x00,                               // CMP AX,0x04 ; line 580
	0x0F, 0x8C, 0x20, 0x00, 0x00, 0x00,                         // JL SHORT ALABEL5 ; line 581
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 582
	0x0F, 0x84, 0x13, 0x00, 0x00, 0x00,                         // JE SHORT ALABEL5 ; line 583
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 584
	0x66, 0xC7, 0x86, 0x6C, 0x03, 0x00, 0x00, 0x00, 0x00,       // MOV WORD PTR [ESI+0x36C],0x00 ; line 585
	0x61,                                                       // POPAD ; line 589
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x07, 0x00,       // CMP WORD PTR [ESI+0x140],0x07 ; line 597
	0x0F, 0x85, 0x2F, 0x01, 0x00, 0x00,                         // JNE ENDCHECK ; line 598
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x142],0x00 ; line 599
	0x0F, 0x85, 0x20, 0x01, 0x00, 0x00,                         // JNE ENDCHECK ; line 600
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 607
	0x6A, 0x01,                                                 // PUSH 0x01 ; line 608
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x464980 ; line 609
	0xBA, 0x00, 0x00, 0x00, 0x00,                               // MOV EDX,0x00000000 ; line 612
	0x89, 0x54, 0x24, 0x10,                                     // MOV [ESP+0x10],EDX ; line 613
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 615
	0x8D, 0x44, 0x24, 0x78,                                     // LEA EAX,[ESP+0x78] ; line 616
	0xDB, 0x44, 0x24, 0x14,                                     // FILD DWORD PTR [ESP+0x14] ; line 618
	0x50,                                                       // PUSH EAX ; line 619
	0x6A, 0x01,                                                 // PUSH 0x01 ; line 620
	0x8B, 0x86, 0x70, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x170] ; line 634
	0x0F, 0xBE, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVSX EDX,BYTE PTR [ESI+0x104] ; line 635
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xEC] ; line 636
	0xD8, 0xA6, 0xEC, 0x00, 0x00, 0x00,                         // FSUB DWORD PTR [ESI+0xEC] ; line 637
	0x89, 0x94, 0x24, 0x80, 0x00, 0x00, 0x00,                   // MOV [ESP+0x80],EDX ; line 638
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,                         // SUB ESP,0x08 ; line 639
	0xDB, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00,                   // FILD DWORD PTR [ESP+0x88] ; line 641
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 642
	0xD9, 0x5C, 0x24, 0x04,                                     // FSTP DWORD PTR [ESP+0x04] ; line 643
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xF0] ; line 644
	0xD8, 0x05, 0xE0, 0xBB, 0x85, 0x00,                         // FADD DWORD PTR [0x85BBE0] ; line 645
	0xD8, 0xA6, 0xF0, 0x00, 0x00, 0x00,                         // FSUB DWORD PTR [ESI+0xF0] ; line 646
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 647
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409760 ; line 649
	0xD9, 0xE0,                                                 // FCHS ; line 650
	0x81, 0xC4, 0x08, 0x00, 0x00, 0x00,                         // ADD ESP,0x08 ; line 651
	0xDE, 0xC1,                                                 // FADDP ST1 ; line 653
	0xD8, 0x25, 0xF0, 0x89, 0x85, 0x00,                         // FSUB DWORD PTR [0x8589F0] ; line 654
	0xD9, 0x9C, 0x24, 0x80, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x80] ; line 656
	0xD9, 0xEE,                                                 // FLDZ ; line 662
	0xD9, 0x9C, 0x24, 0x84, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x84] ; line 663
	0xD9, 0xE8,                                                 // FLD1 ; line 665
	0xD9, 0x9C, 0x24, 0x88, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x88] ; line 666
	0xD9, 0xEE,                                                 // FLDZ ; line 669
	0xD9, 0x9C, 0x24, 0x8C, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x8C] ; line 671
	0xD9, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESP+0x80] ; line 672
	0x0F, 0xB6, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVZX ECX,BYTE PTR [ESI+0x104] ; line 673
	0xD9, 0xE0,                                                 // FCHS ; line 674
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 675
	0x51,                                                       // PUSH ECX ; line 676
	0x51,                                                       // PUSH ECX ; line 677
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 678
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 679
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 680
	0xDC, 0x0D, 0xB0, 0x77, 0x86, 0x00,                         // FMUL QWORD PTR [0x8677B0] ; line 682
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0xF0] ; line 683
	0xD9, 0x5C, 0x24, 0x24,                                     // FSTP DWORD PTR [ESP+0x24] ; line 684
	0xD9, 0x44, 0x24, 0x24,                                     // FLD DWORD PTR [ESP+0x24] ; line 685
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 686
	0x51,                                                       // PUSH ECX ; line 687
	0xD9, 0x84, 0x24, 0x8C, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESP+0x8C] ; line 688
	0xD9, 0xE0,                                                 // FCHS ; line 689
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 690
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 691
	0x0F, 0xBE, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVSX EDX,BYTE PTR [ESI+0x104] ; line 692
	0xDC, 0x0D, 0xB0, 0x77, 0x86, 0x00,                         // FMUL QWORD PTR [0x8677B0] ; line 694
	0x8B, 0x07,                                                 // MOV EAX,[EDI] ; line 695
	0x89, 0x54, 0x24, 0x28,                                     // MOV [ESP+0x28],EDX ; line 696
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 697
	0xDB, 0x44, 0x24, 0x28,                                     // FILD DWORD PTR [ESP+0x28] ; line 698
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 699
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0xEC] ; line 700
	0xD9, 0x5C, 0x24, 0x28,                                     // FSTP DWORD PTR [ESP+0x28] ; line 701
	0xD9, 0x44, 0x24, 0x28,                                     // FLD DWORD PTR [ESP+0x28] ; line 702
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 703
	0x68, 0x54, 0x03, 0x00, 0x00,                               // PUSH 0x00000354 ; line 704
	0xFF, 0xD0,                                                 // CALL EAX ; line 705
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x9C, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x9C ; line 713
	0x0F, 0x8F, 0x12, 0x00, 0x00, 0x00,                         // JG SHORT LABELZ1 ; line 714
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 715
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE SHORT LABELZ1 ; line 716
	0xE9, 0x2C, 0x00, 0x00, 0x00,                               // JMP SHORT END ; line 717
	0x60,                                                       // PUSHAD ; line 719
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 720
	0x8A, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV AL,[ESI+0x113] ; line 721
	0x80, 0xF8, 0x10,                                           // CMP AL,0x10 ; line 722
	0x0F, 0x86, 0x0E, 0x00, 0x00, 0x00,                         // JBE SHORT LABELJ ; line 723
	0x80, 0xE8, 0x10,                                           // SUB AL,0x10 ; line 724
	0x88, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],AL ; line 725
	0xE9, 0x06, 0x00, 0x00, 0x00,                               // JMP SHORT LABELJ1 ; line 726
	0x61,                                                       // POPAD ; line 728
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57ED2F ; line 729
	0x61,                                                       // POPAD ; line 731
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57F73D ; line 733
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 736
	0x0F, 0x85, 0x11, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL21 ; line 737
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 738
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 739
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x64 ; line 743
	0x0F, 0x8F, 0x12, 0x00, 0x00, 0x00,                         // JG SHORT LABELZ ; line 744
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 745
	0x0F, 0x8E, 0x05, 0x00, 0x00, 0x00,                         // JLE SHORT LABELZ ; line 746
	0xE9, 0x2C, 0x00, 0x00, 0x00,                               // JMP END2 ; line 747
	0x60,                                                       // PUSHAD ; line 749
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 750
	0x8A, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV AL,[ESI+0x113] ; line 751
	0x80, 0xF8, 0x10,                                           // CMP AL,0x10 ; line 752
	0x0F, 0x86, 0x0E, 0x00, 0x00, 0x00,                         // JBE SHORT LABELK ; line 753
	0x80, 0xE8, 0x10,                                           // SUB AL,0x10 ; line 754
	0x88, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],AL ; line 755
	0xE9, 0x06, 0x00, 0x00, 0x00,                               // JMP SHORT LABELK1 ; line 756
	0x61,                                                       // POPAD ; line 758
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57ED2F ; line 759
	0x61,                                                       // POPAD ; line 762
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57F73D ; line 765
};
static JumpTarget sekibankiHEADDROPSC_jumpData[] = {
	{ 0x08C, 0x48CE30 },
	{ 0x15B, 0x464980 },
	{ 0x1BE, 0x409760 },
	{ 0x212, 0x409580 },
	{ 0x23B, 0x4095F0 },
	{ 0x2BB, 0x57ED2F },
	{ 0x2C1, 0x57F73D },
	{ 0x32F, 0x57ED2F },
	{ 0x335, 0x57F73D },
};
static PatchByteCode sekibankiHEADDROPSC_patchByteCode = { sekibankiHEADDROPSC_byteCode, 825, sekibankiHEADDROPSC_jumpData, 9 };
// sekibankiNECKSC declared in sekibanki.asm line 771
static unsigned char sekibankiNECKSC_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 772
	0x0F, 0x85, 0xC9, 0x01, 0x00, 0x00,                         // JNE SUBSEQ1 ; line 773
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 774
	0x0F, 0x85, 0x51, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 775
	0x60,                                                       // PUSHAD ; line 776
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 777
	0x8B, 0x88, 0xFC, 0x00, 0x00, 0x00,                         // MOV ECX,[EAX+0xFC] ; line 778
	0x89, 0x8E, 0x78, 0x03, 0x00, 0x00,                         // MOV [ESI+0x378],ECX ; line 781
	0xD9, 0xEE,                                                 // FLDZ ; line 782
	0xD9, 0x98, 0xFC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [EAX+0xFC] ; line 785
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 786
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 787
	0xD9, 0x81, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xEC] ; line 789
	0xD9, 0x96, 0xEC, 0x00, 0x00, 0x00,                         // FST DWORD PTR [ESI+0xEC] ; line 790
	0xD9, 0x9E, 0xF4, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF4] ; line 791
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 792
	0xD9, 0x96, 0xF0, 0x00, 0x00, 0x00,                         // FST DWORD PTR [ESI+0xF0] ; line 793
	0xD9, 0x9E, 0xF8, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF8] ; line 794
	0x61,                                                       // POPAD ; line 795
	0x60,                                                       // PUSHAD ; line 798
	0x8B, 0x86, 0x78, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x378] ; line 799
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xEC] ; line 801
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 802
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xF0] ; line 803
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 804
	0xD9, 0xEE,                                                 // FLDZ ; line 805
	0xD9, 0x9E, 0x00, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x100] ; line 806
	0x61,                                                       // POPAD ; line 808
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 810
	0xD8, 0xA6, 0xF4, 0x00, 0x00, 0x00,                         // FSUB DWORD PTR [ESI+0xF4] ; line 811
	0xD8, 0xC8,                                                 // FMUL ST0,ST0 ; line 812
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 813
	0xD8, 0xA6, 0xF8, 0x00, 0x00, 0x00,                         // FSUB DWORD PTR [ESI+0xF8] ; line 814
	0xD8, 0xC8,                                                 // FMUL ST0,ST0 ; line 815
	0xDE, 0xC1,                                                 // FADDP ; line 816
	0xD9, 0x05, 0x8C, 0x78, 0x86, 0x00,                         // FLD DWORD PTR [0x86788C] ; line 818
	0xDE, 0xD9,                                                 // FCOMPP ; line 819
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 820
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 821
	0x0F, 0x84, 0xF0, 0x00, 0x00, 0x00,                         // JE ENDCHECK ; line 822
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x144] ; line 825
	0xBA, 0x00, 0x00, 0x00, 0x00,                               // MOV EDX,0x0 ; line 826
	0xBB, 0x02, 0x00, 0x00, 0x00,                               // MOV EBX,0x2 ; line 827
	0xF7, 0xF3,                                                 // DIV EBX ; line 828
	0x81, 0xFA, 0x01, 0x00, 0x00, 0x00,                         // CMP EDX,0x1 ; line 829
	0x0F, 0x85, 0xD2, 0x00, 0x00, 0x00,                         // JNE ENDCHECK ; line 830
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 833
	0xD9, 0x9E, 0xF4, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF4] ; line 834
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 835
	0xD9, 0x9E, 0xF8, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF8] ; line 836
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                         // MOV ECX,[ESI+0x398] ; line 841
	0xBA, 0x00, 0x00, 0x00, 0x00,                               // MOV EDX,0x00000000 ; line 847
	0x89, 0x54, 0x24, 0x10,                                     // MOV [ESP+0x10],EDX ; line 848
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 850
	0x8D, 0x44, 0x24, 0x78,                                     // LEA EAX,[ESP+0x78] ; line 851
	0x50,                                                       // PUSH EAX ; line 852
	0x6A, 0x01,                                                 // PUSH 0x01 ; line 853
	0xD9, 0xEE,                                                 // FLDZ ; line 856
	0xD9, 0x9C, 0x24, 0x80, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x80] ; line 857
	0xD9, 0xEE,                                                 // FLDZ ; line 859
	0xD9, 0x9C, 0x24, 0x84, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x84] ; line 860
	0xD9, 0xE8,                                                 // FLD1 ; line 862
	0xD9, 0x9C, 0x24, 0x88, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x88] ; line 863
	0xD9, 0xEE,                                                 // FLDZ ; line 865
	0xD9, 0x9C, 0x24, 0x8C, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESP+0x8C] ; line 867
	0xD9, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESP+0x80] ; line 868
	0x0F, 0xB6, 0x8E, 0x04, 0x01, 0x00, 0x00,                   // MOVZX ECX,BYTE PTR [ESI+0x104] ; line 869
	0xD9, 0xE0,                                                 // FCHS ; line 870
	0x8B, 0x3E,                                                 // MOV EDI,[ESI] ; line 871
	0x51,                                                       // PUSH ECX ; line 872
	0x51,                                                       // PUSH ECX ; line 873
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                         // ADD EDI,0x44 ; line 874
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 875
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x409580 ; line 876
	0xDC, 0x0D, 0xB0, 0x77, 0x86, 0x00,                         // FMUL QWORD PTR [0x8677B0] ; line 878
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0xF0] ; line 879
	0xD9, 0x5C, 0x24, 0x24,                                     // FSTP DWORD PTR [ESP+0x24] ; line 880
	0xD9, 0x44, 0x24, 0x24,                                     // FLD DWORD PTR [ESP+0x24] ; line 881
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 882
	0x51,                                                       // PUSH ECX ; line 883
	0xD9, 0x84, 0x24, 0x8C, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESP+0x8C] ; line 884
	0xD9, 0xE0,                                                 // FCHS ; line 885
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 886
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x4095F0 ; line 887
	0x0F, 0xBE, 0x96, 0x04, 0x01, 0x00, 0x00,                   // MOVSX EDX,BYTE PTR [ESI+0x104] ; line 888
	0xDC, 0x0D, 0xB0, 0x77, 0x86, 0x00,                         // FMUL QWORD PTR [0x8677B0] ; line 890
	0x8B, 0x07,                                                 // MOV EAX,[EDI] ; line 891
	0x89, 0x54, 0x24, 0x28,                                     // MOV [ESP+0x28],EDX ; line 892
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 893
	0xDB, 0x44, 0x24, 0x28,                                     // FILD DWORD PTR [ESP+0x28] ; line 894
	0xDE, 0xC9,                                                 // FMULP ST1 ; line 895
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FADD DWORD PTR [ESI+0xEC] ; line 896
	0xD9, 0x5C, 0x24, 0x28,                                     // FSTP DWORD PTR [ESP+0x28] ; line 897
	0xD9, 0x44, 0x24, 0x28,                                     // FLD DWORD PTR [ESP+0x28] ; line 898
	0xD9, 0x1C, 0x24,                                           // FSTP DWORD PTR [ESP] ; line 899
	0x68, 0x57, 0x03, 0x00, 0x00,                               // PUSH 0x00000357 ; line 900
	0xFF, 0xD0,                                                 // CALL EAX ; line 901
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x84, 0x03, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x384 ; line 908
	0x0F, 0x8F, 0x05, 0x00, 0x00, 0x00,                         // JG SHORT LABELZ1 ; line 909
	0xE9, 0x05, 0x00, 0x00, 0x00,                               // JMP SHORT END ; line 910
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57ED2F ; line 912
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57F73D ; line 914
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 917
	0x0F, 0x85, 0x11, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL21 ; line 918
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 919
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 920
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x78 ; line 924
	0x0F, 0x8F, 0x12, 0x00, 0x00, 0x00,                         // JG SHORT LABELZ ; line 925
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 926
	0x0F, 0x8E, 0x05, 0x00, 0x00, 0x00,                         // JLE SHORT LABELZ ; line 927
	0xE9, 0x2C, 0x00, 0x00, 0x00,                               // JMP END2 ; line 928
	0x60,                                                       // PUSHAD ; line 930
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 931
	0x8A, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV AL,[ESI+0x113] ; line 932
	0x80, 0xF8, 0x10,                                           // CMP AL,0x10 ; line 933
	0x0F, 0x86, 0x0E, 0x00, 0x00, 0x00,                         // JBE SHORT LABELK ; line 934
	0x80, 0xE8, 0x10,                                           // SUB AL,0x10 ; line 935
	0x88, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],AL ; line 936
	0xE9, 0x06, 0x00, 0x00, 0x00,                               // JMP SHORT LABELK1 ; line 937
	0x61,                                                       // POPAD ; line 939
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57ED2F ; line 940
	0x61,                                                       // POPAD ; line 943
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57F73D ; line 946
};
static JumpTarget sekibankiNECKSC_jumpData[] = {
	{ 0x159, 0x409580 },
	{ 0x182, 0x4095F0 },
	{ 0x1CF, 0x57ED2F },
	{ 0x1D4, 0x57F73D },
	{ 0x242, 0x57ED2F },
	{ 0x248, 0x57F73D },
};
static PatchByteCode sekibankiNECKSC_patchByteCode = { sekibankiNECKSC_byteCode, 588, sekibankiNECKSC_jumpData, 6 };
// sekibankiBEAMSC1 declared in sekibanki.asm line 951
static unsigned char sekibankiBEAMSC1_byteCode[] = {
	0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x13E],0x00 ; line 952
	0x0F, 0x85, 0x3D, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 953
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 954
	0x0F, 0x85, 0x2D, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 955
	0x60,                                                       // PUSHAD ; line 956
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 957
	0x8B, 0x88, 0xFC, 0x00, 0x00, 0x00,                         // MOV ECX,[EAX+0xFC] ; line 958
	0x89, 0x8E, 0x78, 0x03, 0x00, 0x00,                         // MOV [ESI+0x378],ECX ; line 959
	0xD9, 0xEE,                                                 // FLDZ ; line 960
	0xD9, 0x98, 0xFC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [EAX+0xFC] ; line 961
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 962
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x0A,                   // MOV BYTE PTR [ESI+0x194],0x0A ; line 963
	0x61,                                                       // POPAD ; line 964
	0x60,                                                       // PUSHAD ; line 967
	0x8B, 0x86, 0x78, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x378] ; line 968
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xEC] ; line 969
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 970
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xF0] ; line 971
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 972
	0xD9, 0xEE,                                                 // FLDZ ; line 973
	0xD9, 0x96, 0xF4, 0x00, 0x00, 0x00,                         // FST DWORD PTR [ESI+0xF4] ; line 974
	0xD9, 0x96, 0x00, 0x01, 0x00, 0x00,                         // FST DWORD PTR [ESI+0x100] ; line 975
	0xD9, 0x9E, 0xF8, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF8] ; line 976
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 978
	0x8A, 0x80, 0x04, 0x01, 0x00, 0x00,                         // MOV AL,[EAX+0x104] ; line 979
	0x38, 0x86, 0x04, 0x01, 0x00, 0x00,                         // CMP [ESI+0x104],AL ; line 980
	0x0F, 0x84, 0x18, 0x00, 0x00, 0x00,                         // JE SHORT LABELY ; line 981
	0x88, 0x86, 0x04, 0x01, 0x00, 0x00,                         // MOV [ESI+0x104],AL ; line 982
	0x66, 0xC7, 0x86, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00,       // MOV WORD PTR [ESI+0x140],0x00 ; line 983
	0x66, 0xC7, 0x86, 0x42, 0x01, 0x00, 0x00, 0x0F, 0x00,       // MOV WORD PTR[ ESI+0x142],0x0F ; line 984
	0x61,                                                       // POPAD ; line 986
	0x60,                                                       // PUSHAD ; line 992
	0x6A, 0x3C,                                                 // PUSH 0x3C ; line 993
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 994
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CDE0 ; line 995
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 998
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 999
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE30 ; line 1000
	0x61,                                                       // POPAD ; line 1001
	0x60,                                                       // PUSHAD ; line 1005
	0x8B, 0x86, 0x90, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x190] ; line 1006
	0x81, 0xF8, 0x04, 0x00, 0x00, 0x00,                         // CMP EAX,0x04 ; line 1008
	0x0F, 0x84, 0x1D, 0x00, 0x00, 0x00,                         // JE SHORT LABEL3A ; line 1009
	0x81, 0xF8, 0x06, 0x00, 0x00, 0x00,                         // CMP EAX,0x06 ; line 1010
	0x0F, 0x84, 0x11, 0x00, 0x00, 0x00,                         // JE SHORT LABEL3A ; line 1011
	0x81, 0xF8, 0x08, 0x00, 0x00, 0x00,                         // CMP EAX,0x08 ; line 1012
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE SHORT LABEL3A ; line 1013
	0xE9, 0x07, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL3 ; line 1015
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 1017
	0x8B, 0x86, 0x90, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x190] ; line 1020
	0x81, 0xF8, 0x00, 0x00, 0x00, 0x00,                         // CMP EAX, 0x00 ; line 1022
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL4 ; line 1023
	0xE9, 0x3E, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL5 ; line 1030
	0x0F, 0xB7, 0x86, 0x6C, 0x03, 0x00, 0x00,                   // MOVZX EAX, WORD PTR [ESI+0x36C] ; line 1032
	0x66, 0x81, 0xC0, 0x01, 0x00,                               // ADD AX,0x01 ; line 1033
	0x66, 0x89, 0x86, 0x6C, 0x03, 0x00, 0x00,                   // MOV WORD PTR [ESI+0x36C],AX ; line 1034
	0x66, 0x81, 0xF8, 0x04, 0x00,                               // CMP AX,0x04 ; line 1035
	0x0F, 0x8C, 0x20, 0x00, 0x00, 0x00,                         // JL SHORT LABEL5 ; line 1036
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 1037
	0x0F, 0x84, 0x13, 0x00, 0x00, 0x00,                         // JE SHORT LABEL5 ; line 1038
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 1039
	0x66, 0xC7, 0x86, 0x6C, 0x03, 0x00, 0x00, 0x00, 0x00,       // MOV WORD PTR [ESI+0x36C],0x00 ; line 1040
	0x61,                                                       // POPAD ; line 1043
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x2C, 0x01, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x12C ; line 1045
	0x0F, 0x8F, 0x12, 0x00, 0x00, 0x00,                         // JG SHORT LABELZ ; line 1046
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 1047
	0x0F, 0x8E, 0x05, 0x00, 0x00, 0x00,                         // JLE SHORT LABELZ ; line 1048
	0xE9, 0x2C, 0x00, 0x00, 0x00,                               // JMP END ; line 1049
	0x60,                                                       // PUSHAD ; line 1051
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 1052
	0x8A, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV AL,[ESI+0x113] ; line 1053
	0x80, 0xF8, 0x10,                                           // CMP AL,0x10 ; line 1054
	0x0F, 0x86, 0x0E, 0x00, 0x00, 0x00,                         // JBE SHORT LABELK ; line 1055
	0x80, 0xE8, 0x10,                                           // SUB AL,0x10 ; line 1056
	0x88, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],AL ; line 1057
	0xE9, 0x06, 0x00, 0x00, 0x00,                               // JMP SHORT LABELK1 ; line 1058
	0x61,                                                       // POPAD ; line 1060
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57ED2F ; line 1061
	0x61,                                                       // POPAD ; line 1064
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57F73D ; line 1067
};
static JumpTarget sekibankiBEAMSC1_jumpData[] = {
	{ 0x0B7, 0x48CDE0 },
	{ 0x0C0, 0x48CE30 },
	{ 0x19B, 0x57ED2F },
	{ 0x1A1, 0x57F73D },
};
static PatchByteCode sekibankiBEAMSC1_patchByteCode = { sekibankiBEAMSC1_byteCode, 421, sekibankiBEAMSC1_jumpData, 4 };
// sekibankiBEAMSC2 declared in sekibanki.asm line 1071
static unsigned char sekibankiBEAMSC2_byteCode[] = {
	0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x13E],0x00 ; line 1072
	0x0F, 0x85, 0x49, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1073
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 1074
	0x0F, 0x85, 0x39, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1075
	0x60,                                                       // PUSHAD ; line 1076
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 1077
	0x8B, 0x88, 0xFC, 0x00, 0x00, 0x00,                         // MOV ECX,[EAX+0xFC] ; line 1078
	0x89, 0x8E, 0x78, 0x03, 0x00, 0x00,                         // MOV [ESI+0x378],ECX ; line 1079
	0xD9, 0xEE,                                                 // FLDZ ; line 1080
	0xD9, 0x98, 0xFC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [EAX+0xFC] ; line 1081
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 1082
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x14,                   // MOV BYTE PTR [ESI+0x194],0x14 ; line 1083
	0xD9, 0x05, 0x8C, 0xB9, 0x85, 0x00,                         // FLD DWORD PTR [0x85B98C] ; line 1084
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 1085
	0x61,                                                       // POPAD ; line 1086
	0x60,                                                       // PUSHAD ; line 1089
	0x8B, 0x86, 0x78, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x378] ; line 1090
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xEC] ; line 1091
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 1092
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xF0] ; line 1093
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 1094
	0xD9, 0xEE,                                                 // FLDZ ; line 1095
	0xD9, 0x96, 0xF4, 0x00, 0x00, 0x00,                         // FST DWORD PTR [ESI+0xF4] ; line 1096
	0xD9, 0x96, 0x00, 0x01, 0x00, 0x00,                         // FST DWORD PTR [ESI+0x100] ; line 1097
	0xD9, 0x9E, 0xF8, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF8] ; line 1098
	0xD9, 0x86, 0x2C, 0x01, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0x12C] ; line 1100
	0xDC, 0x25, 0x60, 0x44, 0x89, 0x00,                         // FSUB QWORD PTR [0x894460] ; line 1101
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 1102
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 1104
	0x8A, 0x80, 0x04, 0x01, 0x00, 0x00,                         // MOV AL,[EAX+0x104] ; line 1105
	0x38, 0x86, 0x04, 0x01, 0x00, 0x00,                         // CMP [ESI+0x104],AL ; line 1106
	0x0F, 0x84, 0x24, 0x00, 0x00, 0x00,                         // JE SHORT LABELY ; line 1107
	0x88, 0x86, 0x04, 0x01, 0x00, 0x00,                         // MOV [ESI+0x104],AL ; line 1108
	0x66, 0xC7, 0x86, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00,       // MOV WORD PTR [ESI+0x140],0x00 ; line 1109
	0x66, 0xC7, 0x86, 0x42, 0x01, 0x00, 0x00, 0x0F, 0x00,       // MOV WORD PTR[ ESI+0x142],0x0F ; line 1110
	0xD9, 0x05, 0x8C, 0xB9, 0x85, 0x00,                         // FLD DWORD PTR [0x85B98C] ; line 1111
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 1112
	0x61,                                                       // POPAD ; line 1114
	0x60,                                                       // PUSHAD ; line 1120
	0x6A, 0x3C,                                                 // PUSH 0x3C ; line 1121
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 1122
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CDE0 ; line 1123
	0x6A, 0x14,                                                 // PUSH 0x14 ; line 1126
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 1127
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE30 ; line 1128
	0x61,                                                       // POPAD ; line 1129
	0x60,                                                       // PUSHAD ; line 1133
	0x8B, 0x86, 0x90, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x190] ; line 1134
	0x81, 0xF8, 0x04, 0x00, 0x00, 0x00,                         // CMP EAX,0x04 ; line 1135
	0x0F, 0x84, 0x1D, 0x00, 0x00, 0x00,                         // JE SHORT LABEL3A ; line 1136
	0x81, 0xF8, 0x06, 0x00, 0x00, 0x00,                         // CMP EAX,0x06 ; line 1137
	0x0F, 0x84, 0x11, 0x00, 0x00, 0x00,                         // JE SHORT LABEL3A ; line 1138
	0x81, 0xF8, 0x08, 0x00, 0x00, 0x00,                         // CMP EAX,0x08 ; line 1139
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE SHORT LABEL3A ; line 1140
	0xE9, 0x07, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL3 ; line 1141
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 1143
	0x8B, 0x86, 0x90, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x190] ; line 1146
	0x81, 0xF8, 0x00, 0x00, 0x00, 0x00,                         // CMP EAX, 0x00 ; line 1148
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL4 ; line 1149
	0xE9, 0x3E, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL5 ; line 1156
	0x0F, 0xB7, 0x86, 0x6C, 0x03, 0x00, 0x00,                   // MOVZX EAX, WORD PTR [ESI+0x36C] ; line 1158
	0x66, 0x81, 0xC0, 0x01, 0x00,                               // ADD AX,0x01 ; line 1159
	0x66, 0x89, 0x86, 0x6C, 0x03, 0x00, 0x00,                   // MOV WORD PTR [ESI+0x36C],AX ; line 1160
	0x66, 0x81, 0xF8, 0x04, 0x00,                               // CMP AX,0x04 ; line 1161
	0x0F, 0x8C, 0x20, 0x00, 0x00, 0x00,                         // JL SHORT LABEL5 ; line 1162
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 1163
	0x0F, 0x84, 0x13, 0x00, 0x00, 0x00,                         // JE SHORT LABEL5 ; line 1164
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 1165
	0x66, 0xC7, 0x86, 0x6C, 0x03, 0x00, 0x00, 0x00, 0x00,       // MOV WORD PTR [ESI+0x36C],0x00 ; line 1166
	0x61,                                                       // POPAD ; line 1169
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x78 ; line 1171
	0x0F, 0x8F, 0x12, 0x00, 0x00, 0x00,                         // JG SHORT LABELZ ; line 1172
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 1173
	0x0F, 0x8E, 0x05, 0x00, 0x00, 0x00,                         // JLE SHORT LABELZ ; line 1174
	0xE9, 0x2C, 0x00, 0x00, 0x00,                               // JMP END ; line 1175
	0x60,                                                       // PUSHAD ; line 1177
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 1178
	0x8A, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV AL,[ESI+0x113] ; line 1179
	0x80, 0xF8, 0x10,                                           // CMP AL,0x10 ; line 1180
	0x0F, 0x86, 0x0E, 0x00, 0x00, 0x00,                         // JBE SHORT LABELK ; line 1181
	0x80, 0xE8, 0x10,                                           // SUB AL,0x10 ; line 1182
	0x88, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV [ESI+0x113],AL ; line 1183
	0xE9, 0x06, 0x00, 0x00, 0x00,                               // JMP SHORT LABELK1 ; line 1184
	0x61,                                                       // POPAD ; line 1186
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57ED2F ; line 1187
	0x61,                                                       // POPAD ; line 1190
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57F73D ; line 1193
};
static JumpTarget sekibankiBEAMSC2_jumpData[] = {
	{ 0x0E1, 0x48CDE0 },
	{ 0x0EA, 0x48CE30 },
	{ 0x1C5, 0x57ED2F },
	{ 0x1CB, 0x57F73D },
};
static PatchByteCode sekibankiBEAMSC2_patchByteCode = { sekibankiBEAMSC2_byteCode, 463, sekibankiBEAMSC2_jumpData, 4 };
// sekibankiHEAD_SKILL declared in sekibanki.asm line 1198
static unsigned char sekibankiHEAD_SKILL_byteCode[] = {
	0x89, 0x8E, 0x70, 0x01, 0x00, 0x00,                         // MOV [ESI+0x170],ECX ; line 1199
	0x60,                                                       // PUSHAD ; line 1200
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [ESI+0x13E],0x00 ; line 1201
	0x0F, 0x85, 0x59, 0x01, 0x00, 0x00,                         // JNE END ; line 1202
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 1203
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x08, 0x02,       // CMP WORD PTR [EAX+0x13C],0x208 ; line 1205
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                         // JE SHORT CONT ; line 1206
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x02,       // CMP WORD PTR [EAX+0x13C],0x209 ; line 1207
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE SHORT CONT ; line 1208
	0xE9, 0x30, 0x01, 0x00, 0x00,                               // JMP END ; line 1209
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x01, 0x00,       // CMP WORD PTR [EAX+0x13E],0x01 ; line 1211
	0x0F, 0x85, 0x21, 0x01, 0x00, 0x00,                         // JNE END ; line 1212
	0x81, 0xB8, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [EAX+0x144],0x00 ; line 1213
	0x0F, 0x85, 0x11, 0x01, 0x00, 0x00,                         // JNE END ; line 1214
	0x66, 0x81, 0xB8, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [EAX+0x140],0x00 ; line 1215
	0x0F, 0x85, 0x02, 0x01, 0x00, 0x00,                         // JNE END ; line 1216
	0x66, 0x81, 0xB8, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00,       // CMP WORD PTR [EAX+0x142],0x00 ; line 1217
	0x0F, 0x85, 0xF3, 0x00, 0x00, 0x00,                         // JNE END ; line 1218
	0x66, 0xC7, 0x80, 0x42, 0x01, 0x00, 0x00, 0x01, 0x00,       // MOV WORD PTR [EAX+0x142],0x01 ; line 1219
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xEC] ; line 1221
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xEC] ; line 1222
	0xD9, 0x9E, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xEC] ; line 1223
	0xD9, 0x98, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [EAX+0xEC] ; line 1224
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ESI+0xF0] ; line 1226
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [EAX+0xF0] ; line 1227
	0xD8, 0x05, 0xC8, 0x7D, 0x85, 0x00,                         // FADD DWORD PTR [0x857DC8] ; line 1228
	0xD9, 0x9E, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0xF0] ; line 1229
	0xD8, 0x25, 0xC8, 0x7D, 0x85, 0x00,                         // FSUB DWORD PTR [0x857DC8] ; line 1230
	0xD9, 0x98, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [EAX+0xF0] ; line 1231
	0xD9, 0xEE,                                                 // FLDZ ; line 1233
	0xD9, 0x90, 0xF4, 0x00, 0x00, 0x00,                         // FST DWORD PTR [EAX+0xF4] ; line 1234
	0xDC, 0x05, 0x50, 0x7F, 0x85, 0x00,                         // FADD QWORD PTR [0x857F50] ; line 1235
	0xD9, 0x98, 0xF8, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [EAX+0xF8] ; line 1236
	0xD9, 0x05, 0xA8, 0x77, 0x86, 0x00,                         // FLD DWORD PTR [0x8677A8] ; line 1237
	0xD9, 0x98, 0x00, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [EAX+0x100] ; line 1238
	0x89, 0xC1,                                                 // MOV ECX,EAX ; line 1241
	0xD9, 0x05, 0xB8, 0x96, 0x85, 0x00,                         // FLD DWORD PTR [0x8596B8] ; line 1244
	0xD9, 0x81, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xEC] ; line 1245
	0xDE, 0xD9,                                                 // FCOMPP ; line 1246
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 1247
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 1248
	0x0F, 0x84, 0x0C, 0x00, 0x00, 0x00,                         // JE NEXT1 ; line 1249
	0xD9, 0x05, 0xB8, 0x96, 0x85, 0x00,                         // FLD DWORD PTR [0x8596B8] ; line 1250
	0xD9, 0x99, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ECX+0xEC] ; line 1251
	0xD9, 0x81, 0xEC, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xEC] ; line 1254
	0xD9, 0x05, 0x5C, 0xA2, 0x85, 0x00,                         // FLD DWORD PTR [0x85A25C] ; line 1256
	0xDE, 0xD9,                                                 // FCOMPP ; line 1257
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 1258
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 1259
	0x0F, 0x84, 0x0C, 0x00, 0x00, 0x00,                         // JE NEXT2 ; line 1260
	0xD9, 0x05, 0x5C, 0xA2, 0x85, 0x00,                         // FLD DWORD PTR [0x85A25C] ; line 1261
	0xD9, 0x99, 0xEC, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ECX+0xEC] ; line 1262
	0xD9, 0xEE,                                                 // FLDZ ; line 1265
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 1266
	0xDE, 0xD9,                                                 // FCOMPP ; line 1267
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 1268
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 1269
	0x0F, 0x84, 0x08, 0x00, 0x00, 0x00,                         // JE NEXT3 ; line 1270
	0xD9, 0xEE,                                                 // FLDZ ; line 1271
	0xD9, 0x99, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ECX+0xF0] ; line 1272
	0xD9, 0x81, 0xF0, 0x00, 0x00, 0x00,                         // FLD DWORD PTR [ECX+0xF0] ; line 1275
	0xD9, 0x05, 0xC4, 0xD3, 0x85, 0x00,                         // FLD DWORD PTR [0x85D3C4] ; line 1277
	0xDE, 0xD9,                                                 // FCOMPP ; line 1278
	0xDF, 0xE0,                                                 // FNSTSW AX ; line 1279
	0xF6, 0xC4, 0x41,                                           // TEST AH,0x41 ; line 1280
	0x0F, 0x84, 0x0C, 0x00, 0x00, 0x00,                         // JE NEXT4 ; line 1281
	0xD9, 0x05, 0xC4, 0xD3, 0x85, 0x00,                         // FLD DWORD PTR [0x85D3C4] ; line 1282
	0xD9, 0x99, 0xF0, 0x00, 0x00, 0x00,                         // FSTP DWORD PTR [ECX+0xF0] ; line 1283
	0x61,                                                       // POPAD ; line 1287
};
static PatchByteCode sekibankiHEAD_SKILL_patchByteCode = { sekibankiHEAD_SKILL_byteCode, 368, nullptr, 0 };
// sekibankiHEAD_SPELL declared in sekibanki.asm line 1291
static unsigned char sekibankiHEAD_SPELL_byteCode[] = {
	0x60,                                                 // PUSHAD ; line 1292
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 1294
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x08, 0x02, // CMP WORD PTR [EAX+0x13C],0x208 ; line 1297
	0x0F, 0x84, 0xC3, 0x00, 0x00, 0x00,                   // JE START4 ; line 1298
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x02, // CMP WORD PTR [EAX+0x13C],0x209 ; line 1300
	0x0F, 0x84, 0xB4, 0x00, 0x00, 0x00,                   // JE START4 ; line 1301
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x59, 0x02, // CMP WORD PTR [EAX+0x13C],0x259 ; line 1303
	0x0F, 0x84, 0x41, 0x00, 0x00, 0x00,                   // JE START1 ; line 1304
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x5C, 0x02, // CMP WORD PTR [EAX+0x13C],0x25C ; line 1306
	0x0F, 0x84, 0x32, 0x00, 0x00, 0x00,                   // JE START1 ; line 1307
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x5A, 0x02, // CMP WORD PTR [EAX+0x13C],0x25A ; line 1309
	0x0F, 0x84, 0x55, 0x00, 0x00, 0x00,                   // JE START2 ; line 1310
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x5B, 0x02, // CMP WORD PTR [EAX+0x13C],0x25B ; line 1312
	0x0F, 0x84, 0xAA, 0x00, 0x00, 0x00,                   // JE START3 ; line 1313
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x5D, 0x02, // CMP WORD PTR [EAX+0x13C],0x25D ; line 1315
	0x0F, 0x84, 0x37, 0x00, 0x00, 0x00,                   // JE START2 ; line 1316
	0xE9, 0x0A, 0x03, 0x00, 0x00,                         // JMP END ; line 1317
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 1319
	0x0F, 0x85, 0xFB, 0x02, 0x00, 0x00,                   // JNE END ; line 1320
	0x66, 0x81, 0xB8, 0x40, 0x01, 0x00, 0x00, 0x09, 0x00, // CMP WORD PTR [EAX+0x140],0x09 ; line 1321
	0x0F, 0x85, 0xEC, 0x02, 0x00, 0x00,                   // JNE END ; line 1322
	0x66, 0x81, 0xB8, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x142],0x00 ; line 1323
	0x0F, 0x85, 0xDD, 0x02, 0x00, 0x00,                   // JNE END ; line 1324
	0xE9, 0xAA, 0x00, 0x00, 0x00,                         // JMP START ; line 1325
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x03, 0x00, // CMP WORD PTR [EAX+0x13E],0x03 ; line 1328
	0x0F, 0x85, 0xC9, 0x02, 0x00, 0x00,                   // JNE END ; line 1329
	0x66, 0x81, 0xB8, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x140],0x00 ; line 1330
	0x0F, 0x85, 0xBA, 0x02, 0x00, 0x00,                   // JNE END ; line 1331
	0x66, 0x81, 0xB8, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x142],0x00 ; line 1332
	0x0F, 0x85, 0xAB, 0x02, 0x00, 0x00,                   // JNE END ; line 1333
	0xE9, 0x78, 0x00, 0x00, 0x00,                         // JMP START ; line 1334
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 1337
	0x0F, 0x85, 0x97, 0x02, 0x00, 0x00,                   // JNE END ; line 1338
	0x66, 0x81, 0xB8, 0x40, 0x01, 0x00, 0x00, 0x04, 0x00, // CMP WORD PTR [EAX+0x140],0x04 ; line 1339
	0x0F, 0x85, 0x88, 0x02, 0x00, 0x00,                   // JNE END ; line 1340
	0x66, 0x81, 0xB8, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x142],0x00 ; line 1341
	0x0F, 0x85, 0x79, 0x02, 0x00, 0x00,                   // JNE END ; line 1342
	0xE9, 0x46, 0x00, 0x00, 0x00,                         // JMP START ; line 1343
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 1346
	0x0F, 0x85, 0x65, 0x02, 0x00, 0x00,                   // JNE END ; line 1347
	0x66, 0x81, 0xB8, 0x40, 0x01, 0x00, 0x00, 0x09, 0x00, // CMP WORD PTR [EAX+0x140],0x09 ; line 1348
	0x0F, 0x85, 0x56, 0x02, 0x00, 0x00,                   // JNE END ; line 1349
	0x66, 0x81, 0xB8, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x142],0x00 ; line 1350
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                   // JE START3A ; line 1351
	0x66, 0x81, 0xB8, 0x42, 0x01, 0x00, 0x00, 0x02, 0x00, // CMP WORD PTR [EAX+0x142],0x02 ; line 1352
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE START3A ; line 1353
	0xE9, 0x33, 0x02, 0x00, 0x00,                         // JMP END ; line 1354
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP START ; line 1356
	0x66, 0x81, 0xB8, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x142],0x00 ; line 1360
	0x0F, 0x85, 0x0F, 0x00, 0x00, 0x00,                   // JNE SHORT BOOST ; line 1361
	0x66, 0xC7, 0x80, 0x42, 0x01, 0x00, 0x00, 0x01, 0x00, // MOV WORD PTR [EAX+0x142],0x01 ; line 1362
	0x0F, 0x84, 0x09, 0x00, 0x00, 0x00,                   // JE SHORT BOOST1 ; line 1363
	0x66, 0xC7, 0x80, 0x42, 0x01, 0x00, 0x00, 0x03, 0x00, // MOV WORD PTR [EAX+0x142],0x03 ; line 1365
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x83, 0x03, // CMP WORD PTR [ESI+0x13C],0x383 ; line 1369
	0x0F, 0x85, 0xF8, 0x01, 0x00, 0x00,                   // JNE END ; line 1370
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x13E],0x00 ; line 1371
	0x0F, 0x85, 0xE9, 0x01, 0x00, 0x00,                   // JNE END ; line 1372
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x08, 0x02, // CMP WORD PTR [EAX+0x13C],0x208 ; line 1377
	0x0F, 0x84, 0x57, 0x00, 0x00, 0x00,                   // JE SHORT SKIPFC ; line 1378
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x02, // CMP WORD PTR [EAX+0x13C],0x209 ; line 1379
	0x0F, 0x84, 0x48, 0x00, 0x00, 0x00,                   // JE SHORT SKIPFC ; line 1380
	0x89, 0xB0, 0xFC, 0x00, 0x00, 0x00,                   // MOV [EAX+0xFC],ESI ; line 1381
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x5A, 0x02, // CMP WORD PTR [EAX+0x13C],0x25A ; line 1385
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                   // JE SHORT SOUND1 ; line 1386
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x5B, 0x02, // CMP WORD PTR [EAX+0x13C],0x25B ; line 1387
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE SHORT SOUND1 ; line 1388
	0xE9, 0x12, 0x00, 0x00, 0x00,                         // JMP SHORT SOUND2 ; line 1389
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                   // MOV ECX,[ESI+0x398] ; line 1392
	0x6A, 0x02,                                           // PUSH 0x02 ; line 1393
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x464980 ; line 1394
	0xE9, 0x0D, 0x00, 0x00, 0x00,                         // JMP SKIPFC ; line 1395
	0x8B, 0x8E, 0x98, 0x03, 0x00, 0x00,                   // MOV ECX,[ESI+0x398] ; line 1398
	0x6A, 0x01,                                           // PUSH 0x01 ; line 1399
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x464980 ; line 1400
	0xBA, 0x00, 0x00, 0x00, 0x00,                         // MOV EDX,0x00000000 ; line 1405
	0x89, 0x54, 0x24, 0x10,                               // MOV [ESP+0x10],EDX ; line 1406
	0x6A, 0x04,                                           // PUSH 0x04 ; line 1409
	0x8D, 0x44, 0x24, 0x78,                               // LEA EAX,[ESP+0x78] ; line 1410
	0x50,                                                 // PUSH EAX ; line 1411
	0x6A, 0x01,                                           // PUSH 0x01 ; line 1412
	0xD9, 0xEE,                                           // FLDZ ; line 1415
	0xD9, 0x9C, 0x24, 0x80, 0x00, 0x00, 0x00,             // FSTP DWORD PTR [ESP+0x80] ; line 1416
	0xD9, 0xEE,                                           // FLDZ ; line 1419
	0xD9, 0x9C, 0x24, 0x84, 0x00, 0x00, 0x00,             // FSTP DWORD PTR [ESP+0x84] ; line 1420
	0x50,                                                 // PUSH EAX ; line 1423
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 1424
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x5B, 0x02, // CMP WORD PTR [EAX+0x13C],0x25B ; line 1425
	0x0F, 0x85, 0x1A, 0x00, 0x00, 0x00,                   // JNE SHORT SUBSEQLOAD0 ; line 1426
	0x66, 0x81, 0xB8, 0x42, 0x01, 0x00, 0x00, 0x03, 0x00, // CMP WORD PTR [EAX+0x142],0x03 ; line 1427
	0x0F, 0x85, 0x0B, 0x00, 0x00, 0x00,                   // JNE SHORT SUBSEQLOAD0 ; line 1428
	0xD9, 0x05, 0x38, 0x15, 0x87, 0x00,                   // FLD DWORD PTR [0x871538] ; line 1429
	0xE9, 0x02, 0x00, 0x00, 0x00,                         // JMP SHORT SUBSEQLOAD ; line 1430
	0xD9, 0xEE,                                           // FLDZ ; line 1432
	0x58,                                                 // POP EAX ; line 1434
	0xD9, 0x9C, 0x24, 0x88, 0x00, 0x00, 0x00,             // FSTP DWORD PTR [ESP+0x88] ; line 1435
	0xD9, 0xEE,                                           // FLDZ ; line 1437
	0xD9, 0x9C, 0x24, 0x8C, 0x00, 0x00, 0x00,             // FSTP DWORD PTR [ESP+0x8C] ; line 1439
	0xD9, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00,             // FLD DWORD PTR [ESP+0x80] ; line 1440
	0x0F, 0xB6, 0x8E, 0x04, 0x01, 0x00, 0x00,             // MOVZX ECX,BYTE PTR [ESI+0x104] ; line 1441
	0xD9, 0xE0,                                           // FCHS ; line 1442
	0x8B, 0x3E,                                           // MOV EDI,[ESI] ; line 1443
	0x51,                                                 // PUSH ECX ; line 1444
	0x51,                                                 // PUSH ECX ; line 1445
	0x81, 0xC7, 0x44, 0x00, 0x00, 0x00,                   // ADD EDI,0x44 ; line 1446
	0xD9, 0x1C, 0x24,                                     // FSTP DWORD PTR [ESP] ; line 1447
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x409580 ; line 1448
	0xDC, 0x0D, 0xB0, 0x77, 0x86, 0x00,                   // FMUL QWORD PTR [0x8677B0] ; line 1450
	0xD8, 0x86, 0xF0, 0x00, 0x00, 0x00,                   // FADD DWORD PTR [ESI+0xF0] ; line 1451
	0xD9, 0x5C, 0x24, 0x24,                               // FSTP DWORD PTR [ESP+0x24] ; line 1452
	0xD9, 0x44, 0x24, 0x24,                               // FLD DWORD PTR [ESP+0x24] ; line 1453
	0xD9, 0x1C, 0x24,                                     // FSTP DWORD PTR [ESP] ; line 1454
	0x51,                                                 // PUSH ECX ; line 1455
	0xD9, 0x84, 0x24, 0x8C, 0x00, 0x00, 0x00,             // FLD DWORD PTR [ESP+0x8C] ; line 1456
	0xD9, 0xE0,                                           // FCHS ; line 1457
	0xD9, 0x1C, 0x24,                                     // FSTP DWORD PTR [ESP] ; line 1458
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x4095F0 ; line 1459
	0x0F, 0xBE, 0x96, 0x04, 0x01, 0x00, 0x00,             // MOVSX EDX,BYTE PTR [ESI+0x104] ; line 1460
	0xDC, 0x0D, 0xB0, 0x77, 0x86, 0x00,                   // FMUL QWORD PTR [0x8677B0] ; line 1462
	0x8B, 0x07,                                           // MOV EAX,[EDI] ; line 1463
	0x89, 0x54, 0x24, 0x28,                               // MOV [ESP+0x28],EDX ; line 1464
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1465
	0xDB, 0x44, 0x24, 0x28,                               // FILD DWORD PTR [ESP+0x28] ; line 1466
	0xDE, 0xC9,                                           // FMULP ST1 ; line 1467
	0xD8, 0x86, 0xEC, 0x00, 0x00, 0x00,                   // FADD DWORD PTR [ESI+0xEC] ; line 1468
	0xD9, 0x5C, 0x24, 0x28,                               // FSTP DWORD PTR [ESP+0x28] ; line 1469
	0xD9, 0x44, 0x24, 0x28,                               // FLD DWORD PTR [ESP+0x28] ; line 1470
	0xD9, 0x1C, 0x24,                                     // FSTP DWORD PTR [ESP] ; line 1471
	0x50,                                                 // PUSH EAX ; line 1472
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 1473
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x08, 0x02, // CMP WORD PTR [EAX+0x13C],0x208 ; line 1474
	0x0F, 0x84, 0x50, 0x00, 0x00, 0x00,                   // JE SHORT LABELSC0 ; line 1475
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x09, 0x02, // CMP WORD PTR [EAX+0x13C],0x209 ; line 1476
	0x0F, 0x84, 0x41, 0x00, 0x00, 0x00,                   // JE SHORT LABELSC0 ; line 1477
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x59, 0x02, // CMP WORD PTR [EAX+0x13C],0x259 ; line 1478
	0x0F, 0x84, 0x3D, 0x00, 0x00, 0x00,                   // JE SHORT LABELSC1 ; line 1479
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x5C, 0x02, // CMP WORD PTR [EAX+0x13C],0x25C ; line 1480
	0x0F, 0x84, 0x39, 0x00, 0x00, 0x00,                   // JE SHORT LABELSC2 ; line 1481
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x5A, 0x02, // CMP WORD PTR [EAX+0x13C],0x25A ; line 1482
	0x0F, 0x84, 0x35, 0x00, 0x00, 0x00,                   // JE SHORT LABELSC3 ; line 1483
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x5B, 0x02, // CMP WORD PTR [EAX+0x13C],0x25B ; line 1484
	0x0F, 0x84, 0x31, 0x00, 0x00, 0x00,                   // JE SHORT LABELSC5 ; line 1485
	0xE9, 0x37, 0x00, 0x00, 0x00,                         // JMP SHORT LABELSC4 ; line 1486
	0x58,                                                 // POP EAX ; line 1488
	0x68, 0x2B, 0x03, 0x00, 0x00,                         // PUSH 0x0000032B ; line 1489
	0xE9, 0x32, 0x00, 0x00, 0x00,                         // JMP SHORT LABELSC ; line 1490
	0x58,                                                 // POP EAX ; line 1492
	0x68, 0x53, 0x03, 0x00, 0x00,                         // PUSH 0x00000353 ; line 1493
	0xE9, 0x27, 0x00, 0x00, 0x00,                         // JMP SHORT LABELSC ; line 1494
	0x58,                                                 // POP EAX ; line 1496
	0x68, 0x56, 0x03, 0x00, 0x00,                         // PUSH 0x00000356 ; line 1497
	0xE9, 0x1C, 0x00, 0x00, 0x00,                         // JMP SHORT LABELSC ; line 1498
	0x58,                                                 // POP EAX ; line 1500
	0x68, 0x54, 0x03, 0x00, 0x00,                         // PUSH 0x00000354 ; line 1501
	0xE9, 0x11, 0x00, 0x00, 0x00,                         // JMP SHORT LABELSC ; line 1502
	0x58,                                                 // POP EAX ; line 1504
	0x68, 0x55, 0x03, 0x00, 0x00,                         // PUSH 0x00000355 ; line 1505
	0xE9, 0x06, 0x00, 0x00, 0x00,                         // JMP SHORT LABELSC ; line 1506
	0x58,                                                 // POP EAX ; line 1508
	0x68, 0x57, 0x03, 0x00, 0x00,                         // PUSH 0x00000357 ; line 1509
	0xFF, 0xD0,                                           // CALL EAX ; line 1511
	0x61,                                                 // POPAD ; line 1514
	0x0F, 0xB7, 0x86, 0x3E, 0x01, 0x00, 0x00,             // MOVZX EAX,WORD PTR [ESI+0x13E] ; line 1516
};
static JumpTarget sekibankiHEAD_SPELL_jumpData[] = {
	{ 0x1E6, 0x464980 },
	{ 0x1F8, 0x464980 },
	{ 0x281, 0x409580 },
	{ 0x2AA, 0x4095F0 },
};
static PatchByteCode sekibankiHEAD_SPELL_patchByteCode = { sekibankiHEAD_SPELL_byteCode, 903, sekibankiHEAD_SPELL_jumpData, 4 };
// sekibankiA22_FIREONCE declared in sekibanki.asm line 1531
static unsigned char sekibankiA22_FIREONCE_byteCode[] = {
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00,                   // MOV EAX,[ESI+0x144] ; line 1532
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x07, 0x00, // CMP WORD PTR [ESI+0x140],0x07 ; line 1533
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 1534
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x11, 0x00, // CMP WORD PTR [ESI+0x140],0x11 ; line 1535
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 1536
	0xE9, 0x14, 0x00, 0x00, 0x00,                         // JMP SHORT LABEL2 ; line 1537
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x04, 0x00, // CMP WORD PTR [ESI+0x142],0x04 ; line 1539
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL2 ; line 1540
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x582347 ; line 1541
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x5823CF ; line 1543
};
static JumpTarget sekibankiA22_FIREONCE_jumpData[] = {
	{ 0x039, 0x582347 },
	{ 0x03E, 0x5823CF },
};
static PatchByteCode sekibankiA22_FIREONCE_patchByteCode = { sekibankiA22_FIREONCE_byteCode, 66, sekibankiA22_FIREONCE_jumpData, 2 };
// sekibankiA22_LASERONHIT declared in sekibanki.asm line 1547
static unsigned char sekibankiA22_LASERONHIT_byteCode[] = {
	0x0F, 0xBF, 0x86, 0x3E, 0x01, 0x00, 0x00, // MOVSX EAX,WORD PTR [ESI+0x13E] ; line 1548
};
static PatchByteCode sekibankiA22_LASERONHIT_patchByteCode = { sekibankiA22_LASERONHIT_byteCode, 7, nullptr, 0 };
// sekibankiA22_LASERDUR declared in sekibanki.asm line 1552
static unsigned char sekibankiA22_LASERDUR_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 1553
	0x0F, 0x85, 0x18, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 1554
	0x60,                                                       // PUSHAD ; line 1555
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 1556
	0x0F, 0xB6, 0x80, 0xAB, 0x06, 0x00, 0x00,                   // MOVZX EAX, BYTE PTR [EAX+0x6AB] ; line 1557
	0x80, 0xC0, 0x05,                                           // ADD AL,0x05 ; line 1558
	0x88, 0x86, 0x94, 0x01, 0x00, 0x00,                         // MOV BYTE PTR [ESI+0x194],AL ; line 1559
	0x61,                                                       // POPAD ; line 1560
	0x60,                                                       // PUSHAD ; line 1565
	0x6A, 0x02,                                                 // PUSH 0x02 ; line 1566
	0x6A, 0x02,                                                 // PUSH 0x02 ; line 1567
	0x6A, 0x00,                                                 // PUSH 0x00 ; line 1568
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 1569
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE90 ; line 1570
	0x84, 0xC0,                                                 // TEST AL,AL ; line 1571
	0x61,                                                       // POPAD ; line 1572
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,                         // JNE 0x57ED2F ; line 1573
	0x60,                                                       // PUSHAD ; line 1576
	0x6A, 0x1E,                                                 // PUSH 0x1E ; line 1577
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 1578
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CDE0 ; line 1579
	0x6A, 0x04,                                                 // PUSH 0x04 ; line 1582
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 1583
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE30 ; line 1584
	0x61,                                                       // POPAD ; line 1585
	0x60,                                                       // PUSHAD ; line 1587
	0x8B, 0x86, 0x90, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x190] ; line 1588
	0x81, 0xF8, 0x04, 0x00, 0x00, 0x00,                         // CMP EAX,0x04 ; line 1589
	0x0F, 0x84, 0x1D, 0x00, 0x00, 0x00,                         // JE SHORT LABEL3A ; line 1590
	0x81, 0xF8, 0x06, 0x00, 0x00, 0x00,                         // CMP EAX,0x06 ; line 1591
	0x0F, 0x84, 0x11, 0x00, 0x00, 0x00,                         // JE SHORT LABEL3A ; line 1592
	0x81, 0xF8, 0x08, 0x00, 0x00, 0x00,                         // CMP EAX,0x08 ; line 1593
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                         // JE SHORT LABEL3A ; line 1594
	0xE9, 0x07, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL3 ; line 1595
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x00,                   // MOV BYTE PTR [ESI+0x194],0x00 ; line 1597
	0x8B, 0x86, 0x90, 0x01, 0x00, 0x00,                         // MOV EAX,[ESI+0x190] ; line 1600
	0x81, 0xF8, 0x00, 0x00, 0x00, 0x00,                         // CMP EAX, 0x00 ; line 1602
	0x0F, 0x85, 0x05, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL4 ; line 1603
	0xE9, 0x3E, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL5 ; line 1610
	0x0F, 0xB7, 0x86, 0x6C, 0x03, 0x00, 0x00,                   // MOVZX EAX, WORD PTR [ESI+0x36C] ; line 1612
	0x66, 0x81, 0xC0, 0x01, 0x00,                               // ADD AX,0x01 ; line 1613
	0x66, 0x89, 0x86, 0x6C, 0x03, 0x00, 0x00,                   // MOV WORD PTR [ESI+0x36C],AX ; line 1614
	0x66, 0x81, 0xF8, 0x04, 0x00,                               // CMP AX,0x04 ; line 1615
	0x0F, 0x8C, 0x20, 0x00, 0x00, 0x00,                         // JL SHORT LABEL5 ; line 1616
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 1617
	0x0F, 0x84, 0x13, 0x00, 0x00, 0x00,                         // JE SHORT LABEL5 ; line 1618
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 1619
	0x66, 0xC7, 0x86, 0x6C, 0x03, 0x00, 0x00, 0x00, 0x00,       // MOV WORD PTR [ESI+0x36C],0x00 ; line 1620
	0x61,                                                       // POPAD ; line 1623
	0x80, 0xF8, 0x10,                                           // CMP AL,0x10 ; line 1625
	0x0F, 0x82, 0xDE, 0xAD, 0xBE, 0xEF,                         // JB 0x57E432 ; line 1626
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x2C, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x2C ; line 1628
	0x0F, 0x8F, 0x10, 0x00, 0x00, 0x00,                         // JG SHORT LABEL1 ; line 1629
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 1630
	0x0F, 0x8E, 0x03, 0x00, 0x00, 0x00,                         // JLE SHORT LABEL1 ; line 1631
	0x80, 0xC0, 0x10,                                           // ADD AL,0x10 ; line 1632
	0x80, 0xE8, 0x10,                                           // SUB AL,0x10 ; line 1635
	0x80, 0xF8, 0x40,                                           // CMP AL,0x40 ; line 1636
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57EC91 ; line 1637
};
static JumpTarget sekibankiA22_LASERDUR_jumpData[] = {
	{ 0x032, 0x48CE90 },
	{ 0x03B, 0x57ED2F },
	{ 0x045, 0x48CDE0 },
	{ 0x04E, 0x48CE30 },
	{ 0x0E5, 0x57E432 },
	{ 0x110, 0x57EC91 },
};
static PatchByteCode sekibankiA22_LASERDUR_patchByteCode = { sekibankiA22_LASERDUR_byteCode, 276, sekibankiA22_LASERDUR_jumpData, 6 };
// sekibankiA22_LASERBOX2 declared in sekibanki.asm line 1641
static unsigned char sekibankiA22_LASERBOX2_byteCode[] = {
	0xD9, 0xEE,                         // FLDZ ; line 1642
	0xD8, 0x25, 0x2C, 0x78, 0x86, 0x00, // FSUB DWORD PTR [0x86782C] ; line 1643
};
static PatchByteCode sekibankiA22_LASERBOX2_patchByteCode = { sekibankiA22_LASERBOX2_byteCode, 8, nullptr, 0 };
// sekibankiA22_LASERBOX1 declared in sekibanki.asm line 1646
static unsigned char sekibankiA22_LASERBOX1_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 1647
	0x0F, 0x85, 0x46, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1648
	0x60,                                                       // PUSHAD ; line 1649
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 1650
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x35, 0x02,       // CMP WORD PTR [EAX+0x13C],0x235 ; line 1651
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                         // JE SHORT LABEL2 ; line 1652
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x36, 0x02,       // CMP WORD PTR [EAX+0x13C],0x236 ; line 1653
	0x0F, 0x84, 0x12, 0x00, 0x00, 0x00,                         // JE SHORT LABEL2A ; line 1654
	0xE9, 0x1B, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL3 ; line 1655
	0xD9, 0xEE,                                                 // FLDZ ; line 1658
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 1659
	0xE9, 0x0E, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL3 ; line 1660
	0xD9, 0xEE,                                                 // FLDZ ; line 1663
	0xD8, 0x05, 0xB0, 0xB3, 0x85, 0x00,                         // FADD DWORD PTR [0x85B3B0] ; line 1664
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 1665
	0x61,                                                       // POPAD ; line 1667
	0xD9, 0x05, 0x2C, 0x78, 0x86, 0x00,                         // FLD DWORD PTR [0x86782C] ; line 1669
};
static PatchByteCode sekibankiA22_LASERBOX1_patchByteCode = { sekibankiA22_LASERBOX1_byteCode, 92, nullptr, 0 };
// sekibankiA22_LASER declared in sekibanki.asm line 1673
static unsigned char sekibankiA22_LASER_byteCode[] = {
	0x60,                                                       // PUSHAD ; line 1674
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x08, 0x00,       // CMP WORD PTR [ESI+0x140],0x08 ; line 1675
	0x0F, 0x84, 0x76, 0x00, 0x00, 0x00,                         // JE SHORT LABELX ; line 1676
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x12, 0x00,       // CMP WORD PTR [ESI+0x140],0x12 ; line 1677
	0x0F, 0x84, 0x67, 0x00, 0x00, 0x00,                         // JE SHORT LABELX ; line 1678
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 1679
	0x0F, 0x85, 0x69, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1680
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                         // MOV EAX,[ESI+0x398] ; line 1681
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x35, 0x02,       // CMP WORD PTR [EAX+0x13C],0x235 ; line 1682
	0x0F, 0x84, 0x14, 0x00, 0x00, 0x00,                         // JE SHORT LABEL2A ; line 1683
	0x66, 0x81, 0xB8, 0x3C, 0x01, 0x00, 0x00, 0x36, 0x02,       // CMP WORD PTR [EAX+0x13C],0x236 ; line 1684
	0x0F, 0x84, 0x1C, 0x00, 0x00, 0x00,                         // JE SHORT LABEL2 ; line 1685
	0xE9, 0x40, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL3 ; line 1686
	0x66, 0xC7, 0x86, 0x40, 0x01, 0x00, 0x00, 0x01, 0x00,       // MOV WORD PTR [ESI+0x140],0x01 ; line 1688
	0x66, 0xC7, 0x86, 0x42, 0x01, 0x00, 0x00, 0x0F, 0x00,       // MOV WORD PTR [ESI+0x142],0x0F ; line 1689
	0xE9, 0x29, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL3 ; line 1690
	0x66, 0xC7, 0x86, 0x40, 0x01, 0x00, 0x00, 0x0B, 0x00,       // MOV WORD PTR [ESI+0x140],0x0B ; line 1692
	0x66, 0xC7, 0x86, 0x42, 0x01, 0x00, 0x00, 0x0F, 0x00,       // MOV WORD PTR [ESI+0x142],0x0F ; line 1693
	0xE9, 0x12, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL3 ; line 1694
	0x66, 0xC7, 0x86, 0x40, 0x01, 0x00, 0x00, 0x15, 0x00,       // MOV WORD PTR [ESI+0x140],0x15 ; line 1696
	0x66, 0xC7, 0x86, 0x42, 0x01, 0x00, 0x00, 0x0F, 0x00,       // MOV WORD PTR [ESI+0x142],0x0F ; line 1697
	0x61,                                                       // POPAD ; line 1700
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x0A, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x0A ; line 1701
};
static PatchByteCode sekibankiA22_LASER_patchByteCode = { sekibankiA22_LASER_byteCode, 163, nullptr, 0 };
// sekibankiJB_HOVER declared in sekibanki.asm line 1705
static unsigned char sekibankiJB_HOVER_byteCode[] = {
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x487EA0 ; line 1706
	0x84, 0xC0,                                           // TEST AL,AL ; line 1707
	0x0F, 0x84, 0xB0, 0x00, 0x00, 0x00,                   // JE LABEL1 ; line 1709
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0xF4] ; line 1710
	0x60,                                                 // PUSHAD ; line 1711
	0xD9, 0xEE,                                           // FLDZ ; line 1713
	0xD8, 0xD9,                                           // FCOMP ; line 1714
	0xDF, 0xE0,                                           // FNSTSW AX ; line 1715
	0xF6, 0xC4, 0x41,                                     // TEST AH,0x41 ; line 1716
	0x0F, 0x84, 0x35, 0x00, 0x00, 0x00,                   // JE LABEL1A ; line 1717
	0xD8, 0x0D, 0x28, 0xC2, 0x85, 0x00,                   // FMUL DWORD PTR [0x85C228] ; line 1721
	0xD9, 0x9E, 0xF4, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0xF4] ; line 1722
	0xD9, 0xE8,                                           // FLD1 ; line 1723
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0xF4] ; line 1724
	0xDE, 0xD9,                                           // FCOMPP ; line 1725
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0xF4] ; line 1726
	0xDF, 0xE0,                                           // FNSTSW AX ; line 1727
	0xF6, 0xC4, 0x41,                                     // TEST AH,0x41 ; line 1728
	0x0F, 0x84, 0x31, 0x00, 0x00, 0x00,                   // JE LABEL2 ; line 1729
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP LABEL1C ; line 1730
	0xD8, 0xD9,                                           // FCOMP ; line 1732
	0xD9, 0xEE,                                           // FLDZ ; line 1733
	0xE9, 0x23, 0x00, 0x00, 0x00,                         // JMP LABEL2 ; line 1734
	0xD8, 0x0D, 0x28, 0xC2, 0x85, 0x00,                   // FMUL DWORD PTR [0x85C228] ; line 1739
	0xD9, 0xE8,                                           // FLD1 ; line 1740
	0xD8, 0xD9,                                           // FCOMP ; line 1741
	0xDF, 0xE0,                                           // FNSTSW AX ; line 1742
	0xF6, 0xC4, 0x41,                                     // TEST AH,0x41 ; line 1743
	0x0F, 0x84, 0x0E, 0x00, 0x00, 0x00,                   // JE LABEL2 ; line 1744
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP LABEL1B ; line 1745
	0xD8, 0xD9,                                           // FCOMP ; line 1747
	0xD9, 0xEE,                                           // FLDZ ; line 1748
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP LABEL2 ; line 1749
	0x61,                                                 // POPAD ; line 1752
	0xD9, 0x9E, 0xF4, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0xF4] ; line 1753
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x13E],0x00 ; line 1755
	0x0F, 0x85, 0x2C, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 1756
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x0A, 0x00, // CMP WORD PTR [ESI+0x140],0x0A ; line 1757
	0x0F, 0x85, 0x1D, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 1758
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x00 ; line 1759
	0x0F, 0x85, 0x0E, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 1760
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1762
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x438C60 ; line 1763
	0x84, 0xC0,                                           // TEST AL,AL ; line 1764
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x570C22 ; line 1765
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x570C37 ; line 1768
};
static JumpTarget sekibankiJB_HOVER_jumpData[] = {
	{ 0x001, 0x487EA0 },
	{ 0x0B2, 0x438C60 },
	{ 0x0B9, 0x570C22 },
	{ 0x0BE, 0x570C37 },
};
static PatchByteCode sekibankiJB_HOVER_patchByteCode = { sekibankiJB_HOVER_byteCode, 194, sekibankiJB_HOVER_jumpData, 4 };
// sekibankiJ2B_HOVER declared in sekibanki.asm line 1771
static unsigned char sekibankiJ2B_HOVER_byteCode[] = {
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x487EA0 ; line 1772
	0x84, 0xC0,                                           // TEST AL,AL ; line 1773
	0x0F, 0x84, 0xB0, 0x00, 0x00, 0x00,                   // JE LABEL1 ; line 1775
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0xF4] ; line 1776
	0x60,                                                 // PUSHAD ; line 1777
	0xD9, 0xEE,                                           // FLDZ ; line 1779
	0xD8, 0xD9,                                           // FCOMP ; line 1780
	0xDF, 0xE0,                                           // FNSTSW AX ; line 1781
	0xF6, 0xC4, 0x41,                                     // TEST AH,0x41 ; line 1782
	0x0F, 0x84, 0x35, 0x00, 0x00, 0x00,                   // JE LABEL1A ; line 1783
	0xD8, 0x0D, 0x28, 0xC2, 0x85, 0x00,                   // FMUL DWORD PTR [0x85C228] ; line 1787
	0xD9, 0x9E, 0xF4, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0xF4] ; line 1788
	0xD9, 0xE8,                                           // FLD1 ; line 1789
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0xF4] ; line 1790
	0xDE, 0xD9,                                           // FCOMPP ; line 1791
	0xD9, 0x86, 0xF4, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0xF4] ; line 1792
	0xDF, 0xE0,                                           // FNSTSW AX ; line 1793
	0xF6, 0xC4, 0x41,                                     // TEST AH,0x41 ; line 1794
	0x0F, 0x84, 0x31, 0x00, 0x00, 0x00,                   // JE LABEL2 ; line 1795
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP LABEL1C ; line 1796
	0xD8, 0xD9,                                           // FCOMP ; line 1798
	0xD9, 0xEE,                                           // FLDZ ; line 1799
	0xE9, 0x23, 0x00, 0x00, 0x00,                         // JMP LABEL2 ; line 1800
	0xD8, 0x0D, 0x28, 0xC2, 0x85, 0x00,                   // FMUL DWORD PTR [0x85C228] ; line 1805
	0xD9, 0xE8,                                           // FLD1 ; line 1806
	0xD8, 0xD9,                                           // FCOMP ; line 1807
	0xDF, 0xE0,                                           // FNSTSW AX ; line 1808
	0xF6, 0xC4, 0x41,                                     // TEST AH,0x41 ; line 1809
	0x0F, 0x84, 0x0E, 0x00, 0x00, 0x00,                   // JE LABEL2 ; line 1810
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP LABEL1B ; line 1811
	0xD8, 0xD9,                                           // FCOMP ; line 1813
	0xD9, 0xEE,                                           // FLDZ ; line 1814
	0xE9, 0x00, 0x00, 0x00, 0x00,                         // JMP LABEL2 ; line 1815
	0x61,                                                 // POPAD ; line 1818
	0xD9, 0x9E, 0xF4, 0x00, 0x00, 0x00,                   // FSTP DWORD PTR [ESI+0xF4] ; line 1819
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x13E],0x00 ; line 1821
	0x0F, 0x85, 0x2C, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 1822
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x0A, 0x00, // CMP WORD PTR [ESI+0x140],0x0A ; line 1823
	0x0F, 0x85, 0x1D, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 1824
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x142],0x00 ; line 1825
	0x0F, 0x85, 0x0E, 0x00, 0x00, 0x00,                   // JNE SHORT LABEL1 ; line 1826
	0x89, 0xF1,                                           // MOV ECX,ESI ; line 1828
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                         // CALL 0x438C60 ; line 1829
	0x84, 0xC0,                                           // TEST AL,AL ; line 1830
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x570C22 ; line 1831
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x570C37 ; line 1834
};
static JumpTarget sekibankiJ2B_HOVER_jumpData[] = {
	{ 0x001, 0x487EA0 },
	{ 0x0B2, 0x438C60 },
	{ 0x0B9, 0x570C22 },
	{ 0x0BE, 0x570C37 },
};
static PatchByteCode sekibankiJ2B_HOVER_patchByteCode = { sekibankiJ2B_HOVER_byteCode, 194, sekibankiJ2B_HOVER_jumpData, 4 };
// sekibankiNO66AA declared in sekibanki.asm line 1855
static unsigned char sekibankiNO66AA_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3C, 0x01, 0x00, 0x00, 0x31, 0x01, // CMP WORD PTR [ESI+0x13C],0x0131 ; line 1856
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x57C5E3 ; line 1857
};
static JumpTarget sekibankiNO66AA_jumpData[] = {
	{ 0x00A, 0x57C5E3 },
};
static PatchByteCode sekibankiNO66AA_patchByteCode = { sekibankiNO66AA_byteCode, 14, sekibankiNO66AA_jumpData, 1 };
// sekibankiNO5AAAA declared in sekibanki.asm line 1861
static unsigned char sekibankiNO5AAAA_byteCode[] = {
	0x68, 0x43, 0x01, 0x00, 0x00, // PUSH 0x00000143 ; line 1862
};
static PatchByteCode sekibankiNO5AAAA_patchByteCode = { sekibankiNO5AAAA_byteCode, 5, nullptr, 0 };
// sekibanki2B_ANG declared in sekibanki.asm line 1868
static unsigned char sekibanki2B_ANG_byteCode[] = {
	0xD9, 0x05, 0x54, 0xC1, 0x85, 0x00, // FLD DWORD PTR [0x85C154] ; line 1869
};
static PatchByteCode sekibanki2B_ANG_patchByteCode = { sekibanki2B_ANG_byteCode, 6, nullptr, 0 };
// sekibanki2B_LOWER2 declared in sekibanki.asm line 1872
static unsigned char sekibanki2B_LOWER2_byteCode[] = {
	0x69, 0xD2, 0xB9, 0x00, 0x00, 0x00, // IMUL EDX,EDX,0x000000B9 ; line 1873
};
static PatchByteCode sekibanki2B_LOWER2_patchByteCode = { sekibanki2B_LOWER2_byteCode, 6, nullptr, 0 };
// sekibanki2B_LOWER1 declared in sekibanki.asm line 1876
static unsigned char sekibanki2B_LOWER1_byteCode[] = {
	0xD9, 0x05, 0x7C, 0xD8, 0x85, 0x00, // FLD DWORD PTR [0x85D87C] ; line 1877
};
static PatchByteCode sekibanki2B_LOWER1_patchByteCode = { sekibanki2B_LOWER1_byteCode, 6, nullptr, 0 };
// sekibanki2B_LOWER declared in sekibanki.asm line 1880
static unsigned char sekibanki2B_LOWER_byteCode[] = {
	0xD8, 0x05, 0xE4, 0xBB, 0x85, 0x00, // FADD DWORD PTR [0x85BBE4] ; line 1881
};
static PatchByteCode sekibanki2B_LOWER_patchByteCode = { sekibanki2B_LOWER_byteCode, 6, nullptr, 0 };
// sekibanki6B_TO5B1 declared in sekibanki.asm line 1885
static unsigned char sekibanki6B_TO5B1_byteCode[] = {
	0xD9, 0x05, 0x10, 0xBC, 0x85, 0x00, // FLD DWORD PTR [0x85BC10] ; line 1886
};
static PatchByteCode sekibanki6B_TO5B1_patchByteCode = { sekibanki6B_TO5B1_byteCode, 6, nullptr, 0 };
// sekibanki6B_TO5B2 declared in sekibanki.asm line 1888
static unsigned char sekibanki6B_TO5B2_byteCode[] = {
	0xDC, 0x05, 0xD0, 0xBC, 0x85, 0x00, // FADD QWORD PTR [0x85BCD0] ; line 1889
};
static PatchByteCode sekibanki6B_TO5B2_patchByteCode = { sekibanki6B_TO5B2_byteCode, 6, nullptr, 0 };
// sekibanki6B_TO5B3 declared in sekibanki.asm line 1891
static unsigned char sekibanki6B_TO5B3_byteCode[] = {
	0x8D, 0x14, 0x92, // LEA EDX,[EDX+EDX*0x4] ; line 1892
	0xC1, 0xE2, 0x04, // SHL EDX,0x04 ; line 1893
};
static PatchByteCode sekibanki6B_TO5B3_patchByteCode = { sekibanki6B_TO5B3_byteCode, 6, nullptr, 0 };
// sekibanki5C2C_VELOCITY declared in sekibanki.asm line 1899
static unsigned char sekibanki5C2C_VELOCITY_byteCode[] = {
	0xD9, 0x05, 0x10, 0x78, 0x86, 0x00, // FLD DWORD PTR [0x867810] ; line 1906
};
static PatchByteCode sekibanki5C2C_VELOCITY_patchByteCode = { sekibanki5C2C_VELOCITY_byteCode, 6, nullptr, 0 };
// sekibanki5C2C_CD declared in sekibanki.asm line 1917
static unsigned char sekibanki5C2C_CD_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x05, 0x00,       // CMP WORD PTR [ESI+0x13E],0x05 ; line 1918
	0x0F, 0x85, 0x0F, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 1919
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x10 ; line 1921
	0xE9, 0x0A, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL2 ; line 1922
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x0C, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x0C ; line 1925
	0x90,                                                       // NOP ; line 1927
};
static PatchByteCode sekibanki5C2C_CD_patchByteCode = { sekibanki5C2C_CD_byteCode, 41, nullptr, 0 };
// sekibankiBOUNDS1 declared in sekibanki.asm line 1931
static unsigned char sekibankiBOUNDS1_byteCode[] = {
	0xD9, 0x05, 0x4C, 0xB4, 0x85, 0x00, // FLD DWORD PTR [0x85B44C] ; line 1932
};
static PatchByteCode sekibankiBOUNDS1_patchByteCode = { sekibankiBOUNDS1_byteCode, 6, nullptr, 0 };
// sekibankiBOUNDS2 declared in sekibanki.asm line 1934
static unsigned char sekibankiBOUNDS2_byteCode[] = {
	0xD8, 0x1D, 0x5C, 0xC4, 0x85, 0x00, // FCOMP DWORD PTR [0x85C45C] ; line 1935
};
static PatchByteCode sekibankiBOUNDS2_patchByteCode = { sekibankiBOUNDS2_byteCode, 6, nullptr, 0 };
// sekibankiC_NEW1 declared in sekibanki.asm line 1947
static unsigned char sekibankiC_NEW1_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x0A, 0x00, // CMP WORD PTR [ESI+0x140],0x0A ; line 1948
};
static PatchByteCode sekibankiC_NEW1_patchByteCode = { sekibankiC_NEW1_byteCode, 9, nullptr, 0 };
// sekibankiC_NEW2 declared in sekibanki.asm line 1950
static unsigned char sekibankiC_NEW2_byteCode[] = {
	0x0F, 0x84, 0xDE, 0xAD, 0xBE, 0xEF, // JE 0x57D67E ; line 1951
};
static JumpTarget sekibankiC_NEW2_jumpData[] = {
	{ 0x002, 0x57D67E },
};
static PatchByteCode sekibankiC_NEW2_patchByteCode = { sekibankiC_NEW2_byteCode, 6, sekibankiC_NEW2_jumpData, 1 };
// sekibankiC_ONCE1 declared in sekibanki.asm line 1956
static unsigned char sekibankiC_ONCE1_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x581977 ; line 1957
};
static JumpTarget sekibankiC_ONCE1_jumpData[] = {
	{ 0x001, 0x581977 },
};
static PatchByteCode sekibankiC_ONCE1_patchByteCode = { sekibankiC_ONCE1_byteCode, 5, sekibankiC_ONCE1_jumpData, 1 };
// sekibankiC_ONCE2 declared in sekibanki.asm line 1959
static unsigned char sekibankiC_ONCE2_byteCode[] = {
	0x66, 0x81, 0xBE, 0x6C, 0x03, 0x00, 0x00, 0x01, 0x00, // CMP WORD PTR [ESI+0x36C],0x01 ; line 1960
};
static PatchByteCode sekibankiC_ONCE2_patchByteCode = { sekibankiC_ONCE2_byteCode, 9, nullptr, 0 };
// sekibanki5C_ONCE2 declared in sekibanki.asm line 1962
static unsigned char sekibanki5C_ONCE2_byteCode[] = {
	0x66, 0x81, 0xBE, 0x6C, 0x03, 0x00, 0x00, 0x02, 0x00, // CMP WORD PTR [ESI+0x36C],0x02 ; line 1963
};
static PatchByteCode sekibanki5C_ONCE2_patchByteCode = { sekibanki5C_ONCE2_byteCode, 9, nullptr, 0 };
// sekibankiC_DUR declared in sekibanki.asm line 1965
static unsigned char sekibankiC_DUR_byteCode[] = {
	0xD9, 0x05, 0xD4, 0x7D, 0x85, 0x00, // FLD DWORD PTR [0x857DD4] ; line 1966
};
static PatchByteCode sekibankiC_DUR_patchByteCode = { sekibankiC_DUR_byteCode, 6, nullptr, 0 };
// sekibanki5C_ANG declared in sekibanki.asm line 1969
static unsigned char sekibanki5C_ANG_byteCode[] = {
	0x8B, 0x86, 0x70, 0x01, 0x00, 0x00,       // MOV EAX,[ESI+0x170] ; line 1979
	0x0F, 0xBE, 0x96, 0x04, 0x01, 0x00, 0x00, // MOVSX EDX,BYTE PTR [ESI+0x104] ; line 1980
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,       // FLD DWORD PTR [EAX+0xEC] ; line 1981
	0xD8, 0xA6, 0xEC, 0x00, 0x00, 0x00,       // FSUB DWORD PTR [ESI+0xEC] ; line 1982
	0x89, 0x94, 0x24, 0x80, 0x00, 0x00, 0x00, // MOV [ESP+0x80],EDX ; line 1983
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,       // SUB ESP,0x08 ; line 1984
	0xDB, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00, // FILD DWORD PTR [ESP+0x88] ; line 1986
	0xDE, 0xC9,                               // FMULP ST1 ; line 1987
	0xD9, 0x5C, 0x24, 0x04,                   // FSTP DWORD PTR [ESP+0x04] ; line 1988
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,       // FLD DWORD PTR [EAX+0xF0] ; line 1989
	0xD8, 0x05, 0xE0, 0xBB, 0x85, 0x00,       // FADD DWORD PTR [0x85BBE0] ; line 1990
	0xD8, 0xA6, 0xF0, 0x00, 0x00, 0x00,       // FSUB DWORD PTR [ESI+0xF0] ; line 1991
	0xD9, 0x1C, 0x24,                         // FSTP DWORD PTR [ESP] ; line 1992
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,             // CALL 0x409760 ; line 1994
	0xD9, 0xE0,                               // FCHS ; line 1995
	0x81, 0xC4, 0x08, 0x00, 0x00, 0x00,       // ADD ESP,0x08 ; line 1996
	0xDE, 0xC1,                               // FADDP ST1 ; line 1998
	0xD8, 0x25, 0xF0, 0x89, 0x85, 0x00,       // FSUB DWORD PTR [0x8589F0] ; line 1999
	0xD9, 0x9C, 0x24, 0x80, 0x00, 0x00, 0x00, // FSTP DWORD PTR [ESP+0x80] ; line 2001
};
static JumpTarget sekibanki5C_ANG_jumpData[] = {
	{ 0x049, 0x409760 },
};
static PatchByteCode sekibanki5C_ANG_patchByteCode = { sekibanki5C_ANG_byteCode, 100, sekibanki5C_ANG_jumpData, 1 };
// sekibanki2C_ANG declared in sekibanki.asm line 2004
static unsigned char sekibanki2C_ANG_byteCode[] = {
	0x55,                                     // PUSH EBP ; line 2005
	0x8B, 0x86, 0x70, 0x01, 0x00, 0x00,       // MOV EAX,[ESI+0x170] ; line 2015
	0x0F, 0xBE, 0x96, 0x04, 0x01, 0x00, 0x00, // MOVSX EDX,BYTE PTR [ESI+0x104] ; line 2016
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,       // FLD DWORD PTR [EAX+0xEC] ; line 2017
	0xD8, 0xA6, 0xEC, 0x00, 0x00, 0x00,       // FSUB DWORD PTR [ESI+0xEC] ; line 2018
	0x89, 0x54, 0x24, 0x70,                   // MOV [ESP+0x70],EDX ; line 2019
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00,       // SUB ESP,0x08 ; line 2020
	0xDB, 0x44, 0x24, 0x78,                   // FILD DWORD PTR [ESP+0x78] ; line 2022
	0xDE, 0xC9,                               // FMULP ST1 ; line 2023
	0xD9, 0x5C, 0x24, 0x04,                   // FSTP DWORD PTR [ESP+0x04] ; line 2024
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,       // FLD DWORD PTR [EAX+0xF0] ; line 2025
	0xD8, 0x05, 0xE0, 0xBB, 0x85, 0x00,       // FADD DWORD PTR [0x85BBE0] ; line 2026
	0xD8, 0xA6, 0xF0, 0x00, 0x00, 0x00,       // FSUB DWORD PTR [ESI+0xF0] ; line 2027
	0xD9, 0x1C, 0x24,                         // FSTP DWORD PTR [ESP] ; line 2028
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,             // CALL 0x409760 ; line 2030
	0xD9, 0xE0,                               // FCHS ; line 2031
	0x81, 0xC4, 0x08, 0x00, 0x00, 0x00,       // ADD ESP,0x08 ; line 2032
	0xDE, 0xC1,                               // FADDP ST1 ; line 2034
	0xD8, 0x25, 0x94, 0xAE, 0x85, 0x00,       // FSUB DWORD PTR [0x85AE94] ; line 2035
	0xD8, 0x25, 0xF0, 0x89, 0x85, 0x00,       // FSUB DWORD PTR [0x8589F0] ; line 2036
	0xD9, 0x5C, 0x24, 0x70,                   // FSTP DWORD PTR [ESP+0x70] ; line 2040
};
static JumpTarget sekibanki2C_ANG_jumpData[] = {
	{ 0x044, 0x409760 },
};
static PatchByteCode sekibanki2C_ANG_patchByteCode = { sekibanki2C_ANG_byteCode, 98, sekibanki2C_ANG_jumpData, 1 };
// sekibanki5C_STARTUP declared in sekibanki.asm line 2043
static unsigned char sekibanki5C_STARTUP_byteCode[] = {
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00, // MOV EAX,[ESI+0x144] ; line 2044
	0x81, 0xF8, 0x02, 0x00, 0x00, 0x00, // CMP EAX,0x02 ; line 2045
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,       // JMP 0x5817E2 ; line 2046
};
static JumpTarget sekibanki5C_STARTUP_jumpData[] = {
	{ 0x00D, 0x5817E2 },
};
static PatchByteCode sekibanki5C_STARTUP_patchByteCode = { sekibanki5C_STARTUP_byteCode, 17, sekibanki5C_STARTUP_jumpData, 1 };
// sekibanki2C_STARTUP declared in sekibanki.asm line 2048
static unsigned char sekibanki2C_STARTUP_byteCode[] = {
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00, // MOV EAX,[ESI+0x144] ; line 2049
	0x81, 0xF8, 0x05, 0x00, 0x00, 0x00, // CMP EAX,0x05 ; line 2050
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,       // JMP 0x581B9E ; line 2051
};
static JumpTarget sekibanki2C_STARTUP_jumpData[] = {
	{ 0x00D, 0x581B9E },
};
static PatchByteCode sekibanki2C_STARTUP_patchByteCode = { sekibanki2C_STARTUP_byteCode, 17, sekibanki2C_STARTUP_jumpData, 1 };
// sekibanki5C_STARTUP1 declared in sekibanki.asm line 2053
static unsigned char sekibanki5C_STARTUP1_byteCode[] = {
	0xB9, 0x02, 0x00, 0x00, 0x00, // MOV ECX,0x00000002 ; line 2054
};
static PatchByteCode sekibanki5C_STARTUP1_patchByteCode = { sekibanki5C_STARTUP1_byteCode, 5, nullptr, 0 };
// sekibanki2C_STARTUP1 declared in sekibanki.asm line 2056
static unsigned char sekibanki2C_STARTUP1_byteCode[] = {
	0xB9, 0x05, 0x00, 0x00, 0x00, // MOV ECX,0x00000005 ; line 2057
};
static PatchByteCode sekibanki2C_STARTUP1_patchByteCode = { sekibanki2C_STARTUP1_byteCode, 5, nullptr, 0 };
// sekibanki5C_ANGDIST declared in sekibanki.asm line 2060
static unsigned char sekibanki5C_ANGDIST_byteCode[] = {
	0x8D, 0x14, 0x00,             // LEA EDX,[EAX+EAX] ; line 2061
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x581820 ; line 2062
};
static JumpTarget sekibanki5C_ANGDIST_jumpData[] = {
	{ 0x004, 0x581820 },
};
static PatchByteCode sekibanki5C_ANGDIST_patchByteCode = { sekibanki5C_ANGDIST_byteCode, 8, sekibanki5C_ANGDIST_jumpData, 1 };
// sekibankiBOUNDS3 declared in sekibanki.asm line 2092
static unsigned char sekibankiBOUNDS3_byteCode[] = {
	0xDC, 0x1D, 0x70, 0xB9, 0x85, 0x00, // FCOMP QWORD PTR [0x85B970] ; line 2093
};
static PatchByteCode sekibankiBOUNDS3_patchByteCode = { sekibankiBOUNDS3_byteCode, 6, nullptr, 0 };
// sekibankiB_FIX declared in sekibanki.asm line 2097
static unsigned char sekibankiB_FIX_byteCode[] = {
	0xDB, 0x44, 0x24, 0x10,             // FILD DWORD PTR [ESP+0x10] ; line 2098
	0xD9, 0x05, 0xF0, 0x89, 0x85, 0x00, // FLD DWORD PTR [0x8589F0] ; line 2099
};
static PatchByteCode sekibankiB_FIX_patchByteCode = { sekibankiB_FIX_byteCode, 10, nullptr, 0 };
// sekibankiJ5B_DIST declared in sekibanki.asm line 2103
static unsigned char sekibankiJ5B_DIST_byteCode[] = {
	0x0F, 0xBE, 0xD0, // MOVSX EDX,AL ; line 2104
	0x6B, 0xD2, 0x01, // IMUL EDX,EDX,0x01 ; line 2105
};
static PatchByteCode sekibankiJ5B_DIST_patchByteCode = { sekibankiJ5B_DIST_byteCode, 6, nullptr, 0 };
// sekibankiB_NEW declared in sekibanki.asm line 2109
static unsigned char sekibankiB_NEW_byteCode[] = {
	0xD9, 0xE8, // FLD1 ; line 2110
};
static PatchByteCode sekibankiB_NEW_patchByteCode = { sekibankiB_NEW_byteCode, 2, nullptr, 0 };
// sekibankiB_NEW1 declared in sekibanki.asm line 2114
static unsigned char sekibankiB_NEW1_byteCode[] = {
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,                         // JNE 0x57D252 ; line 2115
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x03 ; line 2116
	0x0F, 0x8C, 0x15, 0x00, 0x00, 0x00,                         // JL SHORT LABEL1 ; line 2117
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x06 ; line 2118
	0x0F, 0x8F, 0x05, 0x00, 0x00, 0x00,                         // JG SHORT LABEL1 ; line 2119
	0xE9, 0x05, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL2 ; line 2120
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57D252 ; line 2122
	0x90,                                                       // NOP ; line 2124
};
static JumpTarget sekibankiB_NEW1_jumpData[] = {
	{ 0x002, 0x57D252 },
	{ 0x02C, 0x57D252 },
};
static PatchByteCode sekibankiB_NEW1_patchByteCode = { sekibankiB_NEW1_byteCode, 49, sekibankiB_NEW1_jumpData, 2 };
// sekibankiA22SPIN_FIX declared in sekibanki.asm line 2143
static unsigned char sekibankiA22SPIN_FIX_byteCode[] = {
	0xDD, 0xD8, // FSTP ST0 ; line 2144
};
static PatchByteCode sekibankiA22SPIN_FIX_patchByteCode = { sekibankiA22SPIN_FIX_byteCode, 2, nullptr, 0 };
// sekibankiA22SPIN_CONF declared in sekibanki.asm line 2148
static unsigned char sekibankiA22SPIN_CONF_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x60, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00000060 ; line 2149
};
static PatchByteCode sekibankiA22SPIN_CONF_patchByteCode = { sekibankiA22SPIN_CONF_byteCode, 10, nullptr, 0 };
// sekibankiA22SPIN_LV declared in sekibanki.asm line 2153
static unsigned char sekibankiA22SPIN_LV_byteCode[] = {
	0x8A, 0x82, 0xAF, 0x06, 0x00, 0x00,             // MOV AL,[EDX+0x6AF] ; line 2154
	0x80, 0xF8, 0x00,                               // CMP AL,0x00 ; line 2155
	0x0F, 0x84, 0x20, 0x00, 0x00, 0x00,             // JE SHORT LABEL0 ; line 2156
	0x80, 0xF8, 0x01,                               // CMP AL,0x01 ; line 2157
	0x0F, 0x84, 0x24, 0x00, 0x00, 0x00,             // JE SHORT LABEL1 ; line 2158
	0x80, 0xF8, 0x02,                               // CMP AL,0x02 ; line 2159
	0x0F, 0x84, 0x28, 0x00, 0x00, 0x00,             // JE SHORT LABEL2 ; line 2160
	0x80, 0xF8, 0x03,                               // CMP AL,0x03 ; line 2161
	0x0F, 0x84, 0x2C, 0x00, 0x00, 0x00,             // JE SHORT LABEL3 ; line 2162
	0xE9, 0x34, 0x00, 0x00, 0x00,                   // JMP SHORT LABEL4 ; line 2163
	0xC7, 0x44, 0x24, 0x20, 0x03, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESP+0x20],0x00000003 ; line 2165
	0xE9, 0x2F, 0x00, 0x00, 0x00,                   // JMP SHORT END ; line 2166
	0xC7, 0x44, 0x24, 0x20, 0x03, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESP+0x20],0x00000003 ; line 2168
	0xE9, 0x22, 0x00, 0x00, 0x00,                   // JMP SHORT END ; line 2169
	0xC7, 0x44, 0x24, 0x20, 0x04, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESP+0x20],0x00000004 ; line 2171
	0xE9, 0x15, 0x00, 0x00, 0x00,                   // JMP SHORT END ; line 2172
	0xC7, 0x44, 0x24, 0x20, 0x04, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESP+0x20],0x00000004 ; line 2174
	0xE9, 0x08, 0x00, 0x00, 0x00,                   // JMP SHORT END ; line 2175
	0xC7, 0x44, 0x24, 0x20, 0x05, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESP+0x20],0x00000005 ; line 2177
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                   // JMP 0x5825D4 ; line 2179
};
static JumpTarget sekibankiA22SPIN_LV_jumpData[] = {
	{ 0x06C, 0x5825D4 },
};
static PatchByteCode sekibankiA22SPIN_LV_patchByteCode = { sekibankiA22SPIN_LV_byteCode, 112, sekibankiA22SPIN_LV_jumpData, 1 };
// sekibankiREANGLE2 declared in sekibanki.asm line 2244
static unsigned char sekibankiREANGLE2_byteCode[] = {
	0x81, 0xEC, 0x0C, 0x00, 0x00, 0x00, // SUB ESP,0x0C ; line 2245
	0x89, 0xF1,                         // MOV ECX,ESI ; line 2246
	0xD9, 0x05, 0x44, 0x15, 0x87, 0x00, // FLD DWORD PTR [0x871544] ; line 2248
	0xD9, 0x5C, 0x24, 0x08,             // FSTP DWORD PTR [ESP+0x08] ; line 2249
	0xD9, 0x05, 0xF0, 0x89, 0x85, 0x00, // FLD DWORD PTR [0x8589F0] ; line 2251
	0xD9, 0x5C, 0x24, 0x04,             // FSTP DWORD PTR [ESP+0x04] ; line 2252
	0xD9, 0xEE,                         // FLDZ ; line 2253
	0xD9, 0x1C, 0x24,                   // FSTP DWORD PTR [ESP] ; line 2254
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,       // CALL 0x48CCA0 ; line 2255
	0x8B, 0x86, 0x5C, 0x03, 0x00, 0x00, // MOV EAX,[ESI+0x35C] ; line 2256
	0xD9, 0x00,                         // FLD DWORD PTR [EAX] ; line 2257
	0x81, 0xEC, 0x08, 0x00, 0x00, 0x00, // SUB ESP,0x08 ; line 2258
	0xDD, 0xD8,                         // FSTP ST0 ; line 2260
	0x8D, 0x4E, 0x04,                   // LEA ECX,[ESI+0x04] ; line 2261
	0xD9, 0x40, 0x04,                   // FLD DWORD PTR [EAX+0x04] ; line 2262
	0xD9, 0x5C, 0x24, 0x04,             // FSTP DWORD PTR [ESP+0x04] ; line 2265
	0xD9, 0x00,                         // FLD DWORD PTR [EAX] ; line 2266
	0xD9, 0x1C, 0x24,                   // FSTP DWORD PTR [ESP] ; line 2267
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,       // CALL 0x438C00 ; line 2268
	0x39, 0x9E, 0x44, 0x01, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],EBX ; line 2270
};
static JumpTarget sekibankiREANGLE2_jumpData[] = {
	{ 0x022, 0x48CCA0 },
	{ 0x046, 0x438C00 },
};
static PatchByteCode sekibankiREANGLE2_patchByteCode = { sekibankiREANGLE2_byteCode, 80, sekibankiREANGLE2_jumpData, 2 };
// sekibankiD22_FIREFREQ declared in sekibanki.asm line 2276
static unsigned char sekibankiD22_FIREFREQ_byteCode[] = {
	0x60,                               // PUSHAD ; line 2277
	0x8B, 0x86, 0x44, 0x01, 0x00, 0x00, // MOV EAX,[ESI+0x144] ; line 2278
	0xBA, 0x00, 0x00, 0x00, 0x00,       // MOV EDX,0x0 ; line 2279
	0xBB, 0x02, 0x00, 0x00, 0x00,       // MOV EBX,0x2 ; line 2280
	0xF7, 0xF3,                         // DIV EBX ; line 2281
	0x81, 0xFA, 0x00, 0x00, 0x00, 0x00, // CMP EDX,0x0 ; line 2282
	0x61,                               // POPAD ; line 2283
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00, // JE SHORT LABEL1 ; line 2284
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,       // JMP 0x581FA3 ; line 2285
	0x8B, 0x96, 0x5C, 0x03, 0x00, 0x00, // MOV EDX,[ESI+0x35C] ; line 2288
};
static JumpTarget sekibankiD22_FIREFREQ_jumpData[] = {
	{ 0x021, 0x581FA3 },
};
static PatchByteCode sekibankiD22_FIREFREQ_patchByteCode = { sekibankiD22_FIREFREQ_byteCode, 43, sekibankiD22_FIREFREQ_jumpData, 1 };
// sekibankiD22C_SPD declared in sekibanki.asm line 2292
static unsigned char sekibankiD22C_SPD_byteCode[] = {
	0xD9, 0x05, 0xBC, 0xB9, 0x85, 0x00, // FLD DWORD PTR [0x85B9BC] ; line 2293
};
static PatchByteCode sekibankiD22C_SPD_patchByteCode = { sekibankiD22C_SPD_byteCode, 6, nullptr, 0 };
// sekibankiD22B_SPD declared in sekibanki.asm line 2296
static unsigned char sekibankiD22B_SPD_byteCode[] = {
	0xD9, 0x05, 0x44, 0xBC, 0x85, 0x00, // FLD DWORD PTR [0x85BC44] ; line 2297
};
static PatchByteCode sekibankiD22B_SPD_patchByteCode = { sekibankiD22B_SPD_byteCode, 6, nullptr, 0 };
// sekibankiD22_DUR declared in sekibanki.asm line 2302
static unsigned char sekibankiD22_DUR_byteCode[] = {
	0x66, 0x9C,                               // PUSHF ; line 2303
	0x8B, 0x9E, 0x98, 0x03, 0x00, 0x00,       // MOV EBX,[ESI+0x398] ; line 2304
	0x0F, 0xB6, 0x9B, 0xA7, 0x06, 0x00, 0x00, // MOVZX EBX, BYTE PTR [EBX+0x6A7] ; line 2305
	0x43,                                     // INC EBX ; line 2306
	0x43,                                     // INC EBX ; line 2307
	0x43,                                     // INC EBX ; line 2308
	0x43,                                     // INC EBX ; line 2309
	0x43,                                     // INC EBX ; line 2310
	0x43,                                     // INC EBX ; line 2311
	0x6B, 0xDB, 0x07,                         // IMUL EBX,EBX,0x07 ; line 2312
	0x66, 0x9D,                               // POPF ; line 2313
};
static PatchByteCode sekibankiD22_DUR_patchByteCode = { sekibankiD22_DUR_byteCode, 26, nullptr, 0 };
// sekibankiD22B_ANG1 declared in sekibanki.asm line 2335
static unsigned char sekibankiD22B_ANG1_byteCode[] = {
	0xD9, 0x05, 0x3C, 0x15, 0x87, 0x00, // FLD DWORD PTR [0x87153C] ; line 2336
};
static PatchByteCode sekibankiD22B_ANG1_patchByteCode = { sekibankiD22B_ANG1_byteCode, 6, nullptr, 0 };
// sekibankiD22B_ANG2 declared in sekibanki.asm line 2338
static unsigned char sekibankiD22B_ANG2_byteCode[] = {
	0xD9, 0xEE,                         // FLDZ ; line 2339
	0xD8, 0x25, 0x3C, 0x15, 0x87, 0x00, // FSUB DWORD PTR [0x87153C] ; line 2340
};
static PatchByteCode sekibankiD22B_ANG2_patchByteCode = { sekibankiD22B_ANG2_byteCode, 8, nullptr, 0 };
// sekibankiD22_REMNANT declared in sekibanki.asm line 2350
static unsigned char sekibankiD22_REMNANT_byteCode[] = {
	0x66, 0x9C,                                                 // PUSHF ; line 2352
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x01, 0x00,       // CMP WORD PTR [ESI+0x13E],0x01 ; line 2353
	0x0F, 0x85, 0x1E, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL3 ; line 2354
	0x66, 0x9D,                                                 // POPF ; line 2355
	0x60,                                                       // PUSHAD ; line 2356
	0x6A, 0x03,                                                 // PUSH 0x03 ; line 2357
	0x6A, 0x00,                                                 // PUSH 0x00 ; line 2358
	0x6A, 0x00,                                                 // PUSH 0x00 ; line 2359
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2360
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x48CE90 ; line 2361
	0x84, 0xC0,                                                 // TEST AL,AL ; line 2362
	0x61,                                                       // POPAD ; line 2363
	0x0F, 0x85, 0xDE, 0xAD, 0xBE, 0xEF,                         // JNE 0x57E432 ; line 2364
	0xE9, 0x02, 0x00, 0x00, 0x00,                               // JMP SHORT LABEL4 ; line 2365
	0x66, 0x9D,                                                 // POPF ; line 2367
	0x66, 0x9C,                                                 // PUSHF ; line 2371
	0x60,                                                       // PUSHAD ; line 2372
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x01, 0x00,       // CMP WORD PTR [ESI+0x13E],0x01 ; line 2373
	0x0F, 0x85, 0x28, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 2374
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x00 ; line 2375
	0x0F, 0x85, 0x18, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 2376
	0xC6, 0x86, 0x94, 0x01, 0x00, 0x00, 0x01,                   // MOV BYTE PTR [ESI+0x194],0x01 ; line 2377
	0xC7, 0x86, 0x90, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // MOV DWORD PTR [ESI+0x190],0x00 ; line 2378
	0xC6, 0x86, 0x8C, 0x01, 0x00, 0x00, 0x03,                   // MOV BYTE PTR [ESI+0x18C],0x03 ; line 2379
	0x61,                                                       // POPAD ; line 2381
	0x66, 0x9D,                                                 // POPF ; line 2382
	0x0F, 0xBF, 0x86, 0x3E, 0x01, 0x00, 0x00,                   // MOVSX EAX, WORD PTR [ESI+0x13E] ; line 2383
};
static JumpTarget sekibankiD22_REMNANT_jumpData[] = {
	{ 0x01D, 0x48CE90 },
	{ 0x026, 0x57E432 },
};
static PatchByteCode sekibankiD22_REMNANT_patchByteCode = { sekibankiD22_REMNANT_byteCode, 117, sekibankiD22_REMNANT_jumpData, 2 };
// sekibankiD22_REMNANT1 declared in sekibanki.asm line 2387
static unsigned char sekibankiD22_REMNANT1_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x01, 0x00,       // CMP WORD PTR [ESI+0x13E],0x01 ; line 2388
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL2 ; line 2389
	0x80, 0xBE, 0x94, 0x01, 0x00, 0x00, 0x00,                   // CMP BYTE PTR [ESI+0x194],0x00 ; line 2390
	0x0F, 0x84, 0x15, 0x00, 0x00, 0x00,                         // JE SHORT LABEL2 ; line 2391
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x3C ; line 2392
	0x0F, 0x8F, 0x05, 0x00, 0x00, 0x00,                         // JG SHORT LABEL2 ; line 2393
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57E37A ; line 2395
	0x8A, 0x86, 0x13, 0x01, 0x00, 0x00,                         // MOV AL,[ESI+0x113] ; line 2397
};
static JumpTarget sekibankiD22_REMNANT1_jumpData[] = {
	{ 0x02D, 0x57E37A },
};
static PatchByteCode sekibankiD22_REMNANT1_patchByteCode = { sekibankiD22_REMNANT1_byteCode, 55, sekibankiD22_REMNANT1_jumpData, 1 };
// sekibankiD22_BULLETANG declared in sekibanki.asm line 2404
static unsigned char sekibankiD22_BULLETANG_byteCode[] = {
	0xD9, 0xEE, // FLDZ ; line 2405
};
static PatchByteCode sekibankiD22_BULLETANG_patchByteCode = { sekibankiD22_BULLETANG_byteCode, 2, nullptr, 0 };
// sekibankiADDJ6B declared in sekibanki.asm line 2409
static unsigned char sekibankiADDJ6B_byteCode[] = {
	0x81, 0xF8, 0x68, 0x00, 0x00, 0x00, // CMP EAX,0x00000068 ; line 2410
	0x0F, 0x84, 0xDE, 0xAD, 0xBE, 0xEF, // JE 0x570BEA ; line 2411
	0x81, 0xF8, 0xF0, 0x00, 0x00, 0x00, // CMP EAX,0x000000F0 ; line 2412
};
static JumpTarget sekibankiADDJ6B_jumpData[] = {
	{ 0x008, 0x570BEA },
};
static PatchByteCode sekibankiADDJ6B_patchByteCode = { sekibankiADDJ6B_byteCode, 18, sekibankiADDJ6B_jumpData, 1 };
// sekibankiADDJ6B1 declared in sekibanki.asm line 2416
static unsigned char sekibankiADDJ6B1_byteCode[] = {
	0x81, 0xBE, 0x58, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x758],0x00 ; line 2417
	0x0F, 0x85, 0x5F, 0x00, 0x00, 0x00,                         // JNE SHORT LABEL1 ; line 2418
	0x0F, 0xBE, 0x86, 0x04, 0x01, 0x00, 0x00,                   // MOVSX EAX,BYTE PTR [ESI+0x104] ; line 2419
	0x8B, 0x8E, 0x54, 0x07, 0x00, 0x00,                         // MOV ECX,[ESI+0x754] ; line 2420
	0x0F, 0xAF, 0xC8,                                           // IMUL ECX,EAX ; line 2421
	0x85, 0xC9,                                                 // TEST ECX,ECX ; line 2422
	0x0F, 0x8F, 0x11, 0x00, 0x00, 0x00,                         // JG SHORT LABEL2 ; line 2423
	0x8B, 0x96, 0x74, 0x07, 0x00, 0x00,                         // MOV EDX,[ESI+0x774] ; line 2424
	0x0F, 0xAF, 0xD0,                                           // IMUL EDX,EAX ; line 2425
	0x85, 0xD2,                                                 // TEST EDX,EDX ; line 2426
	0x0F, 0x8E, 0x36, 0x00, 0x00, 0x00,                         // JLE SHORT LABEL1 ; line 2427
	0x66, 0x39, 0xAE, 0x9E, 0x04, 0x00, 0x00,                   // CMP [ESI+0x49E],BP ; line 2429
	0x0F, 0x8C, 0xDE, 0xAD, 0xBE, 0xEF,                         // JL 0x57CC4B ; line 2430
	0x68, 0x95, 0x01, 0x00, 0x00,                               // PUSH 0x00000195 ; line 2431
	0x89, 0xF1,                                                 // MOV ECX,ESI ; line 2432
	0xE8, 0xDE, 0xAD, 0xBE, 0xEF,                               // CALL 0x489610 ; line 2433
	0x66, 0x39, 0xC3,                                           // CMP BX,AX ; line 2434
	0x0F, 0x8F, 0x14, 0x00, 0x00, 0x00,                         // JG SHORT LABEL1 ; line 2435
	0xD9, 0xEE,                                                 // FLDZ ; line 2436
	0x8B, 0x06,                                                 // MOV EAX,[ESI] ; line 2437
	0xD9, 0x9E, 0x2C, 0x01, 0x00, 0x00,                         // FSTP DWORD PTR [ESI+0x12C] ; line 2438
	0x68, 0x95, 0x01, 0x00, 0x00,                               // PUSH 0x00000195 ; line 2439
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                               // JMP 0x57C3C8 ; line 2440
	0x66, 0x39, 0xAE, 0x9E, 0x04, 0x00, 0x00,                   // CMP [ESI+0x49E],BP ; line 2442
	0x0F, 0x8C, 0xDE, 0xAD, 0xBE, 0xEF,                         // JL 0x57CC4B ; line 2443
	0x68, 0x94, 0x01, 0x00, 0x00,                               // PUSH 0x00000194 ; line 2444
};
static JumpTarget sekibankiADDJ6B1_jumpData[] = {
	{ 0x042, 0x57CC4B },
	{ 0x04E, 0x489610 },
	{ 0x06B, 0x57C3C8 },
	{ 0x078, 0x57CC4B },
};
static PatchByteCode sekibankiADDJ6B1_patchByteCode = { sekibankiADDJ6B1_byteCode, 129, sekibankiADDJ6B1_jumpData, 4 };
// sekibankiADDJ6B2 declared in sekibanki.asm line 2449
static unsigned char sekibankiADDJ6B2_byteCode[] = {
	0x66, 0x9C,                               // PUSHF ; line 2450
	0x81, 0xF8, 0xBC, 0x00, 0x00, 0x00,       // CMP EAX,0xBC ; line 2451
	0x0F, 0x84, 0x0C, 0x00, 0x00, 0x00,       // JE SHORT LABEL1 ; line 2452
	0x0F, 0xB6, 0x80, 0x08, 0xA3, 0x57, 0x00, // MOVZX EAX,BYTE PTR [EAX+0x57A308] ; line 2453
	0xE9, 0x05, 0x00, 0x00, 0x00,             // JMP SHORT LABEL2 ; line 2454
	0xB8, 0x0B, 0x00, 0x00, 0x00,             // MOV EAX,0x0000000B ; line 2456
	0x66, 0x9D,                               // POPF ; line 2458
	0x90,                                     // NOP ; line 2459
};
static PatchByteCode sekibankiADDJ6B2_patchByteCode = { sekibankiADDJ6B2_byteCode, 34, nullptr, 0 };
// sekibanki5B_STARTUP declared in sekibanki.asm line 2468
static unsigned char sekibanki5B_STARTUP_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x04, 0x00, // CMP WORD PTR [ESI+0x140],0x04 ; line 2469
};
static PatchByteCode sekibanki5B_STARTUP_patchByteCode = { sekibanki5B_STARTUP_byteCode, 9, nullptr, 0 };
// sekibanki6C_ANG1 declared in sekibanki.asm line 2475
static unsigned char sekibanki6C_ANG1_byteCode[] = {
	0xD9, 0x05, 0x3C, 0x15, 0x87, 0x00, // FLD DWORD PTR [0x87153C] ; line 2476
};
static PatchByteCode sekibanki6C_ANG1_patchByteCode = { sekibanki6C_ANG1_byteCode, 6, nullptr, 0 };
// sekibanki6C_ANG2 declared in sekibanki.asm line 2478
static unsigned char sekibanki6C_ANG2_byteCode[] = {
	0xD9, 0xEE,                         // FLDZ ; line 2479
	0xD8, 0x25, 0x3C, 0x15, 0x87, 0x00, // FSUB DWORD PTR [0x87153C] ; line 2480
};
static PatchByteCode sekibanki6C_ANG2_patchByteCode = { sekibanki6C_ANG2_byteCode, 8, nullptr, 0 };
// sekibanki6C_DUR declared in sekibanki.asm line 2485
static unsigned char sekibanki6C_DUR_byteCode[] = {
	0x81, 0xBE, 0x44, 0x01, 0x00, 0x00, 0x0B, 0x00, 0x00, 0x00, // CMP DWORD PTR [ESI+0x144],0x0B ; line 2486
};
static PatchByteCode sekibanki6C_DUR_patchByteCode = { sekibanki6C_DUR_byteCode, 10, nullptr, 0 };
// sekibanki6C_SPD declared in sekibanki.asm line 2490
static unsigned char sekibanki6C_SPD_byteCode[] = {
	0xD9, 0x05, 0x48, 0xD9, 0x85, 0x00, // FLD DWORD PTR [0x85D948] ; line 2492
};
static PatchByteCode sekibanki6C_SPD_patchByteCode = { sekibanki6C_SPD_byteCode, 6, nullptr, 0 };
// sekibankiHEAD_SIZE declared in sekibanki.asm line 2496
static unsigned char sekibankiHEAD_SIZE_byteCode[] = {
	0xDC, 0x0D, 0x2C, 0x81, 0x86, 0x00, // FMUL QWORD PTR [0x86812C] ; line 2497
};
static PatchByteCode sekibankiHEAD_SIZE_patchByteCode = { sekibankiHEAD_SIZE_byteCode, 6, nullptr, 0 };
// sekibankiHEADRETURN1 declared in sekibanki.asm line 2511
static unsigned char sekibankiHEADRETURN1_byteCode[] = {
	0x66, 0x9C,                                           // PUSHF ; line 2512
	0x60,                                                 // PUSHAD ; line 2513
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2514
	0x66, 0x8B, 0x80, 0x3C, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x13C] ; line 2515
	0x66, 0x81, 0xF8, 0xC9, 0x00,                         // CMP AX,0xC9 ; line 2516
	0x0F, 0x84, 0xE2, 0x00, 0x00, 0x00,                   // JE LABEL1C ; line 2517
	0x66, 0x81, 0xF8, 0xCB, 0x00,                         // CMP AX,0xCB ; line 2518
	0x0F, 0x84, 0xD7, 0x00, 0x00, 0x00,                   // JE LABEL1C ; line 2519
	0x66, 0x81, 0xF8, 0x08, 0x02,                         // CMP AX,0x208 ; line 2520
	0x0F, 0x84, 0xC5, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1B ; line 2521
	0x66, 0x81, 0xF8, 0x09, 0x02,                         // CMP AX,0x209 ; line 2522
	0x0F, 0x84, 0xBA, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1B ; line 2523
	0x66, 0x81, 0xF8, 0x9A, 0x01,                         // CMP AX,0x19A ; line 2524
	0x0F, 0x8C, 0x10, 0x00, 0x00, 0x00,                   // JL SHORT LABEL0 ; line 2525
	0x66, 0x81, 0xF8, 0xA0, 0x01,                         // CMP AX,0x1A0 ; line 2526
	0x0F, 0x8F, 0x05, 0x00, 0x00, 0x00,                   // JG SHORT LABEL0 ; line 2527
	0xE9, 0x9F, 0x00, 0x00, 0x00,                         // JMP LABEL1B ; line 2528
	0x66, 0x81, 0xF8, 0x30, 0x02,                         // CMP AX,0x230 ; line 2530
	0x0F, 0x8C, 0x10, 0x00, 0x00, 0x00,                   // JL SHORT LABEL0B ; line 2531
	0x66, 0x81, 0xF8, 0x3E, 0x02,                         // CMP AX,0x23E ; line 2532
	0x0F, 0x8F, 0x05, 0x00, 0x00, 0x00,                   // JG SHORT LABEL0B ; line 2533
	0xE9, 0x84, 0x00, 0x00, 0x00,                         // JMP LABEL1B ; line 2534
	0x66, 0x81, 0xF8, 0x90, 0x01,                         // CMP AX,0x190 ; line 2536
	0x0F, 0x84, 0x3C, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2537
	0x66, 0x81, 0xF8, 0x91, 0x01,                         // CMP AX,0x191 ; line 2538
	0x0F, 0x84, 0x31, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2539
	0x66, 0x81, 0xF8, 0x92, 0x01,                         // CMP AX,0x192 ; line 2540
	0x0F, 0x84, 0x26, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2541
	0x66, 0x81, 0xF8, 0x94, 0x01,                         // CMP AX,0x194 ; line 2542
	0x0F, 0x84, 0x1B, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2543
	0x66, 0x81, 0xF8, 0x95, 0x01,                         // CMP AX,0x195 ; line 2544
	0x0F, 0x84, 0x10, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2545
	0x66, 0x81, 0xF8, 0x96, 0x01,                         // CMP AX,0x196 ; line 2546
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2547
	0xE9, 0x4F, 0x00, 0x00, 0x00,                         // JMP SHORT LABEL2 ; line 2548
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2550
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 2551
	0x0F, 0x8F, 0x3A, 0x00, 0x00, 0x00,                   // JG SHORT LABEL2 ; line 2552
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 2553
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 2554
	0x0F, 0x8C, 0x28, 0x00, 0x00, 0x00,                   // JL SHORT LABEL2 ; line 2555
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 2556
	0x0F, 0x8F, 0x1D, 0x00, 0x00, 0x00,                   // JG SHORT LABEL2 ; line 2557
	0xDD, 0x05, 0x28, 0xC0, 0x85, 0x00,                   // FLD QWORD PTR [0x85C028] ; line 2559
	0xE9, 0x18, 0x00, 0x00, 0x00,                         // JMP SHORT LABELEND ; line 2560
	0xD9, 0xEE,                                           // FLDZ ; line 2563
	0xE9, 0x11, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2564
	0xDD, 0x05, 0x28, 0xC0, 0x85, 0x00,                   // FLD QWORD PTR [0x85C028] ; line 2567
	0xE9, 0x06, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2568
	0xDD, 0x05, 0x48, 0xE5, 0x85, 0x00,                   // FLD QWORD PTR [0x85E548] ; line 2571
	0x61,                                                 // POPAD ; line 2573
	0x66, 0x9D,                                           // POPF ; line 2574
};
static PatchByteCode sekibankiHEADRETURN1_patchByteCode = { sekibankiHEADRETURN1_byteCode, 273, nullptr, 0 };
// sekibankiHEADRETURN2 declared in sekibanki.asm line 2576
static unsigned char sekibankiHEADRETURN2_byteCode[] = {
	0x66, 0x9C,                                           // PUSHF ; line 2577
	0x60,                                                 // PUSHAD ; line 2578
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2579
	0x66, 0x8B, 0x80, 0x3C, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x13C] ; line 2580
	0x66, 0x81, 0xF8, 0xC9, 0x00,                         // CMP AX,0xC9 ; line 2581
	0x0F, 0x84, 0xE6, 0x00, 0x00, 0x00,                   // JE LABEL1C ; line 2582
	0x66, 0x81, 0xF8, 0xCB, 0x00,                         // CMP AX,0xCB ; line 2583
	0x0F, 0x84, 0xDB, 0x00, 0x00, 0x00,                   // JE LABEL1C ; line 2584
	0x66, 0x81, 0xF8, 0x08, 0x02,                         // CMP AX,0x208 ; line 2585
	0x0F, 0x84, 0xC5, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1B ; line 2586
	0x66, 0x81, 0xF8, 0x09, 0x02,                         // CMP AX,0x209 ; line 2587
	0x0F, 0x84, 0xBA, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1B ; line 2588
	0x66, 0x81, 0xF8, 0x9A, 0x01,                         // CMP AX,0x19A ; line 2589
	0x0F, 0x8C, 0x10, 0x00, 0x00, 0x00,                   // JL SHORT LABEL0 ; line 2590
	0x66, 0x81, 0xF8, 0xA0, 0x01,                         // CMP AX,0x1A0 ; line 2591
	0x0F, 0x8F, 0x05, 0x00, 0x00, 0x00,                   // JG SHORT LABEL0 ; line 2592
	0xE9, 0x9F, 0x00, 0x00, 0x00,                         // JMP LABEL1B ; line 2593
	0x66, 0x81, 0xF8, 0x30, 0x02,                         // CMP AX,0x230 ; line 2595
	0x0F, 0x8C, 0x10, 0x00, 0x00, 0x00,                   // JL SHORT LABEL0B ; line 2596
	0x66, 0x81, 0xF8, 0x3E, 0x02,                         // CMP AX,0x23E ; line 2597
	0x0F, 0x8F, 0x05, 0x00, 0x00, 0x00,                   // JG SHORT LABEL0B ; line 2598
	0xE9, 0x84, 0x00, 0x00, 0x00,                         // JMP LABEL1B ; line 2599
	0x66, 0x81, 0xF8, 0x90, 0x01,                         // CMP AX,0x190 ; line 2601
	0x0F, 0x84, 0x3C, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2602
	0x66, 0x81, 0xF8, 0x91, 0x01,                         // CMP AX,0x191 ; line 2603
	0x0F, 0x84, 0x31, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2604
	0x66, 0x81, 0xF8, 0x92, 0x01,                         // CMP AX,0x192 ; line 2605
	0x0F, 0x84, 0x26, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2606
	0x66, 0x81, 0xF8, 0x94, 0x01,                         // CMP AX,0x194 ; line 2607
	0x0F, 0x84, 0x1B, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2608
	0x66, 0x81, 0xF8, 0x95, 0x01,                         // CMP AX,0x195 ; line 2609
	0x0F, 0x84, 0x10, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2610
	0x66, 0x81, 0xF8, 0x96, 0x01,                         // CMP AX,0x196 ; line 2611
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2612
	0xE9, 0x53, 0x00, 0x00, 0x00,                         // JMP SHORT LABEL2 ; line 2613
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2615
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 2616
	0x0F, 0x8F, 0x3E, 0x00, 0x00, 0x00,                   // JG SHORT LABEL2 ; line 2617
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 2618
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 2619
	0x0F, 0x8C, 0x2C, 0x00, 0x00, 0x00,                   // JL SHORT LABEL2 ; line 2620
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 2621
	0x0F, 0x8F, 0x21, 0x00, 0x00, 0x00,                   // JG SHORT LABEL2 ; line 2622
	0xDC, 0x0D, 0x28, 0xC0, 0x85, 0x00,                   // FMUL QWORD PTR [0x85C028] ; line 2624
	0xE9, 0x1C, 0x00, 0x00, 0x00,                         // JMP SHORT LABELEND ; line 2625
	0xD8, 0x0D, 0xE8, 0xB5, 0x88, 0x00,                   // FMUL DWORD PTR [0x88B5E8] ; line 2628
	0xE9, 0x11, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2629
	0xDC, 0x0D, 0x28, 0xC0, 0x85, 0x00,                   // FMUL QWORD PTR [0x85C028] ; line 2632
	0xE9, 0x06, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2633
	0xDC, 0x0D, 0x48, 0xE5, 0x85, 0x00,                   // FMUL QWORD PTR [0x85E548] ; line 2636
	0xDC, 0x0D, 0x10, 0x8C, 0x85, 0x00,                   // FMUL QWORD PTR [0x858C10] ; line 2638
	0x61,                                                 // POPAD ; line 2639
	0x66, 0x9D,                                           // POPF ; line 2640
};
static PatchByteCode sekibankiHEADRETURN2_patchByteCode = { sekibankiHEADRETURN2_byteCode, 283, nullptr, 0 };
// sekibankiHEADRETURN3 declared in sekibanki.asm line 2643
static unsigned char sekibankiHEADRETURN3_byteCode[] = {
	0x66, 0x9C,                                           // PUSHF ; line 2644
	0x60,                                                 // PUSHAD ; line 2645
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2646
	0x66, 0x8B, 0x80, 0x3C, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x13C] ; line 2647
	0x66, 0x81, 0xF8, 0xC9, 0x00,                         // CMP AX,0xC9 ; line 2648
	0x0F, 0x84, 0xE2, 0x00, 0x00, 0x00,                   // JE LABEL1C ; line 2649
	0x66, 0x81, 0xF8, 0xCB, 0x00,                         // CMP AX,0xCB ; line 2650
	0x0F, 0x84, 0xD7, 0x00, 0x00, 0x00,                   // JE LABEL1C ; line 2651
	0x66, 0x81, 0xF8, 0x08, 0x02,                         // CMP AX,0x208 ; line 2652
	0x0F, 0x84, 0xC5, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1B ; line 2653
	0x66, 0x81, 0xF8, 0x09, 0x02,                         // CMP AX,0x209 ; line 2654
	0x0F, 0x84, 0xBA, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1B ; line 2655
	0x66, 0x81, 0xF8, 0x9A, 0x01,                         // CMP AX,0x19A ; line 2656
	0x0F, 0x8C, 0x10, 0x00, 0x00, 0x00,                   // JL SHORT LABEL0 ; line 2657
	0x66, 0x81, 0xF8, 0xA0, 0x01,                         // CMP AX,0x1A0 ; line 2658
	0x0F, 0x8F, 0x05, 0x00, 0x00, 0x00,                   // JG SHORT LABEL0 ; line 2659
	0xE9, 0x9F, 0x00, 0x00, 0x00,                         // JMP LABEL1B ; line 2660
	0x66, 0x81, 0xF8, 0x30, 0x02,                         // CMP AX,0x230 ; line 2662
	0x0F, 0x8C, 0x10, 0x00, 0x00, 0x00,                   // JL SHORT LABEL0B ; line 2663
	0x66, 0x81, 0xF8, 0x3E, 0x02,                         // CMP AX,0x23E ; line 2664
	0x0F, 0x8F, 0x05, 0x00, 0x00, 0x00,                   // JG SHORT LABEL0B ; line 2665
	0xE9, 0x84, 0x00, 0x00, 0x00,                         // JMP LABEL1B ; line 2666
	0x66, 0x81, 0xF8, 0x90, 0x01,                         // CMP AX,0x190 ; line 2668
	0x0F, 0x84, 0x3C, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2669
	0x66, 0x81, 0xF8, 0x91, 0x01,                         // CMP AX,0x191 ; line 2670
	0x0F, 0x84, 0x31, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2671
	0x66, 0x81, 0xF8, 0x92, 0x01,                         // CMP AX,0x192 ; line 2672
	0x0F, 0x84, 0x26, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2673
	0x66, 0x81, 0xF8, 0x94, 0x01,                         // CMP AX,0x194 ; line 2674
	0x0F, 0x84, 0x1B, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2675
	0x66, 0x81, 0xF8, 0x95, 0x01,                         // CMP AX,0x195 ; line 2676
	0x0F, 0x84, 0x10, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2677
	0x66, 0x81, 0xF8, 0x96, 0x01,                         // CMP AX,0x196 ; line 2678
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2679
	0xE9, 0x4F, 0x00, 0x00, 0x00,                         // JMP SHORT LABEL2 ; line 2680
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2682
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 2683
	0x0F, 0x8F, 0x3A, 0x00, 0x00, 0x00,                   // JG SHORT LABEL2 ; line 2684
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 2685
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 2686
	0x0F, 0x8C, 0x28, 0x00, 0x00, 0x00,                   // JL SHORT LABEL2 ; line 2687
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 2688
	0x0F, 0x8F, 0x1D, 0x00, 0x00, 0x00,                   // JG SHORT LABEL2 ; line 2689
	0xDD, 0x05, 0x28, 0xC0, 0x85, 0x00,                   // FLD QWORD PTR [0x85C028] ; line 2691
	0xE9, 0x18, 0x00, 0x00, 0x00,                         // JMP SHORT LABELEND ; line 2692
	0xD9, 0xEE,                                           // FLDZ ; line 2695
	0xE9, 0x11, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2696
	0xDD, 0x05, 0x28, 0xC0, 0x85, 0x00,                   // FLD QWORD PTR [0x85C028] ; line 2699
	0xE9, 0x06, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2700
	0xDD, 0x05, 0x48, 0xE5, 0x85, 0x00,                   // FLD QWORD PTR [0x85E548] ; line 2703
	0x61,                                                 // POPAD ; line 2705
	0x66, 0x9D,                                           // POPF ; line 2706
};
static PatchByteCode sekibankiHEADRETURN3_patchByteCode = { sekibankiHEADRETURN3_byteCode, 273, nullptr, 0 };
// sekibankiHEADRETURN4 declared in sekibanki.asm line 2708
static unsigned char sekibankiHEADRETURN4_byteCode[] = {
	0x66, 0x9C,                                           // PUSHF ; line 2709
	0x60,                                                 // PUSHAD ; line 2710
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2711
	0x66, 0x8B, 0x80, 0x3C, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x13C] ; line 2712
	0x66, 0x81, 0xF8, 0xC9, 0x00,                         // CMP AX,0xC9 ; line 2713
	0x0F, 0x84, 0xE6, 0x00, 0x00, 0x00,                   // JE LABEL1C ; line 2714
	0x66, 0x81, 0xF8, 0xCB, 0x00,                         // CMP AX,0xCB ; line 2715
	0x0F, 0x84, 0xDB, 0x00, 0x00, 0x00,                   // JE LABEL1C ; line 2716
	0x66, 0x81, 0xF8, 0x08, 0x02,                         // CMP AX,0x208 ; line 2717
	0x0F, 0x84, 0xC5, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1B ; line 2718
	0x66, 0x81, 0xF8, 0x09, 0x02,                         // CMP AX,0x209 ; line 2719
	0x0F, 0x84, 0xBA, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1B ; line 2720
	0x66, 0x81, 0xF8, 0x9A, 0x01,                         // CMP AX,0x19A ; line 2721
	0x0F, 0x8C, 0x10, 0x00, 0x00, 0x00,                   // JL SHORT LABEL0 ; line 2722
	0x66, 0x81, 0xF8, 0xA0, 0x01,                         // CMP AX,0x1A0 ; line 2723
	0x0F, 0x8F, 0x05, 0x00, 0x00, 0x00,                   // JG SHORT LABEL0 ; line 2724
	0xE9, 0x9F, 0x00, 0x00, 0x00,                         // JMP LABEL1B ; line 2725
	0x66, 0x81, 0xF8, 0x30, 0x02,                         // CMP AX,0x230 ; line 2727
	0x0F, 0x8C, 0x10, 0x00, 0x00, 0x00,                   // JL SHORT LABEL0B ; line 2728
	0x66, 0x81, 0xF8, 0x3E, 0x02,                         // CMP AX,0x23E ; line 2729
	0x0F, 0x8F, 0x05, 0x00, 0x00, 0x00,                   // JG SHORT LABEL0B ; line 2730
	0xE9, 0x84, 0x00, 0x00, 0x00,                         // JMP LABEL1B ; line 2731
	0x66, 0x81, 0xF8, 0x90, 0x01,                         // CMP AX,0x190 ; line 2733
	0x0F, 0x84, 0x3C, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2734
	0x66, 0x81, 0xF8, 0x91, 0x01,                         // CMP AX,0x191 ; line 2735
	0x0F, 0x84, 0x31, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2736
	0x66, 0x81, 0xF8, 0x92, 0x01,                         // CMP AX,0x192 ; line 2737
	0x0F, 0x84, 0x26, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2738
	0x66, 0x81, 0xF8, 0x94, 0x01,                         // CMP AX,0x194 ; line 2739
	0x0F, 0x84, 0x1B, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2740
	0x66, 0x81, 0xF8, 0x95, 0x01,                         // CMP AX,0x195 ; line 2741
	0x0F, 0x84, 0x10, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2742
	0x66, 0x81, 0xF8, 0x96, 0x01,                         // CMP AX,0x196 ; line 2743
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2744
	0xE9, 0x53, 0x00, 0x00, 0x00,                         // JMP SHORT LABEL2 ; line 2745
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2747
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 2748
	0x0F, 0x8F, 0x3E, 0x00, 0x00, 0x00,                   // JG SHORT LABEL2 ; line 2749
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 2750
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 2751
	0x0F, 0x8C, 0x2C, 0x00, 0x00, 0x00,                   // JL SHORT LABEL2 ; line 2752
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 2753
	0x0F, 0x8F, 0x21, 0x00, 0x00, 0x00,                   // JG SHORT LABEL2 ; line 2754
	0xDC, 0x0D, 0x28, 0xC0, 0x85, 0x00,                   // FMUL QWORD PTR [0x85C028] ; line 2756
	0xE9, 0x1C, 0x00, 0x00, 0x00,                         // JMP SHORT LABELEND ; line 2757
	0xD8, 0x0D, 0xE8, 0xB5, 0x88, 0x00,                   // FMUL DWORD PTR [0x88B5E8] ; line 2760
	0xE9, 0x11, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2761
	0xDC, 0x0D, 0x28, 0xC0, 0x85, 0x00,                   // FMUL QWORD PTR [0x85C028] ; line 2764
	0xE9, 0x06, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2765
	0xDC, 0x0D, 0x48, 0xE5, 0x85, 0x00,                   // FMUL QWORD PTR [0x85E548] ; line 2768
	0xDC, 0x0D, 0x10, 0x8C, 0x85, 0x00,                   // FMUL QWORD PTR [0x858C10] ; line 2770
	0x61,                                                 // POPAD ; line 2771
	0x66, 0x9D,                                           // POPF ; line 2772
};
static PatchByteCode sekibankiHEADRETURN4_patchByteCode = { sekibankiHEADRETURN4_byteCode, 283, nullptr, 0 };
// sekibankiHEAD_REDIRECT_SIDE declared in sekibanki.asm line 2781
static unsigned char sekibankiHEAD_REDIRECT_SIDE_byteCode[] = {
	0x66, 0x9C,                                           // PUSHF ; line 2782
	0x60,                                                 // PUSHAD ; line 2783
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2784
	0x66, 0x8B, 0x80, 0x3C, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x13C] ; line 2785
	0x66, 0x81, 0xF8, 0x90, 0x01,                         // CMP AX,0x190 ; line 2786
	0x0F, 0x84, 0x69, 0x00, 0x00, 0x00,                   // JE LABEL1B ; line 2787
	0x66, 0x81, 0xF8, 0x91, 0x01,                         // CMP AX,0x191 ; line 2788
	0x0F, 0x84, 0x1B, 0x00, 0x00, 0x00,                   // JE LABEL1 ; line 2789
	0x66, 0x81, 0xF8, 0x94, 0x01,                         // CMP AX,0x194 ; line 2790
	0x0F, 0x84, 0x96, 0x00, 0x00, 0x00,                   // JE LABEL1C ; line 2791
	0x66, 0x81, 0xF8, 0x95, 0x01,                         // CMP AX,0x195 ; line 2792
	0x0F, 0x84, 0x8B, 0x00, 0x00, 0x00,                   // JE LABEL1C ; line 2793
	0xE9, 0xC9, 0x00, 0x00, 0x00,                         // JMP LABEL2 ; line 2796
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2799
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 2800
	0x0F, 0x8F, 0xB4, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2801
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 2802
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 2803
	0x0F, 0x8C, 0xA2, 0x00, 0x00, 0x00,                   // JL LABEL2 ; line 2804
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 2805
	0x0F, 0x8F, 0x97, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2806
	0xD9, 0x05, 0x00, 0xAD, 0x85, 0x00,                   // FLD DWORD PTR [0x85AD00] ; line 2808
	0xDC, 0x0D, 0x10, 0x8C, 0x85, 0x00,                   // FMUL QWORD PTR [0x858C10] ; line 2809
	0xE9, 0x8C, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2810
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2813
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 2814
	0x0F, 0x8F, 0x71, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2815
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 2816
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 2817
	0x0F, 0x8C, 0x5F, 0x00, 0x00, 0x00,                   // JL LABEL2 ; line 2818
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 2819
	0x0F, 0x8F, 0x54, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2820
	0xD9, 0x05, 0xD4, 0x7D, 0x85, 0x00,                   // FLD DWORD PTR [0x857DD4] ; line 2821
	0xDC, 0x0D, 0x10, 0x8C, 0x85, 0x00,                   // FMUL QWORD PTR [0x858C10] ; line 2822
	0xE9, 0x49, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2823
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2826
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 2827
	0x0F, 0x8F, 0x2E, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2828
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 2829
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 2830
	0x0F, 0x8C, 0x1C, 0x00, 0x00, 0x00,                   // JL LABEL2 ; line 2831
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 2832
	0x0F, 0x8F, 0x11, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2833
	0xD9, 0x05, 0x98, 0xD3, 0x85, 0x00,                   // FLD DWORD PTR [0x85D398] ; line 2834
	0xDC, 0x0D, 0x10, 0x8C, 0x85, 0x00,                   // FMUL QWORD PTR [0x858C10] ; line 2835
	0xE9, 0x06, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2836
	0xD9, 0x05, 0x2C, 0x78, 0x86, 0x00,                   // FLD DWORD PTR [0x86782C] ; line 2839
	0x61,                                                 // POPAD ; line 2841
	0x66, 0x9D,                                           // POPF ; line 2842
};
static PatchByteCode sekibankiHEAD_REDIRECT_SIDE_patchByteCode = { sekibankiHEAD_REDIRECT_SIDE_byteCode, 275, nullptr, 0 };
// sekibankiHEAD_REDIRECT_UP declared in sekibanki.asm line 2846
static unsigned char sekibankiHEAD_REDIRECT_UP_byteCode[] = {
	0x66, 0x9C,                                           // PUSHF ; line 2847
	0x60,                                                 // PUSHAD ; line 2848
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2849
	0x66, 0x8B, 0x80, 0x3C, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x13C] ; line 2850
	0x66, 0x81, 0xF8, 0x90, 0x01,                         // CMP AX,0x190 ; line 2851
	0x0F, 0x84, 0x3C, 0x00, 0x00, 0x00,                   // JE LABEL1 ; line 2852
	0x66, 0x81, 0xF8, 0x91, 0x01,                         // CMP AX,0x191 ; line 2853
	0x0F, 0x84, 0x6E, 0x00, 0x00, 0x00,                   // JE LABEL1B ; line 2854
	0x66, 0x81, 0xF8, 0x92, 0x01,                         // CMP AX,0x192 ; line 2855
	0x0F, 0x84, 0x26, 0x00, 0x00, 0x00,                   // JE LABEL1 ; line 2856
	0x66, 0x81, 0xF8, 0x94, 0x01,                         // CMP AX,0x194 ; line 2857
	0x0F, 0x84, 0x09, 0x01, 0x00, 0x00,                   // JE LABEL1C1 ; line 2858
	0x66, 0x81, 0xF8, 0x95, 0x01,                         // CMP AX,0x195 ; line 2859
	0x0F, 0x84, 0x84, 0x00, 0x00, 0x00,                   // JE LABEL1B1 ; line 2860
	0x66, 0x81, 0xF8, 0x96, 0x01,                         // CMP AX,0x196 ; line 2861
	0x0F, 0x84, 0xB6, 0x00, 0x00, 0x00,                   // JE LABEL1C ; line 2862
	0xE9, 0x2B, 0x01, 0x00, 0x00,                         // JMP LABEL2 ; line 2863
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2866
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 2867
	0x0F, 0x8F, 0x16, 0x01, 0x00, 0x00,                   // JG LABEL2 ; line 2868
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 2869
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 2870
	0x0F, 0x8C, 0x04, 0x01, 0x00, 0x00,                   // JL LABEL2 ; line 2871
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 2872
	0x0F, 0x8F, 0xF9, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2873
	0xD8, 0x05, 0xD4, 0x7D, 0x85, 0x00,                   // FADD DWORD PTR [0x857DD4] ; line 2876
	0xE9, 0xF4, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2877
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2881
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 2882
	0x0F, 0x8F, 0xD9, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2883
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 2884
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 2885
	0x0F, 0x8C, 0xC7, 0x00, 0x00, 0x00,                   // JL LABEL2 ; line 2886
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 2887
	0x0F, 0x8F, 0xBC, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2888
	0xE9, 0xBD, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2890
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2894
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 2895
	0x0F, 0x8F, 0xA2, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2896
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 2897
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 2898
	0x0F, 0x8C, 0x90, 0x00, 0x00, 0x00,                   // JL LABEL2 ; line 2899
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 2900
	0x0F, 0x8F, 0x85, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2901
	0xD8, 0x05, 0x40, 0x15, 0x87, 0x00,                   // FADD DWORD PTR [0x871540] ; line 2902
	0xE9, 0x80, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2903
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2907
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 2908
	0x0F, 0x8F, 0x65, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2909
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 2910
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 2911
	0x0F, 0x8C, 0x53, 0x00, 0x00, 0x00,                   // JL LABEL2 ; line 2912
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 2913
	0x0F, 0x8F, 0x48, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2914
	0xD8, 0x25, 0xD4, 0x7D, 0x85, 0x00,                   // FSUB DWORD PTR [0x857DD4] ; line 2917
	0xE9, 0x43, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2918
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2923
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 2924
	0x0F, 0x8F, 0x28, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2925
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 2926
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 2927
	0x0F, 0x8C, 0x16, 0x00, 0x00, 0x00,                   // JL LABEL2 ; line 2928
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 2929
	0x0F, 0x8F, 0x0B, 0x00, 0x00, 0x00,                   // JG LABEL2 ; line 2930
	0xD8, 0x25, 0x40, 0x15, 0x87, 0x00,                   // FSUB DWORD PTR [0x871540] ; line 2931
	0xE9, 0x06, 0x00, 0x00, 0x00,                         // JMP LABELEND ; line 2932
	0xD8, 0x05, 0xC8, 0x7D, 0x85, 0x00,                   // FADD DWORD PTR [0x857DC8] ; line 2936
	0x61,                                                 // POPAD ; line 2938
	0x66, 0x9D,                                           // POPF ; line 2939
};
static PatchByteCode sekibankiHEAD_REDIRECT_UP_patchByteCode = { sekibankiHEAD_REDIRECT_UP_byteCode, 395, nullptr, 0 };
// sekibankiHEADX_FIX declared in sekibanki.asm line 2943
static unsigned char sekibankiHEADX_FIX_byteCode[] = {
	0x66, 0x9C,                                           // PUSHF ; line 2944
	0x60,                                                 // PUSHAD ; line 2945
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2946
	0x66, 0x8B, 0x80, 0x3C, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x13C] ; line 2947
	0x66, 0x81, 0xF8, 0x90, 0x01,                         // CMP AX,0x190 ; line 2948
	0x0F, 0x84, 0x3C, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2949
	0x66, 0x81, 0xF8, 0x91, 0x01,                         // CMP AX,0x191 ; line 2950
	0x0F, 0x84, 0x31, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2951
	0x66, 0x81, 0xF8, 0x92, 0x01,                         // CMP AX,0x192 ; line 2952
	0x0F, 0x84, 0x26, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2953
	0x66, 0x81, 0xF8, 0x94, 0x01,                         // CMP AX,0x194 ; line 2954
	0x0F, 0x84, 0x1B, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2955
	0x66, 0x81, 0xF8, 0x95, 0x01,                         // CMP AX,0x195 ; line 2956
	0x0F, 0x84, 0x10, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2957
	0x66, 0x81, 0xF8, 0x96, 0x01,                         // CMP AX,0x196 ; line 2958
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2959
	0xE9, 0x3D, 0x00, 0x00, 0x00,                         // JMP SHORT LABEL2 ; line 2960
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2962
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 2963
	0x0F, 0x8F, 0x28, 0x00, 0x00, 0x00,                   // JG SHORT LABEL2 ; line 2964
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 2965
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 2966
	0x0F, 0x8C, 0x16, 0x00, 0x00, 0x00,                   // JL SHORT LABEL2 ; line 2967
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 2968
	0x0F, 0x8F, 0x0B, 0x00, 0x00, 0x00,                   // JG SHORT LABEL2 ; line 2969
	0xD9, 0x86, 0xEC, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0xEC] ; line 2971
	0xE9, 0x0C, 0x00, 0x00, 0x00,                         // JMP SHORT LABELEND ; line 2972
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2974
	0xD9, 0x80, 0xEC, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [EAX+0xEC] ; line 2975
	0x61,                                                 // POPAD ; line 2977
	0x66, 0x9D,                                           // POPF ; line 2978
};
static PatchByteCode sekibankiHEADX_FIX_patchByteCode = { sekibankiHEADX_FIX_byteCode, 163, nullptr, 0 };
// sekibankiHEADY_FIX declared in sekibanki.asm line 2983
static unsigned char sekibankiHEADY_FIX_byteCode[] = {
	0x66, 0x9C,                                           // PUSHF ; line 2984
	0x60,                                                 // PUSHAD ; line 2985
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 2986
	0x66, 0x8B, 0x80, 0x3C, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x13C] ; line 2987
	0x66, 0x81, 0xF8, 0x90, 0x01,                         // CMP AX,0x190 ; line 2988
	0x0F, 0x84, 0x3C, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2989
	0x66, 0x81, 0xF8, 0x91, 0x01,                         // CMP AX,0x191 ; line 2990
	0x0F, 0x84, 0x31, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2991
	0x66, 0x81, 0xF8, 0x92, 0x01,                         // CMP AX,0x192 ; line 2992
	0x0F, 0x84, 0x26, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2993
	0x66, 0x81, 0xF8, 0x94, 0x01,                         // CMP AX,0x194 ; line 2994
	0x0F, 0x84, 0x1B, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2995
	0x66, 0x81, 0xF8, 0x95, 0x01,                         // CMP AX,0x195 ; line 2996
	0x0F, 0x84, 0x10, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2997
	0x66, 0x81, 0xF8, 0x96, 0x01,                         // CMP AX,0x196 ; line 2998
	0x0F, 0x84, 0x05, 0x00, 0x00, 0x00,                   // JE SHORT LABEL1 ; line 2999
	0xE9, 0x3D, 0x00, 0x00, 0x00,                         // JMP SHORT LABEL2 ; line 3000
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 3002
	0x66, 0x81, 0xB8, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [EAX+0x13E],0x00 ; line 3003
	0x0F, 0x8F, 0x28, 0x00, 0x00, 0x00,                   // JG SHORT LABEL2 ; line 3004
	0x66, 0x8B, 0x80, 0x40, 0x01, 0x00, 0x00,             // MOV AX,[EAX+0x140] ; line 3005
	0x66, 0x81, 0xF8, 0x01, 0x00,                         // CMP AX,0x01 ; line 3006
	0x0F, 0x8C, 0x16, 0x00, 0x00, 0x00,                   // JL SHORT LABEL2 ; line 3007
	0x66, 0x81, 0xF8, 0x06, 0x00,                         // CMP AX,0x06 ; line 3008
	0x0F, 0x8F, 0x0B, 0x00, 0x00, 0x00,                   // JG SHORT LABEL2 ; line 3009
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [ESI+0xF0] ; line 3011
	0xE9, 0x0C, 0x00, 0x00, 0x00,                         // JMP SHORT LABELEND ; line 3012
	0x8B, 0x86, 0x98, 0x03, 0x00, 0x00,                   // MOV EAX,[ESI+0x398] ; line 3014
	0xD9, 0x80, 0xF0, 0x00, 0x00, 0x00,                   // FLD DWORD PTR [EAX+0xF0] ; line 3015
	0x61,                                                 // POPAD ; line 3017
	0x66, 0x9D,                                           // POPF ; line 3018
};
static PatchByteCode sekibankiHEADY_FIX_patchByteCode = { sekibankiHEADY_FIX_byteCode, 163, nullptr, 0 };
// sekibankiJ8AY declared in sekibanki.asm line 3024
static unsigned char sekibankiJ8AY_byteCode[] = {
	0xD9, 0x05, 0x68, 0xBA, 0x85, 0x00, // FLD DWORD PTR [0x85BA68] ; line 3025
};
static PatchByteCode sekibankiJ8AY_patchByteCode = { sekibankiJ8AY_byteCode, 6, nullptr, 0 };
// sekibanki66B declared in sekibanki.asm line 3030
static unsigned char sekibanki66B_byteCode[] = {
	0xD9, 0x05, 0x28, 0x88, 0x85, 0x00, // FLD DWORD PTR [0x858828] ; line 3031
};
static PatchByteCode sekibanki66B_patchByteCode = { sekibanki66B_byteCode, 6, nullptr, 0 };
// sekibankiDASH declared in sekibanki.asm line 3037
static unsigned char sekibankiDASH_byteCode[] = {
	0xD9, 0x05, 0x40, 0x8F, 0x85, 0x00, // FLD DWORD PTR [0x858F40] ; line 3038
};
static PatchByteCode sekibankiDASH_patchByteCode = { sekibankiDASH_byteCode, 6, nullptr, 0 };
// sekibankiBDASH declared in sekibanki.asm line 3044
static unsigned char sekibankiBDASH_byteCode[] = {
	0xD9, 0x05, 0xC8, 0xB9, 0x85, 0x00, // FLD DWORD PTR [0x85B9C8] ; line 3045
};
static PatchByteCode sekibankiBDASH_patchByteCode = { sekibankiBDASH_byteCode, 6, nullptr, 0 };
// sekibankiBDASH_ACC declared in sekibanki.asm line 3049
static unsigned char sekibankiBDASH_ACC_byteCode[] = {
	0xDC, 0x05, 0xA0, 0x77, 0x86, 0x00, // FADD QWORD PTR [0x8677A0] ; line 3050
};
static PatchByteCode sekibankiBDASH_ACC_patchByteCode = { sekibankiBDASH_ACC_byteCode, 6, nullptr, 0 };
// sekibankiHJ8Y declared in sekibanki.asm line 3059
static unsigned char sekibankiHJ8Y_byteCode[] = {
	0xD9, 0x05, 0x20, 0xC1, 0x85, 0x00, // FLD DWORD PTR [0x85C120] ; line 3060
	0xD8, 0x25, 0x54, 0xB9, 0x85, 0x00, // FSUB DWORD PTR [0x85B954] ; line 3061
};
static PatchByteCode sekibankiHJ8Y_patchByteCode = { sekibankiHJ8Y_byteCode, 12, nullptr, 0 };
// sekibankiHJ9X declared in sekibanki.asm line 3069
static unsigned char sekibankiHJ9X_byteCode[] = {
	0xD9, 0x05, 0x40, 0x8F, 0x85, 0x00, // FLD DWORD PTR [0x858F40] ; line 3070
};
static PatchByteCode sekibankiHJ9X_patchByteCode = { sekibankiHJ9X_byteCode, 6, nullptr, 0 };
// sekibankiHJ9Y declared in sekibanki.asm line 3074
static unsigned char sekibankiHJ9Y_byteCode[] = {
	0xD9, 0x05, 0x60, 0xBC, 0x85, 0x00, // FLD DWORD PTR [0x85BC60] ; line 3075
};
static PatchByteCode sekibankiHJ9Y_patchByteCode = { sekibankiHJ9Y_byteCode, 6, nullptr, 0 };
// sekibankiHJ7X declared in sekibanki.asm line 3081
static unsigned char sekibankiHJ7X_byteCode[] = {
	0xD9, 0xEE,                         // FLDZ ; line 3082
	0xD8, 0x25, 0x40, 0x8F, 0x85, 0x00, // FSUB DWORD PTR [0x858F40] ; line 3083
};
static PatchByteCode sekibankiHJ7X_patchByteCode = { sekibankiHJ7X_byteCode, 8, nullptr, 0 };
// sekibanki9X declared in sekibanki.asm line 3092
static unsigned char sekibanki9X_byteCode[] = {
	0xD9, 0x05, 0x90, 0xC5, 0x85, 0x00, // FLD DWORD PTR [0x85C590] ; line 3093
};
static PatchByteCode sekibanki9X_patchByteCode = { sekibanki9X_byteCode, 6, nullptr, 0 };
// sekibanki7X declared in sekibanki.asm line 3097
static unsigned char sekibanki7X_byteCode[] = {
	0xD9, 0x05, 0x80, 0xC5, 0x85, 0x00, // FLD DWORD PTR [0x85C580] ; line 3098
};
static PatchByteCode sekibanki7X_patchByteCode = { sekibanki7X_byteCode, 6, nullptr, 0 };
// sekibankiJDIAGY declared in sekibanki.asm line 3102
static unsigned char sekibankiJDIAGY_byteCode[] = {
	0xD9, 0x05, 0x60, 0xBC, 0x85, 0x00, // FLD DWORD PTR [0x85BC60] ; line 3103
};
static PatchByteCode sekibankiJDIAGY_patchByteCode = { sekibankiJDIAGY_byteCode, 6, nullptr, 0 };
// sekibankiFLIGHT_0 declared in sekibanki.asm line 3109
static unsigned char sekibankiFLIGHT_0_byteCode[] = {
	0xD8, 0x1D, 0x30, 0x88, 0x85, 0x00, // FCOMP DWORD PTR [0x858830] ; line 3110
	0xDF, 0xE0,                         // FNSTSW AX ; line 3111
	0xF6, 0xC4, 0x41,                   // TEST AH,0x41 ; line 3112
	0x0F, 0x85, 0x0C, 0x00, 0x00, 0x00, // JNE SHORT LABEL1 ; line 3113
	0xD9, 0x05, 0x30, 0x88, 0x85, 0x00, // FLD DWORD PTR [0x858830] ; line 3114
	0xD9, 0x9E, 0xDC, 0x07, 0x00, 0x00, // FSTP DWORD PTR [ESI+0x7DC] ; line 3115
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,       // JMP 0x56EB99 ; line 3117
};
static JumpTarget sekibankiFLIGHT_0_jumpData[] = {
	{ 0x01E, 0x56EB99 },
};
static PatchByteCode sekibankiFLIGHT_0_patchByteCode = { sekibankiFLIGHT_0_byteCode, 34, sekibankiFLIGHT_0_jumpData, 1 };
// sekibankiFLIGHT_1 declared in sekibanki.asm line 3121
static unsigned char sekibankiFLIGHT_1_byteCode[] = {
	0xD9, 0x05, 0x30, 0x88, 0x85, 0x00, // FLD DWORD PTR [0x858830] ; line 3122
};
static PatchByteCode sekibankiFLIGHT_1_patchByteCode = { sekibankiFLIGHT_1_byteCode, 6, nullptr, 0 };
// sekibankiFLIGHT_2 declared in sekibanki.asm line 3127
static unsigned char sekibankiFLIGHT_2_byteCode[] = {
	0x0F, 0x85, 0x07, 0x00, 0x00, 0x00, // JNE SHORT LABEL1 ; line 3128
	0x6A, 0x05,                         // PUSH 0x05 ; line 3129
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,       // JMP 0x56E539 ; line 3130
	0x6A, 0x0A,                         // PUSH 0x0A ; line 3132
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,       // JMP 0x56E539 ; line 3133
};
static JumpTarget sekibankiFLIGHT_2_jumpData[] = {
	{ 0x009, 0x56E539 },
	{ 0x010, 0x56E539 },
};
static PatchByteCode sekibankiFLIGHT_2_patchByteCode = { sekibankiFLIGHT_2_byteCode, 20, sekibankiFLIGHT_2_jumpData, 2 };
// sekibanki2DD declared in sekibanki.asm line 3138
static unsigned char sekibanki2DD_byteCode[] = {
	0xD9, 0x05, 0x20, 0xC1, 0x85, 0x00, // FLD DWORD PTR [0x85C120] ; line 3139
	0xD8, 0x25, 0x54, 0xB9, 0x85, 0x00, // FSUB DWORD PTR [0x85B954] ; line 3140
};
static PatchByteCode sekibanki2DD_patchByteCode = { sekibanki2DD_byteCode, 12, nullptr, 0 };
// sekibankiBDELAY declared in sekibanki.asm line 3145
static unsigned char sekibankiBDELAY_byteCode[] = {
	0xBF, 0x3C, 0x00, 0x00, 0x00, // MOV EDI,0x0000003C ; line 3146
};
static PatchByteCode sekibankiBDELAY_patchByteCode = { sekibankiBDELAY_byteCode, 5, nullptr, 0 };
// sekibankiA236HEAD_HITS declared in sekibanki.asm line 3155
static unsigned char sekibankiA236HEAD_HITS_byteCode[] = {
	0x80, 0xB8, 0xA8, 0x06, 0x00, 0x00, 0x05, // CMP BYTE PTR [EAX+0x6A8],0x05 ; line 3156
};
static PatchByteCode sekibankiA236HEAD_HITS_patchByteCode = { sekibankiA236HEAD_HITS_byteCode, 7, nullptr, 0 };
// sekibankiD623C_FIX1 declared in sekibanki.asm line 3209
static unsigned char sekibankiD623C_FIX1_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x01, 0x00, // CMP WORD PTR [ESI+0x140],0x01 ; line 3210
};
static PatchByteCode sekibankiD623C_FIX1_patchByteCode = { sekibankiD623C_FIX1_byteCode, 9, nullptr, 0 };
// sekibankiD623C_FIX2 declared in sekibanki.asm line 3213
static unsigned char sekibankiD623C_FIX2_byteCode[] = {
	0xD9, 0xEE,                   // FLDZ ; line 3217
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x57219F ; line 3218
};
static JumpTarget sekibankiD623C_FIX2_jumpData[] = {
	{ 0x003, 0x57219F },
};
static PatchByteCode sekibankiD623C_FIX2_patchByteCode = { sekibankiD623C_FIX2_byteCode, 7, sekibankiD623C_FIX2_jumpData, 1 };
// sekibankiD623C_FIX3 declared in sekibanki.asm line 3221
static unsigned char sekibankiD623C_FIX3_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x5720FD ; line 3222
};
static JumpTarget sekibankiD623C_FIX3_jumpData[] = {
	{ 0x001, 0x5720FD },
};
static PatchByteCode sekibankiD623C_FIX3_patchByteCode = { sekibankiD623C_FIX3_byteCode, 5, sekibankiD623C_FIX3_jumpData, 1 };
// sekibankiD623C_FIX4 declared in sekibanki.asm line 3226
static unsigned char sekibankiD623C_FIX4_byteCode[] = {
	0xDD, 0xD8,                   // FSTP ST0 ; line 3227
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x572134 ; line 3228
};
static JumpTarget sekibankiD623C_FIX4_jumpData[] = {
	{ 0x003, 0x572134 },
};
static PatchByteCode sekibankiD623C_FIX4_patchByteCode = { sekibankiD623C_FIX4_byteCode, 7, sekibankiD623C_FIX4_jumpData, 1 };
// sekibankiD623C_FIX7 declared in sekibanki.asm line 3246
static unsigned char sekibankiD623C_FIX7_byteCode[] = {
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF, // JMP 0x572298 ; line 3247
};
static JumpTarget sekibankiD623C_FIX7_jumpData[] = {
	{ 0x001, 0x572298 },
};
static PatchByteCode sekibankiD623C_FIX7_patchByteCode = { sekibankiD623C_FIX7_byteCode, 5, sekibankiD623C_FIX7_jumpData, 1 };
// sekibankiD623C_FIX8 declared in sekibanki.asm line 3252
static unsigned char sekibankiD623C_FIX8_byteCode[] = {
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x0E, 0x00, // CMP WORD PTR [ESI+0x140],0x0E ; line 3253
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x572345 ; line 3254
};
static JumpTarget sekibankiD623C_FIX8_jumpData[] = {
	{ 0x00A, 0x572345 },
};
static PatchByteCode sekibankiD623C_FIX8_patchByteCode = { sekibankiD623C_FIX8_byteCode, 14, sekibankiD623C_FIX8_jumpData, 1 };
// sekibankiD623C_FIX9 declared in sekibanki.asm line 3259
static unsigned char sekibankiD623C_FIX9_byteCode[] = {
	0x8D, 0x84, 0x24, 0x98, 0x02, 0x00, 0x00, // LEA EAX,[ESP+0x298] ; line 3260
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,             // JMP 0x5722B3 ; line 3261
};
static JumpTarget sekibankiD623C_FIX9_jumpData[] = {
	{ 0x008, 0x5722B3 },
};
static PatchByteCode sekibankiD623C_FIX9_patchByteCode = { sekibankiD623C_FIX9_byteCode, 12, sekibankiD623C_FIX9_jumpData, 1 };
// sekibankiD623BC_HEIGHT declared in sekibanki.asm line 3265
static unsigned char sekibankiD623BC_HEIGHT_byteCode[] = {
	0xD9, 0x86, 0xF0, 0x00, 0x00, 0x00, // FLD DWORD PTR [ESI+0xF0] ; line 3266
	0xD8, 0x05, 0xD4, 0x7D, 0x85, 0x00, // FADD DWORD PTR [0x857DD4] ; line 3267
};
static PatchByteCode sekibankiD623BC_HEIGHT_patchByteCode = { sekibankiD623BC_HEIGHT_byteCode, 12, nullptr, 0 };
// sekibankiD623C_LV declared in sekibanki.asm line 3272
static unsigned char sekibankiD623C_LV_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x13E],0x00 ; line 3273
	0x0F, 0x85, 0x31, 0x00, 0x00, 0x00,                   // JNE SHORT END ; line 3274
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x01, 0x00, // CMP WORD PTR [ESI+0x140],0x01 ; line 3275
	0x0F, 0x85, 0x22, 0x00, 0x00, 0x00,                   // JNE SHORT END ; line 3277
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x01, 0x00, // CMP WORD PTR [ESI+0x142],0x01 ; line 3278
	0x0F, 0x85, 0x13, 0x00, 0x00, 0x00,                   // JNE SHORT END ; line 3279
	0x60,                                                 // PUSHAD ; line 3280
	0x0F, 0xB6, 0x86, 0xA5, 0x06, 0x00, 0x00,             // MOVZX EAX, BYTE PTR [ESI+0x6A5] ; line 3281
	0x80, 0xC0, 0x01,                                     // ADD AL,0x01 ; line 3282
	0x66, 0x89, 0x86, 0x42, 0x01, 0x00, 0x00,             // MOV WORD PTR [ESI+0x142],AX ; line 3283
	0x61,                                                 // POPAD ; line 3284
	0x39, 0xAE, 0x60, 0x07, 0x00, 0x00,                   // CMP DWORD PTR [ESI+0x760],EBP ; line 3286
};
static PatchByteCode sekibankiD623C_LV_patchByteCode = { sekibankiD623C_LV_byteCode, 70, nullptr, 0 };
// sekibankiD623B_MOREFIXES declared in sekibanki.asm line 3290
static unsigned char sekibankiD623B_MOREFIXES_byteCode[] = {
	0x66, 0x81, 0xBE, 0x3E, 0x01, 0x00, 0x00, 0x00, 0x00, // CMP WORD PTR [ESI+0x13E],0x00 ; line 3291
	0x0F, 0x85, 0x33, 0x00, 0x00, 0x00,                   // JNE SHORT END ; line 3292
	0x66, 0x81, 0xBE, 0x40, 0x01, 0x00, 0x00, 0x01, 0x00, // CMP WORD PTR [ESI+0x140],0x01 ; line 3293
	0x0F, 0x85, 0x24, 0x00, 0x00, 0x00,                   // JNE SHORT END ; line 3295
	0x66, 0x81, 0xBE, 0x42, 0x01, 0x00, 0x00, 0x01, 0x00, // CMP WORD PTR [ESI+0x142],0x01 ; line 3296
	0x0F, 0x85, 0x15, 0x00, 0x00, 0x00,                   // JNE SHORT END ; line 3297
	0x60,                                                 // PUSHAD ; line 3298
	0x0F, 0xB6, 0x86, 0xA5, 0x06, 0x00, 0x00,             // MOVZX EAX, BYTE PTR [ESI+0x6A5] ; line 3299
	0x66, 0x81, 0xC0, 0x01, 0x00,                         // ADD AX,0x01 ; line 3300
	0x66, 0x89, 0x86, 0x42, 0x01, 0x00, 0x00,             // MOV WORD PTR [ESI+0x142],AX ; line 3301
	0x61,                                                 // POPAD ; line 3302
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,                         // JMP 0x571E7C ; line 3304
};
static JumpTarget sekibankiD623B_MOREFIXES_jumpData[] = {
	{ 0x043, 0x571E7C },
};
static PatchByteCode sekibankiD623B_MOREFIXES_patchByteCode = { sekibankiD623B_MOREFIXES_byteCode, 71, sekibankiD623B_MOREFIXES_jumpData, 1 };
// sekibankiD623B_MOREFIXES2 declared in sekibanki.asm line 3308
static unsigned char sekibankiD623B_MOREFIXES2_byteCode[] = {
	0x80, 0xBE, 0xA5, 0x06, 0x00, 0x00, 0x04, // CMP BYTE PTR [ESI+0x6A5],0x04 ; line 3309
	0xE9, 0xDE, 0xAD, 0xBE, 0xEF,             // JMP 0x578EFF ; line 3310
};
static JumpTarget sekibankiD623B_MOREFIXES2_jumpData[] = {
	{ 0x008, 0x578EFF },
};
static PatchByteCode sekibankiD623B_MOREFIXES2_patchByteCode = { sekibankiD623B_MOREFIXES2_byteCode, 12, sekibankiD623B_MOREFIXES2_jumpData, 1 };
// sekibankiD623INVULS declared in sekibanki.asm line 3314
static unsigned char sekibankiD623INVULS_byteCode[] = {
	0x80, 0xBE, 0xA5, 0x06, 0x00, 0x00, 0x06, // CMP BYTE PTR [ESI+0x6A5],0x06 ; line 3315
};
static PatchByteCode sekibankiD623INVULS_patchByteCode = { sekibankiD623INVULS_byteCode, 7, nullptr, 0 };
// sekibankiD623FAIL_2 declared in sekibanki.asm line 3321
static unsigned char sekibankiD623FAIL_2_byteCode[] = {
	0xD9, 0x9E, 0xF8, 0x00, 0x00, 0x00, // FSTP DWORD PTR [ESI+0xF8] ; line 3322
	0xD9, 0x05, 0x10, 0xC6, 0x85, 0x00, // FLD DWORD PTR [0x85C610] ; line 3323
	0xD9, 0x9E, 0xF8, 0x00, 0x00, 0x00, // FSTP DWORD PTR [ESI+0xF8] ; line 3324
};
static PatchByteCode sekibankiD623FAIL_2_patchByteCode = { sekibankiD623FAIL_2_byteCode, 18, nullptr, 0 };
// sekibankiD623FAIL_3 declared in sekibanki.asm line 3326
static unsigned char sekibankiD623FAIL_3_byteCode[] = {
	0xD9, 0x05, 0x10, 0xC6, 0x85, 0x00, // FLD DWORD PTR [0x85C610] ; line 3327
};
static PatchByteCode sekibankiD623FAIL_3_patchByteCode = { sekibankiD623FAIL_3_byteCode, 6, nullptr, 0 };


// sekibanki.asm
std::array<PatchSkeleton, 155> patchList = {
	PatchSkeleton{ sekibankiID_FIX_patchByteCode,             (void *)0x56CCA4,  7}, // Declared line 30. Patch on CMP [ESI+0x196], BP
	PatchSkeleton{ sekibankiD214_DRAIN_patchByteCode,         (void *)0x57A13F,  7}, // Declared line 41. Patch on MOV BYTE PTR [ESI+0x194], 1
	PatchSkeleton{ sekibankiD214_DRAIN2_patchByteCode,        (void *)0x572F71,  7}, // Declared line 68. Patch on MOVZX EAX, WORD PTR [ESI+0x13E]
	PatchSkeleton{ sekibankiD236_SMTH_patchByteCode,          (void *)0x585A77,  9}, // Declared line 74. Patch on MOV WORD PTR [ESI+0x36C], 0x1E
	PatchSkeleton{ sekibankiD236_SMTH_patchByteCode,          (void *)0x585A94,  9}, // Declared line 75. Patch on MOV WORD PTR [ESI+0x36C], 0x32
	PatchSkeleton{ sekibankiD236_SMTH_patchByteCode,          (void *)0x585AB2,  9}, // Declared line 76. Patch on MOV WORD PTR [ESI+0x36C], 0x50
	PatchSkeleton{ sekibankiFLD1_patchByteCode,               (void *)0x585A71,  6}, // Declared line 77. Patch on FLD ST, DWORD PTR [0x8589F0]
	PatchSkeleton{ sekibankiFLD1_patchByteCode,               (void *)0x585A8E,  6}, // Declared line 78. Patch on FLD ST, DWORD PTR [0x871538]
	PatchSkeleton{ sekibankiFLD1_patchByteCode,               (void *)0x585AAC,  6}, // Declared line 79. Patch on FLD ST, DWORD PTR [0x867860]
	PatchSkeleton{ sekibankiFLD1_patchByteCode,               (void *)0x585AC6,  6}, // Declared line 80. Patch on FLD ST, DWORD PTR [0x85D0C8]
	PatchSkeleton{ sekibankiFLD1_patchByteCode,               (void *)0x585ADE,  6}, // Declared line 81. Patch on FLD ST, DWORD PTR [0x85ACEC]
	PatchSkeleton{ sekibankiFLD1_patchByteCode,               (void *)0x585AFA,  6}, // Declared line 82. Patch on FLD ST, DWORD PTR [0x85B9DC]
	PatchSkeleton{ sekibankiLOCKSOE_patchByteCode,            (void *)0x57604D,  6}, // Declared line 88. Patch on JNE 0x005760E2
	PatchSkeleton{ sekibankiSOEFLASH_patchByteCode,           (void *)0x57611C,  8}, // Declared line 93. Patch on CMP WORD PTR [ESI+0x140], 5
	PatchSkeleton{ sekibankiSOEMOMENTUMSTART_patchByteCode,   (void *)0x5761B6,  7}, // Declared line 98. Patch on CMP [ESI+0x140], BP
	PatchSkeleton{ sekibankiSOEMOMENTUMSTART_patchByteCode,   (void *)0x576247,  7}, // Declared line 99. Patch on CMP [ESI+0x140], BP
	PatchSkeleton{ sekibankiSOEMOMENTUMSTART_patchByteCode,   (void *)0x576232,  7}, // Declared line 100. Patch on CMP [ESI+0x140], DI
	PatchSkeleton{ sekibankiLOCKCLONES1_patchByteCode,        (void *)0x575DBF,  8}, // Declared line 105. Patch on CMP WORD PTR [ESI+0x13E], 3
	PatchSkeleton{ sekibankiLOCKCLONES1_patchByteCode,        (void *)0x576B87,  8}, // Declared line 106. Patch on CMP WORD PTR [ESI+0x13E], 3
	PatchSkeleton{ sekibankiLOCKCLONES2_patchByteCode,        (void *)0x581018,  5}, // Declared line 110. Patch on CMP CX, 0x25A
	PatchSkeleton{ sekibankiLOCKSWORD_patchByteCode,          (void *)0x575AF9,  8}, // Declared line 116. Patch on CMP WORD PTR [ESI+0x140], 3
	PatchSkeleton{ sekibankiLOCKSWORD_patchByteCode,          (void *)0x575B5C,  8}, // Declared line 117. Patch on CMP WORD PTR [ESI+0x140], 0xB
	PatchSkeleton{ sekibankiLOCKSWORD_patchByteCode,          (void *)0x575B7C,  8}, // Declared line 118. Patch on CMP WORD PTR [ESI+0x140], 0xC
	PatchSkeleton{ sekibankiLOCKSWORD_patchByteCode,          (void *)0x5768D5,  8}, // Declared line 120. Patch on CMP WORD PTR [ESI+0x140], 3
	PatchSkeleton{ sekibankiLOCKSWORD_patchByteCode,          (void *)0x576938,  8}, // Declared line 121. Patch on CMP WORD PTR [ESI+0x140], 0xB
	PatchSkeleton{ sekibankiLOCKSWORD_patchByteCode,          (void *)0x576958,  8}, // Declared line 122. Patch on CMP WORD PTR [ESI+0x140], 0xC
	PatchSkeleton{ sekibankiSWAPPOS_patchByteCode,            (void *)0x57E042,  7}, // Declared line 156. Patch on MOV BYTE PTR [ESI+0x18C], 1
	PatchSkeleton{ sekibanki2HEADDROPSC_patchByteCode,        (void *)0x57F843,  5}, // Declared line 504. Patch on MOV EDI, 5
	PatchSkeleton{ sekibankiHEADDROPSC_patchByteCode,         (void *)0x57F742,  7}, // Declared line 767. Patch on MOVSX EAX, WORD PTR [ESI+0x13E]
	PatchSkeleton{ sekibankiNECKSC_patchByteCode,             (void *)0x57FA60,  7}, // Declared line 948. Patch on MOVSX EAX, WORD PTR [ESI+0x13E]
	PatchSkeleton{ sekibankiBEAMSC1_patchByteCode,            (void *)0x57F6EB,  9}, // Declared line 1195. Patch on CMP WORD PTR [EDI+0x13C], 0x259
	PatchSkeleton{ sekibankiBEAMSC2_patchByteCode,            (void *)0x57F9FC,  7}, // Declared line 1196. Patch on CMP DWORD PTR [ESI+0x190], 5
	PatchSkeleton{ sekibankiHEAD_SKILL_patchByteCode,         (void *)0x580FE2,  6}, // Declared line 1289. Patch on MOV [ESI+0x170], ECX
	PatchSkeleton{ sekibankiHEAD_SPELL_patchByteCode,         (void *)0x580FE8,  7}, // Declared line 1518. Patch on MOVZX EAX, WORD PTR [ESI+0x13E]
	PatchSkeleton{ sekibankiA22_FIREONCE_patchByteCode,       (void *)0x582331,  6}, // Declared line 1545. Patch on MOV EAX, [ESI+0x144]
	PatchSkeleton{ sekibankiA22_LASERONHIT_patchByteCode,     (void *)0x57EB42,  7}, // Declared line 1550. Patch on MOVSX EAX, WORD PTR [ESI+0x13E]
	PatchSkeleton{ sekibankiA22_LASERDUR_patchByteCode,       (void *)0x57EC85,  8}, // Declared line 1639. Patch on CMP AL, 8
	PatchSkeleton{ sekibankiA22_LASERBOX2_patchByteCode,      (void *)0x57EC34,  6}, // Declared line 1645. Patch on FLD ST, QWORD PTR [0x85D098]
	PatchSkeleton{ sekibankiA22_LASERBOX1_patchByteCode,      (void *)0x57EC4F,  6}, // Declared line 1671. Patch on FLD ST, QWORD PTR [0x857938]
	PatchSkeleton{ sekibankiA22_LASER_patchByteCode,          (void *)0x582305,  7}, // Declared line 1703. Patch on CMP DWORD PTR [ESI+0x144], 0xA
	PatchSkeleton{ sekibankiJB_HOVER_patchByteCode,           (void *)0x570C19,  5}, // Declared line 1836. Patch on CALL 0x00487EA0
	PatchSkeleton{ sekibankiJ2B_HOVER_patchByteCode,          (void *)0x570D7F,  5}, // Declared line 1837. Patch on CALL 0x00487EA0
	PatchSkeleton{ sekibankiNO66AA_patchByteCode,             (void *)0x57C595,  9}, // Declared line 1859. Patch on CMP WORD PTR [ESI+0x13C], 0x131
	PatchSkeleton{ sekibankiNO5AAAA_patchByteCode,            (void *)0x57C6D5,  5}, // Declared line 1864. Patch on PUSH 0x142
	PatchSkeleton{ sekibanki2B_ANG_patchByteCode,             (void *)0x570B86,  6}, // Declared line 1871. Patch on FLD ST, DWORD PTR [0x85B9E4]
	PatchSkeleton{ sekibanki2B_LOWER2_patchByteCode,          (void *)0x570BA9,  6}, // Declared line 1875. Patch on IMUL EDX, 0xAA
	PatchSkeleton{ sekibanki2B_LOWER1_patchByteCode,          (void *)0x570B49,  6}, // Declared line 1879. Patch on FLD ST, DWORD PTR [0x85CE90]
	PatchSkeleton{ sekibanki2B_LOWER_patchByteCode,           (void *)0x570BA0,  6}, // Declared line 1883. Patch on FADD ST, QWORD PTR [0x859B00]
	PatchSkeleton{ sekibanki6B_TO5B1_patchByteCode,           (void *)0x570A19,  6}, // Declared line 1895. Patch on FLD ST, DWORD PTR [0x85BC14]
	PatchSkeleton{ sekibanki6B_TO5B2_patchByteCode,           (void *)0x570A6D,  6}, // Declared line 1896. Patch on FADD ST, QWORD PTR [0x859B00]
	PatchSkeleton{ sekibanki6B_TO5B3_patchByteCode,           (void *)0x570A73,  6}, // Declared line 1897. Patch on IMUL EDX, 0x96
	PatchSkeleton{ sekibanki5C2C_VELOCITY_patchByteCode,      (void *)0x57D70F,  6}, // Declared line 1915. Patch on FLD ST, DWORD PTR [0x85BCA4]
	PatchSkeleton{ sekibanki5C2C_CD_patchByteCode,            (void *)0x581998,  7}, // Declared line 1929. Patch on CMP DWORD PTR [ESI+0x144], 0x5A
	PatchSkeleton{ sekibankiBOUNDS1_patchByteCode,            (void *)0x5810EE,  6}, // Declared line 1937. Patch on FLD ST, DWORD PTR [0x85BAB8]
	PatchSkeleton{ sekibankiBOUNDS2_patchByteCode,            (void *)0x581107,  6}, // Declared line 1938. Patch on FCOMP ST, QWORD PTR [0x85BAC0]
	PatchSkeleton{ sekibankiBOUNDS1_patchByteCode,            (void *)0x581A34,  6}, // Declared line 1939. Patch on FLD ST, DWORD PTR [0x85BAB8]
	PatchSkeleton{ sekibankiBOUNDS2_patchByteCode,            (void *)0x581A4D,  6}, // Declared line 1940. Patch on FCOMP ST, QWORD PTR [0x85BAC0]
	PatchSkeleton{ sekibankiBOUNDS1_patchByteCode,            (void *)0x581EF9,  6}, // Declared line 1941. Patch on FLD ST, DWORD PTR [0x85BAB8]
	PatchSkeleton{ sekibankiBOUNDS2_patchByteCode,            (void *)0x581F16,  6}, // Declared line 1942. Patch on FCOMP ST, QWORD PTR [0x85BAC0]
	PatchSkeleton{ sekibankiBOUNDS1_patchByteCode,            (void *)0x58209E,  6}, // Declared line 1943. Patch on FLD ST, DWORD PTR [0x85BAB8]
	PatchSkeleton{ sekibankiBOUNDS2_patchByteCode,            (void *)0x5820BB,  6}, // Declared line 1944. Patch on FCOMP ST, QWORD PTR [0x85BAC0]
	PatchSkeleton{ sekibankiC_NEW1_patchByteCode,             (void *)0x57D574,  8}, // Declared line 1953. Patch on CMP WORD PTR [ESI+0x140], 0
	PatchSkeleton{ sekibankiC_NEW2_patchByteCode,             (void *)0x57D57C,  6}, // Declared line 1954. Patch on JNE 0x0057D67E
	PatchSkeleton{ sekibanki5C_STARTUP_patchByteCode,         (void *)0x5817D9,  6}, // Declared line 2070. Patch on MOV EAX, [ESI+0x144]
	PatchSkeleton{ sekibanki5C_STARTUP1_patchByteCode,        (void *)0x5817E9,  5}, // Declared line 2071. Patch on MOV ECX, 5
	PatchSkeleton{ sekibanki2C_STARTUP_patchByteCode,         (void *)0x581B95,  6}, // Declared line 2072. Patch on MOV EAX, [ESI+0x144]
	PatchSkeleton{ sekibanki2C_STARTUP1_patchByteCode,        (void *)0x581BA5,  5}, // Declared line 2073. Patch on MOV ECX, 5
	PatchSkeleton{ sekibanki5C_ANG_patchByteCode,             (void *)0x581830,  7}, // Declared line 2075. Patch on FSTP DWORD PTR [ESP+0x80], ST
	PatchSkeleton{ sekibankiC_DUR_patchByteCode,              (void *)0x581849,  6}, // Declared line 2076. Patch on FLD ST, DWORD PTR [0x85B3B0]
	PatchSkeleton{ sekibankiC_ONCE1_patchByteCode,            (void *)0x5818D1,  7}, // Declared line 2077. Patch on MOVSX EAX, WORD PTR [ESI+0x36C]
	PatchSkeleton{ sekibankiC_ONCE2_patchByteCode,            (void *)0x5817F8,  8}, // Declared line 2078. Patch on CMP WORD PTR [ESI+0x36C], 0xA
	PatchSkeleton{ sekibanki5C_ANGDIST_patchByteCode,         (void *)0x581819,  5}, // Declared line 2079. Patch on LEA EDX, [EAX+EAX*4]
	PatchSkeleton{ sekibanki2C_ANG_patchByteCode,             (void *)0x581BE7,  5}, // Declared line 2082. Patch on PUSH EBP
	PatchSkeleton{ sekibankiC_DUR_patchByteCode,              (void *)0x581BF8,  6}, // Declared line 2083. Patch on FLD ST, DWORD PTR [0x867810]
	PatchSkeleton{ sekibankiC_ONCE1_patchByteCode,            (void *)0x581C77,  7}, // Declared line 2084. Patch on MOVSX ECX, WORD PTR [ESI+0x36C]
	PatchSkeleton{ sekibanki5C_ONCE2_patchByteCode,           (void *)0x581BB4,  8}, // Declared line 2085. Patch on CMP WORD PTR [ESI+0x36C], 0xA
	PatchSkeleton{ sekibankiBOUNDS1_patchByteCode,            (void *)0x57D5D0,  6}, // Declared line 2089. Patch on FLD ST, DWORD PTR [0x85BAB8]
	PatchSkeleton{ sekibankiBOUNDS2_patchByteCode,            (void *)0x57D5ED,  6}, // Declared line 2090. Patch on FCOMP ST, QWORD PTR [0x85BAC0]
	PatchSkeleton{ sekibankiBOUNDS3_patchByteCode,            (void *)0x57D61B,  6}, // Declared line 2095. Patch on FCOMP ST, QWORD PTR [0x85C088]
	PatchSkeleton{ sekibankiB_FIX_patchByteCode,              (void *)0x57D263,  7}, // Declared line 2101. Patch on FILD ST, DWORD PTR [ESP+0x10]
	PatchSkeleton{ sekibankiJ5B_DIST_patchByteCode,           (void *)0x570D0F,  6}, // Declared line 2107. Patch on MOVSX EDX, AL
	PatchSkeleton{ sekibankiB_NEW_patchByteCode,              (void *)0x57D207,  6}, // Declared line 2112. Patch on FLD ST, DWORD PTR [0x871538]
	PatchSkeleton{ sekibankiB_NEW1_patchByteCode,             (void *)0x57D189,  6}, // Declared line 2126. Patch on JNE 0x0057D252
	PatchSkeleton{ sekibankiA22SPIN_FIX_patchByteCode,        (void *)0x5861C6,  6}, // Declared line 2146. Patch on FSTP DWORD PTR [ESI+0x12C], ST
	PatchSkeleton{ sekibankiA22SPIN_CONF_patchByteCode,       (void *)0x5826E4, 10}, // Declared line 2151. Patch on CMP DWORD PTR [ESI+0x144], 0x96
	PatchSkeleton{ sekibankiA22SPIN_LV_patchByteCode,         (void *)0x5825AA,  6}, // Declared line 2181. Patch on MOV AL, [EDX+0x6AF]
	PatchSkeleton{ sekibankiREANGLE2_patchByteCode,           (void *)0x581EED,  6}, // Declared line 2274. Patch on CMP [ESI+0x144], EBX
	PatchSkeleton{ sekibankiD22_FIREFREQ_patchByteCode,       (void *)0x581F4A,  6}, // Declared line 2290. Patch on MOV EDX, [ESI+0x35C]
	PatchSkeleton{ sekibankiD22C_SPD_patchByteCode,           (void *)0x58164E,  6}, // Declared line 2299. Patch on FLD ST, DWORD PTR [0x8596B8]
	PatchSkeleton{ sekibankiD22B_SPD_patchByteCode,           (void *)0x58155E,  6}, // Declared line 2300. Patch on FLD ST, DWORD PTR [0x85BBE4]
	PatchSkeleton{ sekibankiD22_DUR_patchByteCode,            (void *)0x581EE2,  5}, // Declared line 2315. Patch on MOV EBX, 0xE
	PatchSkeleton{ sekibankiD22B_ANG1_patchByteCode,          (void *)0x581622,  6}, // Declared line 2343. Patch on FLD ST, DWORD PTR [0x86782C]
	PatchSkeleton{ sekibankiD22B_ANG2_patchByteCode,          (void *)0x581639,  6}, // Declared line 2344. Patch on FLD ST, DWORD PTR [0x85B908]
	PatchSkeleton{ sekibankiD22B_ANG1_patchByteCode,          (void *)0x581532,  6}, // Declared line 2346. Patch on FLD ST, DWORD PTR [0x86782C]
	PatchSkeleton{ sekibankiD22B_ANG2_patchByteCode,          (void *)0x581549,  6}, // Declared line 2347. Patch on FLD ST, DWORD PTR [0x85B908]
	PatchSkeleton{ sekibankiD22_REMNANT_patchByteCode,        (void *)0x57E34F,  7}, // Declared line 2385. Patch on MOVSX EAX, WORD PTR [ESI+0x13E]
	PatchSkeleton{ sekibankiD22_REMNANT1_patchByteCode,       (void *)0x57E364,  6}, // Declared line 2399. Patch on MOV AL, [ESI+0x113]
	PatchSkeleton{ sekibankiNOP_patchByteCode,                (void *)0x57E380,  6}, // Declared line 2400. Patch on FADD ST, QWORD PTR [0x8579B0]
	PatchSkeleton{ sekibankiNOP_patchByteCode,                (void *)0x57E392,  6}, // Declared line 2401. Patch on FADD ST, QWORD PTR [0x857F90]
	PatchSkeleton{ sekibankiNOP_patchByteCode,                (void *)0x57E3C6,  6}, // Declared line 2402. Patch on FMUL ST, QWORD PTR [0x85BA10]
	PatchSkeleton{ sekibankiD22_BULLETANG_patchByteCode,      (void *)0x57E37A,  6}, // Declared line 2407. Patch on FLD ST, DWORD PTR [ESI+0x12C]
	PatchSkeleton{ sekibankiADDJ6B_patchByteCode,             (void *)0x56F6EB,  5}, // Declared line 2414. Patch on CMP EAX, 0xF0
	PatchSkeleton{ sekibankiADDJ6B1_patchByteCode,            (void *)0x57CBF9,  5}, // Declared line 2447. Patch on PUSH 0x194
	PatchSkeleton{ sekibankiADDJ6B2_patchByteCode,            (void *)0x579CCC,  7}, // Declared line 2461. Patch on MOVZX EAX, BYTE PTR [EAX+0x57A308]
	PatchSkeleton{ sekibanki5B_STARTUP_patchByteCode,         (void *)0x5708C5,  8}, // Declared line 2471. Patch on CMP WORD PTR [ESI+0x140], 3
	PatchSkeleton{ sekibanki6C_ANG1_patchByteCode,            (void *)0x5813FF,  6}, // Declared line 2482. Patch on FLD ST, DWORD PTR [0x86782C]
	PatchSkeleton{ sekibanki6C_ANG2_patchByteCode,            (void *)0x581416,  6}, // Declared line 2483. Patch on FLD ST, DWORD PTR [0x85B908]
	PatchSkeleton{ sekibanki6C_DUR_patchByteCode,             (void *)0x581A2B,  7}, // Declared line 2488. Patch on CMP DWORD PTR [ESI+0x144], 0xE
	PatchSkeleton{ sekibanki6C_SPD_patchByteCode,             (void *)0x581431,  6}, // Declared line 2494. Patch on FLD ST, DWORD PTR [0x8596B8]
	PatchSkeleton{ sekibankiHEAD_SIZE_patchByteCode,          (void *)0x58124E,  6}, // Declared line 2499. Patch on FMUL ST, QWORD PTR [0x857F78]
	PatchSkeleton{ sekibankiHEADRETURN1_patchByteCode,        (void *)0x581131,  6}, // Declared line 2775. Patch on FLD ST, QWORD PTR [0x85B968]
	PatchSkeleton{ sekibankiHEADRETURN2_patchByteCode,        (void *)0x58116A,  6}, // Declared line 2776. Patch on FMUL ST, QWORD PTR [0x85D090]
	PatchSkeleton{ sekibankiHEADRETURN3_patchByteCode,        (void *)0x58119C,  6}, // Declared line 2777. Patch on FLD ST, QWORD PTR [0x857F90]
	PatchSkeleton{ sekibankiHEADRETURN4_patchByteCode,        (void *)0x5811E1,  6}, // Declared line 2778. Patch on FMUL ST, QWORD PTR [0x85D088]
	PatchSkeleton{ sekibankiHEAD_REDIRECT_SIDE_patchByteCode, (void *)0x58107E,  6}, // Declared line 2844. Patch on FLD ST, QWORD PTR [0x857B20]
	PatchSkeleton{ sekibankiHEAD_REDIRECT_UP_patchByteCode,   (void *)0x581180,  6}, // Declared line 2941. Patch on FADD ST, QWORD PTR [0x857948]
	PatchSkeleton{ sekibankiHEADX_FIX_patchByteCode,          (void *)0x581139,  6}, // Declared line 2980. Patch on FLD ST, DWORD PTR [EAX+0xEC]
	PatchSkeleton{ sekibankiHEADX_FIX_patchByteCode,          (void *)0x581158,  6}, // Declared line 2981. Patch on FLD ST, DWORD PTR [EAX+0xEC]
	PatchSkeleton{ sekibankiHEADY_FIX_patchByteCode,          (void *)0x58117A,  6}, // Declared line 3020. Patch on FLD ST, DWORD PTR [EAX+0xF0]
	PatchSkeleton{ sekibankiJ8AY_patchByteCode,               (void *)0x570340,  6}, // Declared line 3027. Patch on FLD ST, DWORD PTR [0x859F00]
	PatchSkeleton{ sekibanki66B_patchByteCode,                (void *)0x570F0B,  6}, // Declared line 3033. Patch on FLD ST, DWORD PTR [0x85CE80]
	PatchSkeleton{ sekibankiDASH_patchByteCode,               (void *)0x56D7B0,  6}, // Declared line 3040. Patch on FLD ST, DWORD PTR [0x85B3B0]
	PatchSkeleton{ sekibankiBDASH_patchByteCode,              (void *)0x56D96F,  6}, // Declared line 3047. Patch on FLD ST, DWORD PTR [0x85B9E4]
	PatchSkeleton{ sekibankiBDASH_ACC_patchByteCode,          (void *)0x56D869,  6}, // Declared line 3052. Patch on FADD ST, QWORD PTR [0x85CEA0]
	PatchSkeleton{ sekibankiNOP_patchByteCode,                (void *)0x56D8B7,  6}, // Declared line 3054. Patch on FADD ST, QWORD PTR [0x857990]
	PatchSkeleton{ sekibankiHJ8Y_patchByteCode,               (void *)0x56DFA8,  6}, // Declared line 3064. Patch on FLD ST, DWORD PTR [0x85C160]
	PatchSkeleton{ sekibankiHJ9X_patchByteCode,               (void *)0x56E0DA,  6}, // Declared line 3072. Patch on FLD ST, DWORD PTR [0x85C22C]
	PatchSkeleton{ sekibankiHJ9Y_patchByteCode,               (void *)0x56E0EB,  6}, // Declared line 3077. Patch on FLD ST, DWORD PTR [0x85B9D0]
	PatchSkeleton{ sekibankiHJ7X_patchByteCode,               (void *)0x56E1E5,  6}, // Declared line 3086. Patch on FLD ST, DWORD PTR [0x85B9D8]
	PatchSkeleton{ sekibanki9X_patchByteCode,                 (void *)0x56D132,  6}, // Declared line 3095. Patch on FLD ST, DWORD PTR [0x85BBBC]
	PatchSkeleton{ sekibanki7X_patchByteCode,                 (void *)0x56D1C8,  6}, // Declared line 3100. Patch on FLD ST, DWORD PTR [0x85CEAC]
	PatchSkeleton{ sekibankiJDIAGY_patchByteCode,             (void *)0x56D07C,  6}, // Declared line 3105. Patch on FLD ST, DWORD PTR [0x859F00]
	PatchSkeleton{ sekibankiFLIGHT_0_patchByteCode,           (void *)0x56EB80,  6}, // Declared line 3119. Patch on FCOMP ST, QWORD PTR [0x85CE98]
	PatchSkeleton{ sekibankiFLIGHT_1_patchByteCode,           (void *)0x579D17,  6}, // Declared line 3124. Patch on FLD ST, DWORD PTR [0x85C230]
	PatchSkeleton{ sekibankiFLIGHT_2_patchByteCode,           (void *)0x56E531,  6}, // Declared line 3135. Patch on JNE SHORT 0x0056E537
	PatchSkeleton{ sekibanki2DD_patchByteCode,                (void *)0x56EE7F,  6}, // Declared line 3142. Patch on FLD ST, DWORD PTR [0x85C160]
	PatchSkeleton{ sekibankiBDELAY_patchByteCode,             (void *)0x57D42E,  5}, // Declared line 3148. Patch on MOV EDI, 0x12
	PatchSkeleton{ sekibankiA236HEAD_HITS_patchByteCode,      (void *)0x585D15,  7}, // Declared line 3158. Patch on CMP BYTE PTR [EAX+0x6A8], 4
	PatchSkeleton{ sekibankiD623C_FIX1_patchByteCode,         (void *)0x57210A,  7}, // Declared line 3212. Patch on CMP [ESI+0x140], BP
	PatchSkeleton{ sekibankiD623C_FIX2_patchByteCode,         (void *)0x572134,  9}, // Declared line 3220. Patch on PUSH 0x32
	PatchSkeleton{ sekibankiD623C_FIX3_patchByteCode,         (void *)0x5720F1,  6}, // Declared line 3224. Patch on CMP [ESI+0x144], EBP
	PatchSkeleton{ sekibankiD623C_FIX4_patchByteCode,         (void *)0x572124,  9}, // Declared line 3230. Patch on PUSH 0x78
	PatchSkeleton{ sekibankiD623C_FIX7_patchByteCode,         (void *)0x57228F,  9}, // Declared line 3250. Patch on PUSH 4
	PatchSkeleton{ sekibankiD623C_FIX8_patchByteCode,         (void *)0x5722EF,  8}, // Declared line 3256. Patch on CMP WORD PTR [ESI+0x140], 0xE
	PatchSkeleton{ sekibankiD623C_FIX9_patchByteCode,         (void *)0x5722AA,  7}, // Declared line 3263. Patch on LEA EAX, [ESP+0x298]
	PatchSkeleton{ sekibankiD623BC_HEIGHT_patchByteCode,      (void *)0x571F61,  6}, // Declared line 3269. Patch on FLD ST, DWORD PTR [ESI+0xF0]
	PatchSkeleton{ sekibankiD623BC_HEIGHT_patchByteCode,      (void *)0x5722BC,  6}, // Declared line 3270. Patch on FLD ST, DWORD PTR [ESI+0xF0]
	PatchSkeleton{ sekibankiD623C_LV_patchByteCode,           (void *)0x5720E2,  6}, // Declared line 3288. Patch on CMP [ESI+0x760], EBP
	PatchSkeleton{ sekibankiD623B_MOREFIXES_patchByteCode,    (void *)0x571E6B,  6}, // Declared line 3306. Patch on CMP [ESI+0x6A5], BL
	PatchSkeleton{ sekibankiD623B_MOREFIXES2_patchByteCode,   (void *)0x572020,  7}, // Declared line 3312. Patch on CMP BYTE PTR [ESI+0x6A5], 2
	PatchSkeleton{ sekibankiD623INVULS_patchByteCode,         (void *)0x57A0AA,  7}, // Declared line 3317. Patch on CMP BYTE PTR [ESI+0x6A5], 1
	PatchSkeleton{ sekibankiFLDZ_patchByteCode,               (void *)0x571FD9,  6}, // Declared line 3329. Patch on FLD ST, DWORD PTR [0x85B3B0]
	PatchSkeleton{ sekibankiD623FAIL_2_patchByteCode,         (void *)0x571FE7,  6}, // Declared line 3330. Patch on FSTP DWORD PTR [ESI+0xF8], ST
	PatchSkeleton{ sekibankiFLDZ_patchByteCode,               (void *)0x572381,  6}, // Declared line 3332. Patch on FLD ST, DWORD PTR [0x85B3B0]
	PatchSkeleton{ sekibankiD623FAIL_3_patchByteCode,         (void *)0x57239F,  6}, // Declared line 3333. Patch on FLD ST, DWORD PTR [0x85B9D0]
};


static std::array<unsigned, 59> skeletonsForUpdate = {
	   0,   2,  12,  13,  14,  15,  16,  17,  18,  20,  21,  22,  23,  24,  25,  40,
	  41,  44,  45,  46,  47,  48,  49,  50,  80, 101, 104, 119, 120, 121, 122, 123,
	 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 140, 141, 142,
	 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154,
};
static std::array<unsigned, 4> skeletonsForInitializeAction = { 1, 103, 133, 150 };
static std::vector<unsigned> skeletonsForInitialize;
static std::array<unsigned, 3> skeletonsForHandleInputs = { 42, 43, 102 };
static std::vector<unsigned> skeletonsForVUnknown58;
static std::vector<unsigned> skeletonsForVUnknown5C;
static std::vector<unsigned> skeletonsForVUnknown60;
static std::array<unsigned, 89> skeletonsForObjectUpdate = {
	   3,   4,   5,   6,   7,   8,   9,  10,  11,  19,  26,  27,  28,  29,  30,  31,
	  32,  33,  34,  35,  36,  37,  38,  39,  51,  52,  53,  54,  55,  56,  57,  58,
	  59,  60,  61,  62,  63,  64,  65,  66,  67,  68,  69,  70,  71,  72,  73,  74,
	  75,  76,  77,  78,  79,  81,  82,  83,  84,  85,  86,  87,  88,  89,  90,  91,
	  92,  93,  94,  95,  96,  97,  98,  99, 100, 105, 106, 107, 108, 109, 110, 111,
	 112, 113, 114, 115, 116, 117, 118, 136, 137,
};
static std::array<unsigned, 11> skeletonsForObjectInitializeAction = { 3, 4, 5, 6, 7, 8, 9, 10, 11, 83, 137 };



std::vector<Patch, TrampolineAllocator> compiledPatches{trampolineAllocator};
std::vector<Patch *, PatchListAllocator> objectUpdate_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> objectInitializeAction_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> update_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> initializeAction_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> initialize_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> handleInputs_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> VUnknown58_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> VUnknown5C_patches{patchListAllocator};
std::vector<Patch *, PatchListAllocator> VUnknown60_patches{patchListAllocator};

static Patch compilePatch(const PatchSkeleton &skeleton)
{
	Patch result{skeleton};

	result.trampoline = internalMemory.alloc(skeleton.byteCode.byteCodeLength + 5);
	memcpy(result.trampoline, skeleton.byteCode.byteCode, skeleton.byteCode.byteCodeLength);
	for (int i = 0; i < skeleton.byteCode.jumpsSize; i++) {
		JumpTarget &jump = skeleton.byteCode.jumps[i];
		auto location = (unsigned *)&result.trampoline[jump.patchOffset];
		unsigned relative = jump.targetAddress - ((unsigned)location + 4);

		*location = relative;
	}
	SokuLib::TamperNearJmp((DWORD)&result.trampoline[skeleton.byteCode.byteCodeLength], (DWORD)result.location + result.patchSize);
	return result;
}

static void allocateTrampolines(std::vector<Patch, TrampolineAllocator> &result)
{
	result.reserve(std::size(patchList));
	for (auto &patch : patchList)
		result.push_back(compilePatch(patch));
}

template<typename T>
static void getPatchList(const T &skeletons, std::vector<Patch *, PatchListAllocator> &result)
{
	result.reserve(std::size(skeletons));
	for (auto &skeleton : skeletons)
		result.push_back(&compiledPatches[skeleton]);
}

void initPatches()
{
	assert(trampolineAllocator.getIndex() == 0);
	allocateTrampolines(compiledPatches);
	getPatchList(skeletonsForObjectUpdate, objectUpdate_patches);
	getPatchList(skeletonsForObjectInitializeAction, objectInitializeAction_patches);
	getPatchList(skeletonsForUpdate, update_patches);
	getPatchList(skeletonsForInitializeAction, initializeAction_patches);
	getPatchList(skeletonsForInitialize, initialize_patches);
	getPatchList(skeletonsForHandleInputs, handleInputs_patches);
	getPatchList(skeletonsForVUnknown58, VUnknown58_patches);
	getPatchList(skeletonsForVUnknown5C, VUnknown5C_patches);
	getPatchList(skeletonsForVUnknown60, VUnknown60_patches);
	printf("Internal memory used %zu/13225\n", internalMemory.getIndex());
	assert(internalMemory.getIndex() == 13225);
}

void clearPatches()
{
	compiledPatches.clear();
	objectUpdate_patches.clear();
	objectInitializeAction_patches.clear();
	update_patches.clear();
	initializeAction_patches.clear();
	initialize_patches.clear();
	handleInputs_patches.clear();
	VUnknown58_patches.clear();
	VUnknown5C_patches.clear();
	VUnknown60_patches.clear();
}
